<asdoc>

<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 KeyExchanges
 
 An enumeration of key exchange methods defined by TLS
 ( right now, only RSA is actually implemented )
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='KeyExchanges' fullname='com.hurlant.crypto.tls:KeyExchanges' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/KeyExchanges.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='useRSA' fullname='com.hurlant.crypto.tls:KeyExchanges/useRSA' isStatic='true' isFinal='false' isOverride='false'  param_names='p' param_types='uint' param_defaults='undefined' result_type='Boolean'>
</method>
<field name='DHE_DSS' fullname='com.hurlant.crypto.tls:KeyExchanges/DHE_DSS' type='uint' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='DHE_RSA' fullname='com.hurlant.crypto.tls:KeyExchanges/DHE_RSA' type='uint' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='DH_DSS' fullname='com.hurlant.crypto.tls:KeyExchanges/DH_DSS' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='DH_RSA' fullname='com.hurlant.crypto.tls:KeyExchanges/DH_RSA' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='DH_anon' fullname='com.hurlant.crypto.tls:KeyExchanges/DH_anon' type='uint' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='NULL' fullname='com.hurlant.crypto.tls:KeyExchanges/NULL' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='RSA' fullname='com.hurlant.crypto.tls:KeyExchanges/RSA' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 IConnectionState
 
 Interface for TLS/SSL Connection states.
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<interfaceRec name='IConnectionState' fullname='com.hurlant.crypto.tls:IConnectionState' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/IConnectionState.as' namespace='com.hurlant.crypto.tls' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='decrypt' fullname='com.hurlant.crypto.tls:IConnectionState/com.hurlant.crypto.tls:IConnectionState:decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='type;length;p' param_types='uint;uint;flash.utils:ByteArray' param_defaults='undefined;undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.tls:IConnectionState/com.hurlant.crypto.tls:IConnectionState:encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='type;p' param_types='uint;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 ISecurityParameters
 
 This class encapsulates all the security parameters that get negotiated
 during the TLS handshake. It also holds all the key derivation methods.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<interfaceRec name='ISecurityParameters' fullname='com.hurlant.crypto.tls:ISecurityParameters' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/ISecurityParameters.as' namespace='com.hurlant.crypto.tls' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='computeCertificateVerify' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:computeCertificateVerify' isStatic='false' isFinal='false' isOverride='false'  param_names='side;handshakeRecords' param_types='uint;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='computeVerifyData' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:computeVerifyData' isStatic='false' isFinal='false' isOverride='false'  param_names='side;handshakeMessages' param_types='uint;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='getBulkCipher' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:getBulkCipher' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getCipherType' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:getCipherType' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getConnectionStates' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:getConnectionStates' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='getMacAlgorithm' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:getMacAlgorithm' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='reset' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:reset' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setCipher' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:setCipher' isStatic='false' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='setClientRandom' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:setClientRandom' isStatic='false' isFinal='false' isOverride='false'  param_names='secret' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='setCompression' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:setCompression' isStatic='false' isFinal='false' isOverride='false'  param_names='algo' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='setPreMasterSecret' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:setPreMasterSecret' isStatic='false' isFinal='false' isOverride='false'  param_names='secret' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='setServerRandom' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:setServerRandom' isStatic='false' isFinal='false' isOverride='false'  param_names='secret' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='useRSA' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:useRSA/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='version' fullname='com.hurlant.crypto.tls:ISecurityParameters/com.hurlant.crypto.tls:ISecurityParameters:version/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 CipherSuites
 
 An enumeration of cipher-suites available for TLS to use, along with
 their properties, and some convenience methods
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='CipherSuites' fullname='com.hurlant.crypto.tls:CipherSuites' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/CipherSuites.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='CipherSuites' fullname='com.hurlant.crypto.tls:CipherSuites/CipherSuites' isStatic='false' isFinal='false' isOverride='false'  param_names='cipher;hash;key' param_types='uint;uint;uint' param_defaults='undefined;undefined;undefined' result_type='*'>
</method>
<method name='getBulkCipher' fullname='com.hurlant.crypto.tls:CipherSuites/getBulkCipher' isStatic='true' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='uint'>
</method>
<method name='getDefaultSuites' fullname='com.hurlant.crypto.tls:CipherSuites/getDefaultSuites' isStatic='true' isFinal='false' isOverride='false'  result_type='Array'>
</method>
<method name='getKeyExchange' fullname='com.hurlant.crypto.tls:CipherSuites/getKeyExchange' isStatic='true' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='uint'>
</method>
<method name='getMac' fullname='com.hurlant.crypto.tls:CipherSuites/getMac' isStatic='true' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='uint'>
</method>
<method name='getProp' fullname='com.hurlant.crypto.tls:CipherSuites/private:getProp' isStatic='true' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='com.hurlant.crypto.tls:CipherSuites'>
</method>
<method name='init' fullname='com.hurlant.crypto.tls:CipherSuites/private:init' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0013' >
</field>
<field name='TLS_DHE_DSS_WITH_AES_128_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DHE_DSS_WITH_AES_128_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0032' >
</field>
<field name='TLS_DHE_DSS_WITH_AES_256_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DHE_DSS_WITH_AES_256_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0038' >
</field>
<field name='TLS_DHE_DSS_WITH_DES_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DHE_DSS_WITH_DES_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0012' >
</field>
<field name='TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0016' >
</field>
<field name='TLS_DHE_RSA_WITH_AES_128_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DHE_RSA_WITH_AES_128_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0033' >
</field>
<field name='TLS_DHE_RSA_WITH_AES_256_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DHE_RSA_WITH_AES_256_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0039' >
</field>
<field name='TLS_DHE_RSA_WITH_DES_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DHE_RSA_WITH_DES_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0015' >
</field>
<field name='TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x000D' >
</field>
<field name='TLS_DH_DSS_WITH_AES_128_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DH_DSS_WITH_AES_128_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0030' >
</field>
<field name='TLS_DH_DSS_WITH_AES_256_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DH_DSS_WITH_AES_256_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0036' >
</field>
<field name='TLS_DH_DSS_WITH_DES_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DH_DSS_WITH_DES_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x000C' >
</field>
<field name='TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0010' >
</field>
<field name='TLS_DH_RSA_WITH_AES_128_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DH_RSA_WITH_AES_128_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0031' >
</field>
<field name='TLS_DH_RSA_WITH_AES_256_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DH_RSA_WITH_AES_256_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0037' >
</field>
<field name='TLS_DH_RSA_WITH_DES_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DH_RSA_WITH_DES_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x000F' >
</field>
<field name='TLS_DH_anon_WITH_3DES_EDE_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DH_anon_WITH_3DES_EDE_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x001B' >
</field>
<field name='TLS_DH_anon_WITH_AES_128_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DH_anon_WITH_AES_128_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0034' >
</field>
<field name='TLS_DH_anon_WITH_AES_256_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DH_anon_WITH_AES_256_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x003A' >
</field>
<field name='TLS_DH_anon_WITH_DES_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DH_anon_WITH_DES_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x001A' >
</field>
<field name='TLS_DH_anon_WITH_RC4_128_MD5' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_DH_anon_WITH_RC4_128_MD5' type='uint' isStatic='true' isConst='true' defaultValue='0x0018' >
</field>
<field name='TLS_NULL_WITH_NULL_NULL' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_NULL_WITH_NULL_NULL' type='uint' isStatic='true' isConst='true' defaultValue='0x0000' >
</field>
<field name='TLS_RSA_WITH_3DES_EDE_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_RSA_WITH_3DES_EDE_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x000A' >
</field>
<field name='TLS_RSA_WITH_AES_128_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_RSA_WITH_AES_128_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x002F' >
</field>
<field name='TLS_RSA_WITH_AES_256_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_RSA_WITH_AES_256_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0035' >
</field>
<field name='TLS_RSA_WITH_DES_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_RSA_WITH_DES_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0009' >
</field>
<field name='TLS_RSA_WITH_IDEA_CBC_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_RSA_WITH_IDEA_CBC_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0007' >
</field>
<field name='TLS_RSA_WITH_NULL_MD5' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_RSA_WITH_NULL_MD5' type='uint' isStatic='true' isConst='true' defaultValue='0x0001' >
</field>
<field name='TLS_RSA_WITH_NULL_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_RSA_WITH_NULL_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0002' >
</field>
<field name='TLS_RSA_WITH_RC4_128_MD5' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_RSA_WITH_RC4_128_MD5' type='uint' isStatic='true' isConst='true' defaultValue='0x0004' >
</field>
<field name='TLS_RSA_WITH_RC4_128_SHA' fullname='com.hurlant.crypto.tls:CipherSuites/TLS_RSA_WITH_RC4_128_SHA' type='uint' isStatic='true' isConst='true' defaultValue='0x0005' >
</field>
<field name='_props' fullname='com.hurlant.crypto.tls:CipherSuites/private:_props' type='Array' isStatic='true' isConst='false' >
</field>
<field name='cipher' fullname='com.hurlant.crypto.tls:CipherSuites/cipher' type='uint' isStatic='false' isConst='false' >
</field>
<field name='hash' fullname='com.hurlant.crypto.tls:CipherSuites/hash' type='uint' isStatic='false' isConst='false' >
</field>
<field name='key' fullname='com.hurlant.crypto.tls:CipherSuites/key' type='uint' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 TLSError
 
 A error that can be thrown when something wrong happens in the TLS protocol.
 This is handled in TLSEngine by generating a TLS ALERT as appropriate.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='TLSError' fullname='com.hurlant.crypto.tls:TLSError' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/TLSError.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='Error' isFinal='false' isDynamic='false' >
</classRec>
<method name='TLSError' fullname='com.hurlant.crypto.tls:TLSError/TLSError' isStatic='false' isFinal='false' isOverride='false'  param_names='message;id' param_types='String;int' param_defaults='undefined;undefined' result_type='*'>
</method>
<field name='access_denied' fullname='com.hurlant.crypto.tls:TLSError/access_denied' type='uint' isStatic='true' isConst='true' defaultValue='49' >
</field>
<field name='bad_certificate' fullname='com.hurlant.crypto.tls:TLSError/bad_certificate' type='uint' isStatic='true' isConst='true' defaultValue='42' >
</field>
<field name='bad_record_mac' fullname='com.hurlant.crypto.tls:TLSError/bad_record_mac' type='uint' isStatic='true' isConst='true' defaultValue='20' >
</field>
<field name='certificate_expired' fullname='com.hurlant.crypto.tls:TLSError/certificate_expired' type='uint' isStatic='true' isConst='true' defaultValue='45' >
</field>
<field name='certificate_revoked' fullname='com.hurlant.crypto.tls:TLSError/certificate_revoked' type='uint' isStatic='true' isConst='true' defaultValue='44' >
</field>
<field name='certificate_unknown' fullname='com.hurlant.crypto.tls:TLSError/certificate_unknown' type='uint' isStatic='true' isConst='true' defaultValue='46' >
</field>
<field name='close_notify' fullname='com.hurlant.crypto.tls:TLSError/close_notify' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='decode_error' fullname='com.hurlant.crypto.tls:TLSError/decode_error' type='uint' isStatic='true' isConst='true' defaultValue='50' >
</field>
<field name='decompression_failure' fullname='com.hurlant.crypto.tls:TLSError/decompression_failure' type='uint' isStatic='true' isConst='true' defaultValue='30' >
</field>
<field name='decrypt_error' fullname='com.hurlant.crypto.tls:TLSError/decrypt_error' type='uint' isStatic='true' isConst='true' defaultValue='51' >
</field>
<field name='decryption_failed' fullname='com.hurlant.crypto.tls:TLSError/decryption_failed' type='uint' isStatic='true' isConst='true' defaultValue='21' >
</field>
<field name='handshake_failure' fullname='com.hurlant.crypto.tls:TLSError/handshake_failure' type='uint' isStatic='true' isConst='true' defaultValue='40' >
</field>
<field name='illegal_parameter' fullname='com.hurlant.crypto.tls:TLSError/illegal_parameter' type='uint' isStatic='true' isConst='true' defaultValue='47' >
</field>
<field name='insufficient_security' fullname='com.hurlant.crypto.tls:TLSError/insufficient_security' type='uint' isStatic='true' isConst='true' defaultValue='71' >
</field>
<field name='internal_error' fullname='com.hurlant.crypto.tls:TLSError/internal_error' type='uint' isStatic='true' isConst='true' defaultValue='80' >
</field>
<field name='no_renegotiation' fullname='com.hurlant.crypto.tls:TLSError/no_renegotiation' type='uint' isStatic='true' isConst='true' defaultValue='100' >
</field>
<field name='protocol_version' fullname='com.hurlant.crypto.tls:TLSError/protocol_version' type='uint' isStatic='true' isConst='true' defaultValue='70' >
</field>
<field name='record_overflow' fullname='com.hurlant.crypto.tls:TLSError/record_overflow' type='uint' isStatic='true' isConst='true' defaultValue='22' >
</field>
<field name='unexpected_message' fullname='com.hurlant.crypto.tls:TLSError/unexpected_message' type='uint' isStatic='true' isConst='true' defaultValue='10' >
</field>
<field name='unknown_ca' fullname='com.hurlant.crypto.tls:TLSError/unknown_ca' type='uint' isStatic='true' isConst='true' defaultValue='48' >
</field>
<field name='unsupported_certificate' fullname='com.hurlant.crypto.tls:TLSError/unsupported_certificate' type='uint' isStatic='true' isConst='true' defaultValue='43' >
</field>
<field name='user_canceled' fullname='com.hurlant.crypto.tls:TLSError/user_canceled' type='uint' isStatic='true' isConst='true' defaultValue='90' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 SSLEvent
 
 This is used by TLSEngine to let the application layer know
 when we're ready for sending, or have received application data
 This Event was created by Bobby Parker to support SSL 3.0.
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='SSLEvent' fullname='com.hurlant.crypto.tls:SSLEvent' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/SSLEvent.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='SSLEvent' fullname='com.hurlant.crypto.tls:SSLEvent/SSLEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;data' param_types='String;flash.utils:ByteArray' param_defaults='undefined;null' result_type='*'>
</method>
<field name='DATA' fullname='com.hurlant.crypto.tls:SSLEvent/DATA' type='String' isStatic='true' isConst='true' defaultValue='data' >
</field>
<field name='READY' fullname='com.hurlant.crypto.tls:SSLEvent/READY' type='String' isStatic='true' isConst='true' defaultValue='ready' >
</field>
<field name='data' fullname='com.hurlant.crypto.tls:SSLEvent/data' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 TLSEvent
 
 This is used by TLSEngine to let the application layer know
 when we're ready for sending, or have received application data
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='TLSEvent' fullname='com.hurlant.crypto.tls:TLSEvent' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/TLSEvent.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='TLSEvent' fullname='com.hurlant.crypto.tls:TLSEvent/TLSEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;data' param_types='String;flash.utils:ByteArray' param_defaults='undefined;null' result_type='*'>
</method>
<field name='DATA' fullname='com.hurlant.crypto.tls:TLSEvent/DATA' type='String' isStatic='true' isConst='true' defaultValue='data' >
</field>
<field name='PROMPT_ACCEPT_CERT' fullname='com.hurlant.crypto.tls:TLSEvent/PROMPT_ACCEPT_CERT' type='String' isStatic='true' isConst='true' defaultValue='promptAcceptCert' >
</field>
<field name='READY' fullname='com.hurlant.crypto.tls:TLSEvent/READY' type='String' isStatic='true' isConst='true' defaultValue='ready' >
</field>
<field name='data' fullname='com.hurlant.crypto.tls:TLSEvent/data' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 TLSEvent
 
 This is used by TLSEngine to let the application layer know
 when we're ready for sending, or have received application data
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='TLSSocketEvent' fullname='com.hurlant.crypto.tls:TLSSocketEvent' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/TLSSocketEvent.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='flash.events:Event' isFinal='false' isDynamic='false' >
</classRec>
<method name='TLSSocketEvent' fullname='com.hurlant.crypto.tls:TLSSocketEvent/TLSSocketEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='cert' param_types='com.hurlant.crypto.cert:X509Certificate' param_defaults='null' result_type='*'>
</method>
<field name='PROMPT_ACCEPT_CERT' fullname='com.hurlant.crypto.tls:TLSSocketEvent/PROMPT_ACCEPT_CERT' type='String' isStatic='true' isConst='true' defaultValue='promptAcceptCert' >
</field>
<field name='cert' fullname='com.hurlant.crypto.tls:TLSSocketEvent/cert' type='com.hurlant.crypto.cert:X509Certificate' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 MACs
 
 An enumeration of MACs implemented for TLS 1.0/SSL 3.0
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='MACs' fullname='com.hurlant.crypto.tls:MACs' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/MACs.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='getHMAC' fullname='com.hurlant.crypto.tls:MACs/getHMAC' isStatic='true' isFinal='false' isOverride='false'  param_names='hash' param_types='uint' param_defaults='undefined' result_type='com.hurlant.crypto.hash:HMAC'>
</method>
<method name='getHashSize' fullname='com.hurlant.crypto.tls:MACs/getHashSize' isStatic='true' isFinal='false' isOverride='false'  param_names='hash' param_types='uint' param_defaults='undefined' result_type='uint'>
</method>
<method name='getMAC' fullname='com.hurlant.crypto.tls:MACs/getMAC' isStatic='true' isFinal='false' isOverride='false'  param_names='hash' param_types='uint' param_defaults='undefined' result_type='com.hurlant.crypto.hash:MAC'>
</method>
<method name='getPadSize' fullname='com.hurlant.crypto.tls:MACs/getPadSize' isStatic='true' isFinal='false' isOverride='false'  param_names='hash' param_types='uint' param_defaults='undefined' result_type='int'>
</method>
<field name='MD5' fullname='com.hurlant.crypto.tls:MACs/MD5' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='NULL' fullname='com.hurlant.crypto.tls:MACs/NULL' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='SHA1' fullname='com.hurlant.crypto.tls:MACs/SHA1' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 TLSConnectionState
 
 This class encapsulates the read or write state of a TLS connection,
 and implementes the encrypting and hashing of packets. 
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='SSLConnectionState' fullname='com.hurlant.crypto.tls:SSLConnectionState' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/SSLConnectionState.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='Object' interfaces='com.hurlant.crypto.tls:IConnectionState' isFinal='false' isDynamic='false' >
</classRec>
<method name='SSLConnectionState' fullname='com.hurlant.crypto.tls:SSLConnectionState/SSLConnectionState' isStatic='false' isFinal='false' isOverride='false'  param_names='bulkCipher;cipherType;macAlgorithm;mac_enc;key;IV' param_types='uint;uint;uint;flash.utils:ByteArray;flash.utils:ByteArray;flash.utils:ByteArray' param_defaults='0;0;0;null;null;null' result_type='*'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.tls:SSLConnectionState/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='type;length;p' param_types='uint;uint;flash.utils:ByteArray' param_defaults='undefined;undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.tls:SSLConnectionState/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='type;p' param_types='uint;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<field name='CIPHER_IV' fullname='com.hurlant.crypto.tls:SSLConnectionState/private:CIPHER_IV' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='CIPHER_key' fullname='com.hurlant.crypto.tls:SSLConnectionState/private:CIPHER_key' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='MAC_write_secret' fullname='com.hurlant.crypto.tls:SSLConnectionState/private:MAC_write_secret' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='bulkCipher' fullname='com.hurlant.crypto.tls:SSLConnectionState/private:bulkCipher' type='uint' isStatic='false' isConst='false' >
</field>
<field name='cipherType' fullname='com.hurlant.crypto.tls:SSLConnectionState/private:cipherType' type='uint' isStatic='false' isConst='false' >
</field>
<field name='cipher' fullname='com.hurlant.crypto.tls:SSLConnectionState/private:cipher' type='com.hurlant.crypto.symmetric:ICipher' isStatic='false' isConst='false' >
</field>
<field name='ivmode' fullname='com.hurlant.crypto.tls:SSLConnectionState/private:ivmode' type='com.hurlant.crypto.symmetric:IVMode' isStatic='false' isConst='false' >
</field>
<field name='macAlgorithm' fullname='com.hurlant.crypto.tls:SSLConnectionState/private:macAlgorithm' type='uint' isStatic='false' isConst='false' >
</field>
<field name='mac' fullname='com.hurlant.crypto.tls:SSLConnectionState/private:mac' type='com.hurlant.crypto.hash:MAC' isStatic='false' isConst='false' >
</field>
<field name='seq_hi' fullname='com.hurlant.crypto.tls:SSLConnectionState/private:seq_hi' type='uint' isStatic='false' isConst='false' defaultValue='0x0' >
</field>
<field name='seq_lo' fullname='com.hurlant.crypto.tls:SSLConnectionState/private:seq_lo' type='uint' isStatic='false' isConst='false' defaultValue='0x0' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 BulkCiphers
 
 An enumeration of bulk ciphers available for TLS, along with their properties,
 with a few convenience methods to go with it.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='BulkCiphers' fullname='com.hurlant.crypto.tls:BulkCiphers' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/BulkCiphers.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='BulkCiphers' fullname='com.hurlant.crypto.tls:BulkCiphers/BulkCiphers' isStatic='false' isFinal='false' isOverride='false'  param_names='t;kb;ekb;fkb;ivs;bs' param_types='uint;uint;uint;uint;uint;uint' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='*'>
</method>
<method name='getBlockSize' fullname='com.hurlant.crypto.tls:BulkCiphers/getBlockSize' isStatic='true' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='uint'>
</method>
<method name='getCipher' fullname='com.hurlant.crypto.tls:BulkCiphers/getCipher' isStatic='true' isFinal='false' isOverride='false'  param_names='cipher;key;proto' param_types='uint;flash.utils:ByteArray;uint' param_defaults='undefined;undefined;undefined' result_type='com.hurlant.crypto.symmetric:ICipher'>
</method>
<method name='getEffectiveKeyBits' fullname='com.hurlant.crypto.tls:BulkCiphers/getEffectiveKeyBits' isStatic='true' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='uint'>
</method>
<method name='getExpandedKeyBytes' fullname='com.hurlant.crypto.tls:BulkCiphers/getExpandedKeyBytes' isStatic='true' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='uint'>
</method>
<method name='getIVSize' fullname='com.hurlant.crypto.tls:BulkCiphers/getIVSize' isStatic='true' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='uint'>
</method>
<method name='getKeyBytes' fullname='com.hurlant.crypto.tls:BulkCiphers/getKeyBytes' isStatic='true' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='uint'>
</method>
<method name='getProp' fullname='com.hurlant.crypto.tls:BulkCiphers/private:getProp' isStatic='true' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='com.hurlant.crypto.tls:BulkCiphers'>
</method>
<method name='getType' fullname='com.hurlant.crypto.tls:BulkCiphers/getType' isStatic='true' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='uint'>
</method>
<method name='init' fullname='com.hurlant.crypto.tls:BulkCiphers/private:init' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='AES_128' fullname='com.hurlant.crypto.tls:BulkCiphers/AES_128' type='uint' isStatic='true' isConst='true' defaultValue='8' >
</field>
<field name='AES_256' fullname='com.hurlant.crypto.tls:BulkCiphers/AES_256' type='uint' isStatic='true' isConst='true' defaultValue='9' >
</field>
<field name='BLOCK_CIPHER' fullname='com.hurlant.crypto.tls:BulkCiphers/BLOCK_CIPHER' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='DES3_EDE_CBC' fullname='com.hurlant.crypto.tls:BulkCiphers/DES3_EDE_CBC' type='uint' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='DES40_CBC' fullname='com.hurlant.crypto.tls:BulkCiphers/DES40_CBC' type='uint' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='DES_CBC' fullname='com.hurlant.crypto.tls:BulkCiphers/DES_CBC' type='uint' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='IDEA_CBC' fullname='com.hurlant.crypto.tls:BulkCiphers/IDEA_CBC' type='uint' isStatic='true' isConst='true' defaultValue='7' >
</field>
<field name='IVSize' fullname='com.hurlant.crypto.tls:BulkCiphers/private:IVSize' type='uint' isStatic='false' isConst='false' >
</field>
<field name='NULL' fullname='com.hurlant.crypto.tls:BulkCiphers/NULL' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='RC2_CBC_40' fullname='com.hurlant.crypto.tls:BulkCiphers/RC2_CBC_40' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='RC4_128' fullname='com.hurlant.crypto.tls:BulkCiphers/RC4_128' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='RC4_40' fullname='com.hurlant.crypto.tls:BulkCiphers/RC4_40' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='STREAM_CIPHER' fullname='com.hurlant.crypto.tls:BulkCiphers/STREAM_CIPHER' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='_props' fullname='com.hurlant.crypto.tls:BulkCiphers/private:_props' type='Array' isStatic='true' isConst='false' >
</field>
<field name='algos' fullname='com.hurlant.crypto.tls:BulkCiphers/private:algos' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='blockSize' fullname='com.hurlant.crypto.tls:BulkCiphers/private:blockSize' type='uint' isStatic='false' isConst='false' >
</field>
<field name='effectiveKeyBits' fullname='com.hurlant.crypto.tls:BulkCiphers/private:effectiveKeyBits' type='uint' isStatic='false' isConst='false' >
</field>
<field name='expandedKeyBytes' fullname='com.hurlant.crypto.tls:BulkCiphers/private:expandedKeyBytes' type='uint' isStatic='false' isConst='false' >
</field>
<field name='keyBytes' fullname='com.hurlant.crypto.tls:BulkCiphers/private:keyBytes' type='uint' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='com.hurlant.crypto.tls:BulkCiphers/private:type' type='uint' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 TLSConnectionState
 
 This class encapsulates the read or write state of a TLS connection,
 and implementes the encrypting and hashing of packets. 
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='TLSConnectionState' fullname='com.hurlant.crypto.tls:TLSConnectionState' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/TLSConnectionState.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='Object' interfaces='com.hurlant.crypto.tls:IConnectionState' isFinal='false' isDynamic='false' >
</classRec>
<method name='TLSConnectionState' fullname='com.hurlant.crypto.tls:TLSConnectionState/TLSConnectionState' isStatic='false' isFinal='false' isOverride='false'  param_names='bulkCipher;cipherType;macAlgorithm;mac;key;IV' param_types='uint;uint;uint;flash.utils:ByteArray;flash.utils:ByteArray;flash.utils:ByteArray' param_defaults='0;0;0;null;null;null' result_type='*'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.tls:TLSConnectionState/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='type;length;p' param_types='uint;uint;flash.utils:ByteArray' param_defaults='undefined;undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.tls:TLSConnectionState/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='type;p' param_types='uint;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<field name='CIPHER_IV' fullname='com.hurlant.crypto.tls:TLSConnectionState/private:CIPHER_IV' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='CIPHER_key' fullname='com.hurlant.crypto.tls:TLSConnectionState/private:CIPHER_key' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='MAC_write_secret' fullname='com.hurlant.crypto.tls:TLSConnectionState/private:MAC_write_secret' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='bulkCipher' fullname='com.hurlant.crypto.tls:TLSConnectionState/private:bulkCipher' type='uint' isStatic='false' isConst='false' >
</field>
<field name='cipherType' fullname='com.hurlant.crypto.tls:TLSConnectionState/private:cipherType' type='uint' isStatic='false' isConst='false' >
</field>
<field name='cipher' fullname='com.hurlant.crypto.tls:TLSConnectionState/private:cipher' type='com.hurlant.crypto.symmetric:ICipher' isStatic='false' isConst='false' >
</field>
<field name='hmac' fullname='com.hurlant.crypto.tls:TLSConnectionState/private:hmac' type='com.hurlant.crypto.hash:HMAC' isStatic='false' isConst='false' >
</field>
<field name='ivmode' fullname='com.hurlant.crypto.tls:TLSConnectionState/private:ivmode' type='com.hurlant.crypto.symmetric:IVMode' isStatic='false' isConst='false' >
</field>
<field name='macAlgorithm' fullname='com.hurlant.crypto.tls:TLSConnectionState/private:macAlgorithm' type='uint' isStatic='false' isConst='false' >
</field>
<field name='seq_hi' fullname='com.hurlant.crypto.tls:TLSConnectionState/private:seq_hi' type='uint' isStatic='false' isConst='false' >
</field>
<field name='seq_lo' fullname='com.hurlant.crypto.tls:TLSConnectionState/private:seq_lo' type='uint' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 TLSConfig
 
 A set of configuration parameters for use by a TLSSocket or a TLSEngine.
 Most parameters are optional and will be set to appropriate default values for most use.
 
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='TLSConfig' fullname='com.hurlant.crypto.tls:TLSConfig' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/TLSConfig.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='TLSConfig' fullname='com.hurlant.crypto.tls:TLSConfig/TLSConfig' isStatic='false' isFinal='false' isOverride='false'  param_names='entity;cipherSuites;compressions;certificate;privateKey;CAStore;ver' param_types='uint;Array;Array;flash.utils:ByteArray;com.hurlant.crypto.rsa:RSAKey;com.hurlant.crypto.cert:X509CertificateCollection;uint' param_defaults='undefined;null;null;null;null;null;0x00' result_type='*'>
</method>
<method name='setPEMCertificate' fullname='com.hurlant.crypto.tls:TLSConfig/setPEMCertificate' isStatic='false' isFinal='false' isOverride='false'  param_names='cert;key' param_types='String;String' param_defaults='undefined;null' result_type='void'>
</method>
<field name='CAStore' fullname='com.hurlant.crypto.tls:TLSConfig/CAStore' type='com.hurlant.crypto.cert:X509CertificateCollection' isStatic='false' isConst='false' >
</field>
<field name='certificate' fullname='com.hurlant.crypto.tls:TLSConfig/certificate' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='cipherSuites' fullname='com.hurlant.crypto.tls:TLSConfig/cipherSuites' type='Array' isStatic='false' isConst='false' >
</field>
<field name='compressions' fullname='com.hurlant.crypto.tls:TLSConfig/compressions' type='Array' isStatic='false' isConst='false' >
</field>
<field name='entity' fullname='com.hurlant.crypto.tls:TLSConfig/entity' type='uint' isStatic='false' isConst='false' >
</field>
<field name='ignoreCommonNameMismatch' fullname='com.hurlant.crypto.tls:TLSConfig/ignoreCommonNameMismatch' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='localKeyStore' fullname='com.hurlant.crypto.tls:TLSConfig/localKeyStore' type='com.hurlant.crypto.cert:X509CertificateCollection' isStatic='false' isConst='false' >
</field>
<field name='privateKey' fullname='com.hurlant.crypto.tls:TLSConfig/privateKey' type='com.hurlant.crypto.rsa:RSAKey' isStatic='false' isConst='false' >
</field>
<field name='promptUserForAcceptCert' fullname='com.hurlant.crypto.tls:TLSConfig/promptUserForAcceptCert' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='trustAllCertificates' fullname='com.hurlant.crypto.tls:TLSConfig/trustAllCertificates' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='trustSelfSignedCertificates' fullname='com.hurlant.crypto.tls:TLSConfig/trustSelfSignedCertificates' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='version' fullname='com.hurlant.crypto.tls:TLSConfig/version' type='uint' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 TLSEngine
 
 A TLS protocol implementation.
 See comment below for some details.
 Copyright (c) 2007 Henri Torgemane
 
 Patched(heavily) by Bobby Parker (shortwave&#64;gmail.com)
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='TLSEngine' fullname='com.hurlant.crypto.tls:TLSEngine' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/TLSEngine.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='flash.events:EventDispatcher' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 The heart of the TLS protocol.
	 This class can work in server or client mode.
	 
	 This doesn't fully implement the TLS protocol.
	 
	 Things missing that I'd like to add:
	 - support for client-side certificates
	 - general code clean-up to make sure we don't have gaping securite holes
	 
	 Things that aren't there that I won't add:
	 - support for "export" cypher suites (deprecated in later TLS versions)
	 - support for "anon" cypher suites (deprecated in later TLS versions)
	 
	 Things that I'm unsure about adding later:
	 - compression. Compressing encrypted streams is barely worth the CPU cycles.
	 - diffie-hellman based key exchange mechanisms. Nifty, but would we miss it?
	 
	 ]]></description>
<author><![CDATA[henri
	 
	 ]]></author>
<metadata>
	<Event owner='com.hurlant.crypto.tls:TLSEngine' name='data' type='com.hurlant.crypto.tls.TLSEvent' >
	</Event>
</metadata>
<metadata>
	<Event owner='com.hurlant.crypto.tls:TLSEngine' name='ready' type='com.hurlant.crypto.tls.TLSEvent' >
	</Event>
</metadata>
<metadata>
	<Event owner='com.hurlant.crypto.tls:TLSEngine' name='socketData' type='flash.events.ProgressEvent' >
	</Event>
</metadata>
<metadata>
	<Event owner='com.hurlant.crypto.tls:TLSEngine' name='ioError' type='flash.events.IOErrorEvent' >
	</Event>
</metadata>
<metadata>
	<Event owner='com.hurlant.crypto.tls:TLSEngine' name='close' type='flash.events.Event' >
	</Event>
</metadata>
</classRec>
<method name='TLSEngine' fullname='com.hurlant.crypto.tls:TLSEngine/com.hurlant.crypto.tls:TLSEngine' isStatic='false' isFinal='false' isOverride='false'  param_names='config;iStream;oStream;otherIdentity' param_types='com.hurlant.crypto.tls:TLSConfig;flash.utils:IDataInput;flash.utils:IDataOutput;String' param_defaults='undefined;undefined;undefined;null' result_type='*'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[config		A TLSConfig instance describing how we're supposed to work
		 ]]></param>
<param><![CDATA[iStream		An input stream to read TLS data from
		 ]]></param>
<param><![CDATA[oStream		An output stream to write TLS data to
		 ]]></param>
<param><![CDATA[otherIdentity	An optional identifier. If set, this will be checked against the Subject CN of the other side's certificate.
		 
		 ]]></param>
</method>
<method name='acceptPeerCertificate' fullname='com.hurlant.crypto.tls:TLSEngine/acceptPeerCertificate' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='close' fullname='com.hurlant.crypto.tls:TLSEngine/close' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='com.hurlant.crypto.tls:TLSError' param_defaults='null' result_type='void'>
</method>
<method name='commitWrite' fullname='com.hurlant.crypto.tls:TLSEngine/private:commitWrite' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='dataAvailable' fullname='com.hurlant.crypto.tls:TLSEngine/dataAvailable' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='*' param_defaults='null' result_type='void'>
</method>
<method name='findMatch' fullname='com.hurlant.crypto.tls:TLSEngine/private:findMatch' isStatic='false' isFinal='false' isOverride='false'  param_names='a1;a2' param_types='Array;Array' param_defaults='undefined;undefined' result_type='int'>
</method>
<method name='handleTLSError' fullname='com.hurlant.crypto.tls:TLSEngine/private:handleTLSError' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='com.hurlant.crypto.tls:TLSError' param_defaults='undefined' result_type='void'>
</method>
<method name='loadCertificates' fullname='com.hurlant.crypto.tls:TLSEngine/private:loadCertificates' isStatic='false' isFinal='false' isOverride='false'  param_names='rec' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Vaguely gross function that parses a RSA key out of a certificate.
		 
		 As long as that certificate looks just the way we expect it to.
		 
		 ]]></description>
</method>
<method name='notifyStateError' fullname='com.hurlant.crypto.tls:TLSEngine/private:notifyStateError' isStatic='false' isFinal='false' isOverride='false'  param_names='rec' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Throw an error when the detected handshake state isn't a valid state for the given entity type (client vs. server, etc. ).
		 This really should abort the handshake, since there's no case in which a server should EVER be confused about the type of entity it is. BP
		 ]]></description>
</method>
<method name='parseAlert' fullname='com.hurlant.crypto.tls:TLSEngine/private:parseAlert' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='parseApplicationData' fullname='com.hurlant.crypto.tls:TLSEngine/private:parseApplicationData' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='parseChangeCipherSpec' fullname='com.hurlant.crypto.tls:TLSEngine/private:parseChangeCipherSpec' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='parseClientKeyExchange' fullname='com.hurlant.crypto.tls:TLSEngine/private:parseClientKeyExchange' isStatic='false' isFinal='false' isOverride='false'  param_names='rec' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 two unimplemented functions
		 ]]></description>
</method>
<method name='parseHandshakeClientHello' fullname='com.hurlant.crypto.tls:TLSEngine/private:parseHandshakeClientHello' isStatic='false' isFinal='false' isOverride='false'  param_names='rec' param_types='flash.utils:IDataInput' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		  Handle HANDSHAKE_CLIENT_HELLO - server side
		 ]]></description>
</method>
<method name='parseHandshakeClientKeyExchange' fullname='com.hurlant.crypto.tls:TLSEngine/private:parseHandshakeClientKeyExchange' isStatic='false' isFinal='false' isOverride='false'  param_names='rec' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Handle a HANDSHAKE_CLIENT_KEY_EXCHANGE
		 ]]></description>
</method>
<method name='parseHandshakeHello' fullname='com.hurlant.crypto.tls:TLSEngine/private:parseHandshakeHello' isStatic='false' isFinal='false' isOverride='false'  param_names='rec' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Handle a HANDSHAKE_HELLO
		 ]]></description>
</method>
<method name='parseHandshakeServerHello' fullname='com.hurlant.crypto.tls:TLSEngine/private:parseHandshakeServerHello' isStatic='false' isFinal='false' isOverride='false'  param_names='rec' param_types='flash.utils:IDataInput' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 
		 Handle HANDSHAKE_SERVER_HELLO - client-side
		 ]]></description>
</method>
<method name='parseHandshake' fullname='com.hurlant.crypto.tls:TLSEngine/private:parseHandshake' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Handle the incoming handshake packet.
		 
		 ]]></description>
</method>
<method name='parseOneRecord' fullname='com.hurlant.crypto.tls:TLSEngine/private:parseOneRecord' isStatic='false' isFinal='false' isOverride='false'  param_names='type;length;p' param_types='uint;uint;flash.utils:ByteArray' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Modified to support the notion of a handler map(see above ), since it makes for better clarity (IMHO of course).
		 ]]></description>
</method>
<method name='parseRecord' fullname='com.hurlant.crypto.tls:TLSEngine/private:parseRecord' isStatic='false' isFinal='false' isOverride='false'  param_names='stream' param_types='flash.utils:IDataInput' param_defaults='undefined' result_type='void'>
</method>
<method name='parseServerKeyExchange' fullname='com.hurlant.crypto.tls:TLSEngine/private:parseServerKeyExchange' isStatic='false' isFinal='false' isOverride='false'  param_names='rec' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='rejectPeerCertificate' fullname='com.hurlant.crypto.tls:TLSEngine/rejectPeerCertificate' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='scheduleWrite' fullname='com.hurlant.crypto.tls:TLSEngine/private:scheduleWrite' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='sendApplicationData' fullname='com.hurlant.crypto.tls:TLSEngine/sendApplicationData' isStatic='false' isFinal='false' isOverride='false'  param_names='data;offset;length' param_types='flash.utils:ByteArray;uint;uint' param_defaults='undefined;0;0' result_type='void'>
</method>
<method name='sendCertificateVerify' fullname='com.hurlant.crypto.tls:TLSEngine/private:sendCertificateVerify' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='sendCertificate' fullname='com.hurlant.crypto.tls:TLSEngine/private:sendCertificate' isStatic='false' isFinal='false' isOverride='false'  param_names='r' param_types='flash.utils:ByteArray' param_defaults='null' result_type='void'>
</method>
<method name='sendChangeCipherSpec' fullname='com.hurlant.crypto.tls:TLSEngine/private:sendChangeCipherSpec' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='sendClientAck' fullname='com.hurlant.crypto.tls:TLSEngine/private:sendClientAck' isStatic='false' isFinal='false' isOverride='false'  param_names='rec' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='sendClientHello' fullname='com.hurlant.crypto.tls:TLSEngine/private:sendClientHello' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='sendClientKeyExchange' fullname='com.hurlant.crypto.tls:TLSEngine/private:sendClientKeyExchange' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='sendFinished' fullname='com.hurlant.crypto.tls:TLSEngine/private:sendFinished' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='sendHandshake' fullname='com.hurlant.crypto.tls:TLSEngine/private:sendHandshake' isStatic='false' isFinal='false' isOverride='false'  param_names='type;len;payload' param_types='uint;uint;flash.utils:IDataInput' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='sendRecord' fullname='com.hurlant.crypto.tls:TLSEngine/private:sendRecord' isStatic='false' isFinal='false' isOverride='false'  param_names='type;payload' param_types='uint;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='sendServerHelloDone' fullname='com.hurlant.crypto.tls:TLSEngine/private:sendServerHelloDone' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='sendServerHello' fullname='com.hurlant.crypto.tls:TLSEngine/private:sendServerHello' isStatic='false' isFinal='false' isOverride='false'  param_names='v' param_types='Object' param_defaults='undefined' result_type='void'>
</method>
<method name='setStateRespondWithCertificate' fullname='com.hurlant.crypto.tls:TLSEngine/private:setStateRespondWithCertificate' isStatic='false' isFinal='false' isOverride='false'  param_names='r' param_types='flash.utils:ByteArray' param_defaults='null' result_type='void'>
</method>
<method name='startHandshake' fullname='com.hurlant.crypto.tls:TLSEngine/private:startHandshake' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 The handshake is always started by the client.
		 ]]></description>
</method>
<method name='start' fullname='com.hurlant.crypto.tls:TLSEngine/start' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 This starts the TLS negotiation for a TLS Client.
		 
		 This is a no-op for a TLS Server.
		 
		 ]]></description>
</method>
<method name='verifyHandshake' fullname='com.hurlant.crypto.tls:TLSEngine/private:verifyHandshake' isStatic='false' isFinal='false' isOverride='false'  param_names='rec' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Test the server's Finished message for validity against the data we know about. Only slightly rewritten. BP
		 ]]></description>
</method>
<method name='peerCertificate' fullname='com.hurlant.crypto.tls:TLSEngine/peerCertificate/get' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.crypto.cert:X509Certificate'>
</method>
<field name='CLIENT' fullname='com.hurlant.crypto.tls:TLSEngine/CLIENT' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='HANDSHAKE_CERTIFICATE_REQUEST' fullname='com.hurlant.crypto.tls:TLSEngine/private:HANDSHAKE_CERTIFICATE_REQUEST' type='uint' isStatic='true' isConst='true' defaultValue='13' >
</field>
<field name='HANDSHAKE_CERTIFICATE_VERIFY' fullname='com.hurlant.crypto.tls:TLSEngine/private:HANDSHAKE_CERTIFICATE_VERIFY' type='uint' isStatic='true' isConst='true' defaultValue='15' >
</field>
<field name='HANDSHAKE_CERTIFICATE' fullname='com.hurlant.crypto.tls:TLSEngine/private:HANDSHAKE_CERTIFICATE' type='uint' isStatic='true' isConst='true' defaultValue='11' >
</field>
<field name='HANDSHAKE_CLIENT_HELLO' fullname='com.hurlant.crypto.tls:TLSEngine/private:HANDSHAKE_CLIENT_HELLO' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='HANDSHAKE_CLIENT_KEY_EXCHANGE' fullname='com.hurlant.crypto.tls:TLSEngine/private:HANDSHAKE_CLIENT_KEY_EXCHANGE' type='uint' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='HANDSHAKE_FINISHED' fullname='com.hurlant.crypto.tls:TLSEngine/private:HANDSHAKE_FINISHED' type='uint' isStatic='true' isConst='true' defaultValue='20' >
</field>
<field name='HANDSHAKE_HELLO_DONE' fullname='com.hurlant.crypto.tls:TLSEngine/private:HANDSHAKE_HELLO_DONE' type='uint' isStatic='true' isConst='true' defaultValue='14' >
</field>
<field name='HANDSHAKE_HELLO_REQUEST' fullname='com.hurlant.crypto.tls:TLSEngine/private:HANDSHAKE_HELLO_REQUEST' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='HANDSHAKE_SERVER_HELLO' fullname='com.hurlant.crypto.tls:TLSEngine/private:HANDSHAKE_SERVER_HELLO' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='HANDSHAKE_SERVER_KEY_EXCHANGE' fullname='com.hurlant.crypto.tls:TLSEngine/private:HANDSHAKE_SERVER_KEY_EXCHANGE' type='uint' isStatic='true' isConst='true' defaultValue='12' >
</field>
<field name='PROTOCOL_ALERT' fullname='com.hurlant.crypto.tls:TLSEngine/private:PROTOCOL_ALERT' type='uint' isStatic='true' isConst='true' defaultValue='21' >
</field>
<field name='PROTOCOL_APPLICATION_DATA' fullname='com.hurlant.crypto.tls:TLSEngine/private:PROTOCOL_APPLICATION_DATA' type='uint' isStatic='true' isConst='true' defaultValue='23' >
</field>
<field name='PROTOCOL_CHANGE_CIPHER_SPEC' fullname='com.hurlant.crypto.tls:TLSEngine/private:PROTOCOL_CHANGE_CIPHER_SPEC' type='uint' isStatic='true' isConst='true' defaultValue='20' >
</field>
<field name='PROTOCOL_HANDSHAKE' fullname='com.hurlant.crypto.tls:TLSEngine/private:PROTOCOL_HANDSHAKE' type='uint' isStatic='true' isConst='true' defaultValue='22' >
</field>
<field name='SERVER' fullname='com.hurlant.crypto.tls:TLSEngine/SERVER' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='STATE_CLOSED' fullname='com.hurlant.crypto.tls:TLSEngine/private:STATE_CLOSED' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='STATE_NEGOTIATING' fullname='com.hurlant.crypto.tls:TLSEngine/private:STATE_NEGOTIATING' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='STATE_NEW' fullname='com.hurlant.crypto.tls:TLSEngine/private:STATE_NEW' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='STATE_READY' fullname='com.hurlant.crypto.tls:TLSEngine/private:STATE_READY' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='_config' fullname='com.hurlant.crypto.tls:TLSEngine/private:_config' type='com.hurlant.crypto.tls:TLSConfig' isStatic='false' isConst='false' >
</field>
<field name='_currentReadState' fullname='com.hurlant.crypto.tls:TLSEngine/private:_currentReadState' type='com.hurlant.crypto.tls:IConnectionState' isStatic='false' isConst='false' >
</field>
<field name='_currentWriteState' fullname='com.hurlant.crypto.tls:TLSEngine/private:_currentWriteState' type='com.hurlant.crypto.tls:IConnectionState' isStatic='false' isConst='false' >
</field>
<field name='_entityHandshakeHandlers' fullname='com.hurlant.crypto.tls:TLSEngine/private:_entityHandshakeHandlers' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_entity' fullname='com.hurlant.crypto.tls:TLSEngine/private:_entity' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_handshakeCanContinue' fullname='com.hurlant.crypto.tls:TLSEngine/private:_handshakeCanContinue' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='_handshakePayloads' fullname='com.hurlant.crypto.tls:TLSEngine/private:_handshakePayloads' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='_handshakeQueue' fullname='com.hurlant.crypto.tls:TLSEngine/private:_handshakeQueue' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_handshakeRecords' fullname='com.hurlant.crypto.tls:TLSEngine/private:_handshakeRecords' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='_iStream' fullname='com.hurlant.crypto.tls:TLSEngine/private:_iStream' type='flash.utils:IDataInput' isStatic='false' isConst='false' >
</field>
<field name='_myCertficate' fullname='com.hurlant.crypto.tls:TLSEngine/private:_myCertficate' type='com.hurlant.crypto.cert:X509Certificate' isStatic='false' isConst='false' >
</field>
<field name='_myIdentity' fullname='com.hurlant.crypto.tls:TLSEngine/private:_myIdentity' type='String' isStatic='false' isConst='false' >
</field>
<field name='_oStream' fullname='com.hurlant.crypto.tls:TLSEngine/private:_oStream' type='flash.utils:IDataOutput' isStatic='false' isConst='false' >
</field>
<field name='_otherCertificate' fullname='com.hurlant.crypto.tls:TLSEngine/private:_otherCertificate' type='com.hurlant.crypto.cert:X509Certificate' isStatic='false' isConst='false' >
</field>
<field name='_otherIdentity' fullname='com.hurlant.crypto.tls:TLSEngine/private:_otherIdentity' type='String' isStatic='false' isConst='false' >
</field>
<field name='_packetQueue' fullname='com.hurlant.crypto.tls:TLSEngine/private:_packetQueue' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_pendingReadState' fullname='com.hurlant.crypto.tls:TLSEngine/private:_pendingReadState' type='com.hurlant.crypto.tls:IConnectionState' isStatic='false' isConst='false' >
</field>
<field name='_pendingWriteState' fullname='com.hurlant.crypto.tls:TLSEngine/private:_pendingWriteState' type='com.hurlant.crypto.tls:IConnectionState' isStatic='false' isConst='false' >
</field>
<field name='_securityParameters' fullname='com.hurlant.crypto.tls:TLSEngine/private:_securityParameters' type='com.hurlant.crypto.tls:ISecurityParameters' isStatic='false' isConst='false' >
</field>
<field name='_state' fullname='com.hurlant.crypto.tls:TLSEngine/private:_state' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_store' fullname='com.hurlant.crypto.tls:TLSEngine/private:_store' type='com.hurlant.crypto.cert:X509CertificateCollection' isStatic='false' isConst='false' >
</field>
<field name='_writeScheduler' fullname='com.hurlant.crypto.tls:TLSEngine/private:_writeScheduler' type='uint' isStatic='false' isConst='false' >
</field>
<field name='handshakeHandlersClient' fullname='com.hurlant.crypto.tls:TLSEngine/private:handshakeHandlersClient' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='handshakeHandlersServer' fullname='com.hurlant.crypto.tls:TLSEngine/private:handshakeHandlersServer' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='protocolHandlers' fullname='com.hurlant.crypto.tls:TLSEngine/private:protocolHandlers' type='Object' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='protocol_version' fullname='com.hurlant.crypto.tls:TLSEngine/protocol_version' type='uint' isStatic='false' isConst='false' >
</field>
<field name='sendClientCert' fullname='com.hurlant.crypto.tls:TLSEngine/private:sendClientCert' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 TLSSecurityParameters
 
 This class encapsulates all the security parameters that get negotiated
 during the TLS handshake. It also holds all the key derivation methods.
 Copyright (c) 2007 Henri Torgemane
 
 Patched by Bobby Parker (sh0rtwave&#64;gmail.com)
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='TLSSecurityParameters' fullname='com.hurlant.crypto.tls:TLSSecurityParameters' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/TLSSecurityParameters.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='Object' interfaces='com.hurlant.crypto.tls:ISecurityParameters' isFinal='false' isDynamic='false' >
</classRec>
<method name='TLSSecurityParameters' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/TLSSecurityParameters' isStatic='false' isFinal='false' isOverride='false'  param_names='entity;localCert;localKey' param_types='uint;flash.utils:ByteArray;com.hurlant.crypto.rsa:RSAKey' param_defaults='undefined;null;null' result_type='*'>
</method>
<method name='computeCertificateVerify' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/computeCertificateVerify' isStatic='false' isFinal='false' isOverride='false'  param_names='side;handshakeMessages' param_types='uint;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='computeVerifyData' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/computeVerifyData' isStatic='false' isFinal='false' isOverride='false'  param_names='side;handshakeMessages' param_types='uint;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='getBulkCipher' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/getBulkCipher' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getCipherType' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/getCipherType' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getConnectionStates' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/getConnectionStates' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='getMacAlgorithm' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/getMacAlgorithm' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='reset' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/reset' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setCipher' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/setCipher' isStatic='false' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='setClientRandom' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/setClientRandom' isStatic='false' isFinal='false' isOverride='false'  param_names='secret' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='setCompression' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/setCompression' isStatic='false' isFinal='false' isOverride='false'  param_names='algo' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='setPreMasterSecret' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/setPreMasterSecret' isStatic='false' isFinal='false' isOverride='false'  param_names='secret' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='setServerRandom' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/setServerRandom' isStatic='false' isFinal='false' isOverride='false'  param_names='secret' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='useRSA' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/useRSA/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='version' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/version/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<field name='COMPRESSION_NULL' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/COMPRESSION_NULL' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='ENABLE_USER_CLIENT_CERTIFICATE' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/ENABLE_USER_CLIENT_CERTIFICATE' type='Boolean' isStatic='true' isConst='false' defaultValue='false' >
</field>
<field name='IGNORE_CN_MISMATCH' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/IGNORE_CN_MISMATCH' type='Boolean' isStatic='true' isConst='false' defaultValue='true' >
</field>
<field name='IVSize' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:IVSize' type='uint' isStatic='false' isConst='false' >
</field>
<field name='PROTOCOL_VERSION' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/PROTOCOL_VERSION' type='uint' isStatic='true' isConst='true' defaultValue='0x0301' >
</field>
<field name='USER_CERTIFICATE' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/USER_CERTIFICATE' type='String' isStatic='true' isConst='false' >
</field>
<field name='bulkCipher' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:bulkCipher' type='uint' isStatic='false' isConst='false' >
</field>
<field name='cert' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:cert' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='cipherType' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:cipherType' type='uint' isStatic='false' isConst='false' >
</field>
<field name='clientRandom' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:clientRandom' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='compression' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:compression' type='uint' isStatic='false' isConst='false' >
</field>
<field name='entity' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:entity' type='uint' isStatic='false' isConst='false' >
</field>
<field name='hashSize' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:hashSize' type='uint' isStatic='false' isConst='false' >
</field>
<field name='ignoreCNMismatch' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:ignoreCNMismatch' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='keyExchange' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/keyExchange' type='uint' isStatic='false' isConst='false' >
</field>
<field name='keyMaterialLength' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:keyMaterialLength' type='uint' isStatic='false' isConst='false' >
</field>
<field name='keySize' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:keySize' type='uint' isStatic='false' isConst='false' >
</field>
<field name='key' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:key' type='com.hurlant.crypto.rsa:RSAKey' isStatic='false' isConst='false' >
</field>
<field name='macAlgorithm' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:macAlgorithm' type='uint' isStatic='false' isConst='false' >
</field>
<field name='masterSecret' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:masterSecret' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='serverRandom' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:serverRandom' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='tlsDebug' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:tlsDebug' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='trustAllCerts' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:trustAllCerts' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='trustSelfSigned' fullname='com.hurlant.crypto.tls:TLSSecurityParameters/private:trustSelfSigned' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 TLSSecurityParameters
 
 This class encapsulates all the security parameters that get negotiated
 during the TLS handshake. It also holds all the key derivation methods.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='SSLSecurityParameters' fullname='com.hurlant.crypto.tls:SSLSecurityParameters' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/SSLSecurityParameters.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='Object' interfaces='com.hurlant.crypto.tls:ISecurityParameters' isFinal='false' isDynamic='false' >
</classRec>
<method name='SSLSecurityParameters' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/SSLSecurityParameters' isStatic='false' isFinal='false' isOverride='false'  param_names='entity;localCert;localKey' param_types='uint;flash.utils:ByteArray;flash.utils:ByteArray' param_defaults='undefined;null;null' result_type='*'>
</method>
<method name='computeCertificateVerify' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/computeCertificateVerify' isStatic='false' isFinal='false' isOverride='false'  param_names='side;handshakeMessages' param_types='uint;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='computeVerifyData' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/computeVerifyData' isStatic='false' isFinal='false' isOverride='false'  param_names='side;handshakeMessages' param_types='uint;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='getBulkCipher' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/getBulkCipher' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getCipherType' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/getCipherType' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getConnectionStates' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/getConnectionStates' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='getMacAlgorithm' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/getMacAlgorithm' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='reset' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/reset' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setCipher' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/setCipher' isStatic='false' isFinal='false' isOverride='false'  param_names='cipher' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='setClientRandom' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/setClientRandom' isStatic='false' isFinal='false' isOverride='false'  param_names='secret' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='setCompression' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/setCompression' isStatic='false' isFinal='false' isOverride='false'  param_names='algo' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='setPreMasterSecret' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/setPreMasterSecret' isStatic='false' isFinal='false' isOverride='false'  param_names='secret' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='setServerRandom' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/setServerRandom' isStatic='false' isFinal='false' isOverride='false'  param_names='secret' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='useRSA' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/useRSA/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='version' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/version/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<field name='COMPRESSION_NULL' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/COMPRESSION_NULL' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='IVSize' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:IVSize' type='uint' isStatic='false' isConst='false' >
</field>
<field name='MAC_length' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:MAC_length' type='uint' isStatic='false' isConst='false' >
</field>
<field name='PROTOCOL_VERSION' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/PROTOCOL_VERSION' type='uint' isStatic='true' isConst='true' defaultValue='0x0300' >
</field>
<field name='bulkCipher' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:bulkCipher' type='uint' isStatic='false' isConst='false' >
</field>
<field name='cipherType' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:cipherType' type='uint' isStatic='false' isConst='false' >
</field>
<field name='clientRandom' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:clientRandom' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='compression' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:compression' type='uint' isStatic='false' isConst='false' >
</field>
<field name='entity' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:entity' type='uint' isStatic='false' isConst='false' >
</field>
<field name='hashSize' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:hashSize' type='uint' isStatic='false' isConst='false' >
</field>
<field name='ignoreCNMismatch' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:ignoreCNMismatch' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='keyBlock' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:keyBlock' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='keyExchange' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/keyExchange' type='uint' isStatic='false' isConst='false' >
</field>
<field name='keyMaterialLength' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:keyMaterialLength' type='uint' isStatic='false' isConst='false' >
</field>
<field name='keySize' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:keySize' type='uint' isStatic='false' isConst='false' >
</field>
<field name='macAlgorithm' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:macAlgorithm' type='uint' isStatic='false' isConst='false' >
</field>
<field name='masterSecret' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:masterSecret' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='pad_1' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:pad_1' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='pad_2' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:pad_2' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='serverRandom' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:serverRandom' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='trustAllCerts' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:trustAllCerts' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='trustSelfSigned' fullname='com.hurlant.crypto.tls:SSLSecurityParameters/private:trustSelfSigned' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 TLSSocket
 
 This is the "end-user" TLS class.
 It works just like a Socket, by encapsulating a Socket and
 wrapping the TLS protocol around the data that passes over it.
 This class can either create a socket connection, or reuse an
 existing connected socket. The later is useful for STARTTLS flows.
 
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='TLSSocket' fullname='com.hurlant.crypto.tls:TLSSocket' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/TLSSocket.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='flash.net:Socket' interfaces='flash.utils:IDataInput;flash.utils:IDataOutput' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 It feels like a socket, but it wraps the stream
	 over TLS 1.0
	 
	 That's all.
	 
	 ]]></description>
<metadata>
	<Event owner='com.hurlant.crypto.tls:TLSSocket' name='acceptPeerCertificatePrompt' type='flash.events.Event' >
	</Event>
</metadata>
<metadata>
	<Event owner='com.hurlant.crypto.tls:TLSSocket' name='socketData' type='flash.events.ProgressEvent' >
	</Event>
</metadata>
<metadata>
	<Event owner='com.hurlant.crypto.tls:TLSSocket' name='securityError' type='flash.events.SecurityErrorEvent' >
	</Event>
</metadata>
<metadata>
	<Event owner='com.hurlant.crypto.tls:TLSSocket' name='ioError' type='flash.events.IOErrorEvent' >
	</Event>
</metadata>
<metadata>
	<Event owner='com.hurlant.crypto.tls:TLSSocket' name='connect' type='flash.events.Event' >
	</Event>
</metadata>
<metadata>
	<Event owner='com.hurlant.crypto.tls:TLSSocket' name='close' type='flash.events.Event' >
	</Event>
</metadata>
</classRec>
<method name='TLSSocket' fullname='com.hurlant.crypto.tls:TLSSocket/TLSSocket' isStatic='false' isFinal='false' isOverride='false'  param_names='host;port;config' param_types='String;int;com.hurlant.crypto.tls:TLSConfig' param_defaults='null;0;null' result_type='*'>
</method>
<method name='acceptPeerCertificate' fullname='com.hurlant.crypto.tls:TLSSocket/acceptPeerCertificate' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='close' fullname='com.hurlant.crypto.tls:TLSSocket/close' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='commitWrite' fullname='com.hurlant.crypto.tls:TLSSocket/private:commitWrite' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='connect' fullname='com.hurlant.crypto.tls:TLSSocket/connect' isStatic='false' isFinal='false' isOverride='true'  param_names='host;port' param_types='String;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='flush' fullname='com.hurlant.crypto.tls:TLSSocket/flush' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='getPeerCertificate' fullname='com.hurlant.crypto.tls:TLSSocket/getPeerCertificate' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.crypto.cert:X509Certificate'>
</method>
<method name='init' fullname='com.hurlant.crypto.tls:TLSSocket/private:init' isStatic='false' isFinal='false' isOverride='false'  param_names='socket;config;host' param_types='flash.net:Socket;com.hurlant.crypto.tls:TLSConfig;String' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='onAcceptCert' fullname='com.hurlant.crypto.tls:TLSSocket/onAcceptCert' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='com.hurlant.crypto.tls:TLSEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onSocketConnected' fullname='com.hurlant.crypto.tls:TLSSocket/private:onSocketConnected' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='flash.events:Event' param_defaults='null' result_type='void'>
</method>
<method name='onTLSClose' fullname='com.hurlant.crypto.tls:TLSSocket/private:onTLSClose' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='onTLSData' fullname='com.hurlant.crypto.tls:TLSSocket/private:onTLSData' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='com.hurlant.crypto.tls:TLSEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='onTLSReady' fullname='com.hurlant.crypto.tls:TLSSocket/private:onTLSReady' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='com.hurlant.crypto.tls:TLSEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='readBoolean' fullname='com.hurlant.crypto.tls:TLSSocket/readBoolean' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<method name='readByte' fullname='com.hurlant.crypto.tls:TLSSocket/readByte' isStatic='false' isFinal='false' isOverride='true'  result_type='int'>
</method>
<method name='readBytes' fullname='com.hurlant.crypto.tls:TLSSocket/readBytes' isStatic='false' isFinal='false' isOverride='true'  param_names='bytes;offset;length' param_types='flash.utils:ByteArray;uint;uint' param_defaults='undefined;0;0' result_type='void'>
</method>
<method name='readDouble' fullname='com.hurlant.crypto.tls:TLSSocket/readDouble' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
</method>
<method name='readFloat' fullname='com.hurlant.crypto.tls:TLSSocket/readFloat' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
</method>
<method name='readInt' fullname='com.hurlant.crypto.tls:TLSSocket/readInt' isStatic='false' isFinal='false' isOverride='true'  result_type='int'>
</method>
<method name='readMultiByte' fullname='com.hurlant.crypto.tls:TLSSocket/readMultiByte' isStatic='false' isFinal='false' isOverride='true'  param_names='length;charSet' param_types='uint;String' param_defaults='undefined;undefined' result_type='String'>
</method>
<method name='readObject' fullname='com.hurlant.crypto.tls:TLSSocket/readObject' isStatic='false' isFinal='false' isOverride='true'  result_type='*'>
</method>
<method name='readShort' fullname='com.hurlant.crypto.tls:TLSSocket/readShort' isStatic='false' isFinal='false' isOverride='true'  result_type='int'>
</method>
<method name='readUTFBytes' fullname='com.hurlant.crypto.tls:TLSSocket/readUTFBytes' isStatic='false' isFinal='false' isOverride='true'  param_names='length' param_types='uint' param_defaults='undefined' result_type='String'>
</method>
<method name='readUTF' fullname='com.hurlant.crypto.tls:TLSSocket/readUTF' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='readUnsignedByte' fullname='com.hurlant.crypto.tls:TLSSocket/readUnsignedByte' isStatic='false' isFinal='false' isOverride='true'  result_type='uint'>
</method>
<method name='readUnsignedInt' fullname='com.hurlant.crypto.tls:TLSSocket/readUnsignedInt' isStatic='false' isFinal='false' isOverride='true'  result_type='uint'>
</method>
<method name='readUnsignedShort' fullname='com.hurlant.crypto.tls:TLSSocket/readUnsignedShort' isStatic='false' isFinal='false' isOverride='true'  result_type='uint'>
</method>
<method name='reinitialize' fullname='com.hurlant.crypto.tls:TLSSocket/reinitialize' isStatic='false' isFinal='false' isOverride='false'  param_names='host;config' param_types='String;com.hurlant.crypto.tls:TLSConfig' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='rejectPeerCertificate' fullname='com.hurlant.crypto.tls:TLSSocket/rejectPeerCertificate' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='releaseSocket' fullname='com.hurlant.crypto.tls:TLSSocket/releaseSocket' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='scheduleWrite' fullname='com.hurlant.crypto.tls:TLSSocket/private:scheduleWrite' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='setTLSConfig' fullname='com.hurlant.crypto.tls:TLSSocket/setTLSConfig' isStatic='false' isFinal='false' isOverride='false'  param_names='config' param_types='com.hurlant.crypto.tls:TLSConfig' param_defaults='undefined' result_type='void'>
</method>
<method name='startTLS' fullname='com.hurlant.crypto.tls:TLSSocket/startTLS' isStatic='false' isFinal='false' isOverride='false'  param_names='socket;host;config' param_types='flash.net:Socket;String;com.hurlant.crypto.tls:TLSConfig' param_defaults='undefined;undefined;null' result_type='void'>
</method>
<method name='writeBoolean' fullname='com.hurlant.crypto.tls:TLSSocket/writeBoolean' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='writeByte' fullname='com.hurlant.crypto.tls:TLSSocket/writeByte' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='writeBytes' fullname='com.hurlant.crypto.tls:TLSSocket/writeBytes' isStatic='false' isFinal='false' isOverride='true'  param_names='bytes;offset;length' param_types='flash.utils:ByteArray;uint;uint' param_defaults='undefined;0;0' result_type='void'>
</method>
<method name='writeDouble' fullname='com.hurlant.crypto.tls:TLSSocket/writeDouble' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='writeFloat' fullname='com.hurlant.crypto.tls:TLSSocket/writeFloat' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='writeInt' fullname='com.hurlant.crypto.tls:TLSSocket/writeInt' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='writeMultiByte' fullname='com.hurlant.crypto.tls:TLSSocket/writeMultiByte' isStatic='false' isFinal='false' isOverride='true'  param_names='value;charSet' param_types='String;String' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='writeObject' fullname='com.hurlant.crypto.tls:TLSSocket/writeObject' isStatic='false' isFinal='false' isOverride='true'  param_names='object' param_types='*' param_defaults='undefined' result_type='void'>
</method>
<method name='writeShort' fullname='com.hurlant.crypto.tls:TLSSocket/writeShort' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='writeUTFBytes' fullname='com.hurlant.crypto.tls:TLSSocket/writeUTFBytes' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='writeUTF' fullname='com.hurlant.crypto.tls:TLSSocket/writeUTF' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='writeUnsignedInt' fullname='com.hurlant.crypto.tls:TLSSocket/writeUnsignedInt' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='bytesAvailable' fullname='com.hurlant.crypto.tls:TLSSocket/bytesAvailable/get' isStatic='false' isFinal='false' isOverride='true'  result_type='uint'>
</method>
<method name='connected' fullname='com.hurlant.crypto.tls:TLSSocket/connected/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
</method>
<method name='endian' fullname='com.hurlant.crypto.tls:TLSSocket/endian/get' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<method name='objectEncoding' fullname='com.hurlant.crypto.tls:TLSSocket/objectEncoding/get' isStatic='false' isFinal='false' isOverride='true'  result_type='uint'>
</method>
<method name='endian' fullname='com.hurlant.crypto.tls:TLSSocket/endian/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='objectEncoding' fullname='com.hurlant.crypto.tls:TLSSocket/objectEncoding/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<field name='ACCEPT_PEER_CERT_PROMPT' fullname='com.hurlant.crypto.tls:TLSSocket/ACCEPT_PEER_CERT_PROMPT' type='String' isStatic='true' isConst='true' defaultValue='acceptPeerCertificatePrompt' >
</field>
<field name='_config' fullname='com.hurlant.crypto.tls:TLSSocket/private:_config' type='com.hurlant.crypto.tls:TLSConfig' isStatic='false' isConst='false' >
</field>
<field name='_endian' fullname='com.hurlant.crypto.tls:TLSSocket/private:_endian' type='String' isStatic='false' isConst='false' >
</field>
<field name='_engine' fullname='com.hurlant.crypto.tls:TLSSocket/private:_engine' type='com.hurlant.crypto.tls:TLSEngine' isStatic='false' isConst='false' >
</field>
<field name='_iStream_cursor' fullname='com.hurlant.crypto.tls:TLSSocket/private:_iStream_cursor' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_iStream' fullname='com.hurlant.crypto.tls:TLSSocket/private:_iStream' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='_oStream' fullname='com.hurlant.crypto.tls:TLSSocket/private:_oStream' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='_objectEncoding' fullname='com.hurlant.crypto.tls:TLSSocket/private:_objectEncoding' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_ready' fullname='com.hurlant.crypto.tls:TLSSocket/private:_ready' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_socket' fullname='com.hurlant.crypto.tls:TLSSocket/private:_socket' type='flash.net:Socket' isStatic='false' isConst='false' >
</field>
<field name='_writeScheduler' fullname='com.hurlant.crypto.tls:TLSSocket/private:_writeScheduler' type='uint' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.tls.null' fullname='com.hurlant.crypto.tls.null'>
<description><![CDATA[
 TLSTest
 
 A test class for TLS. Not a finished product.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='TLSTest' fullname='com.hurlant.crypto.tls:TLSTest' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/tls/TLSTest.as' namespace='com.hurlant.crypto.tls' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='TLSTest' fullname='com.hurlant.crypto.tls:TLSTest/TLSTest' isStatic='false' isFinal='false' isOverride='false'  param_names='host;port;type' param_types='String;int;int' param_defaults='null;0;0' result_type='*'>
</method>
<method name='connectLocalSSL' fullname='com.hurlant.crypto.tls:TLSTest/connectLocalSSL' isStatic='false' isFinal='false' isOverride='false'  param_names='host;port' param_types='String;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='connectLocalTLS' fullname='com.hurlant.crypto.tls:TLSTest/connectLocalTLS' isStatic='false' isFinal='false' isOverride='false'  param_names='host;port' param_types='String;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='connectLoginYahooCom' fullname='com.hurlant.crypto.tls:TLSTest/connectLoginYahooCom' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='loopback' fullname='com.hurlant.crypto.tls:TLSTest/loopback' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='testHost' fullname='com.hurlant.crypto.tls:TLSTest/private:testHost' isStatic='false' isFinal='false' isOverride='false'  param_names='host;next' param_types='String;Function' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='testSocket' fullname='com.hurlant.crypto.tls:TLSTest/testSocket' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='myCert' fullname='com.hurlant.crypto.tls:TLSTest/myCert' type='Class' isStatic='false' isConst='false' >
</field>
<field name='myDebugData' fullname='com.hurlant.crypto.tls:TLSTest/myDebugData' type='String' isStatic='false' isConst='false' >
</field>
<field name='myKey' fullname='com.hurlant.crypto.tls:TLSTest/myKey' type='Class' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.util.null' fullname='com.hurlant.util.null'>
<description><![CDATA[
 ArrayUtil
  A class that allows to compare two ByteArrays.
 Copyright (c) 2007 Henri Torgemane
 contributed: Alexander Keck
  See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='ArrayUtil' fullname='com.hurlant.util:ArrayUtil' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/ArrayUtil.as' namespace='com.hurlant.util' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='encodeIntBigEndian' fullname='com.hurlant.util:ArrayUtil/encodeIntBigEndian' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 This function will encode the integer part (32bit) of the number. The type
		 Number was choosen to make it possible to use unsigned integers.
		 		 TODO: check the correctness of signed integer
		 ]]></description>
</method>
<method name='encodeIntLittleEndian' fullname='com.hurlant.util:ArrayUtil/encodeIntLittleEndian' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 This function will encode the integer part (32bit) of the number. The type
		 Number was choosen to make it possible to use unsigned integers.
		 		 TODO: check the correctness of signed integer
		 ]]></description>
</method>
<method name='equals' fullname='com.hurlant.util:ArrayUtil/equals' isStatic='true' isFinal='false' isOverride='false'  param_names='a1;a2' param_types='flash.utils:ByteArray;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='xorByteArray' fullname='com.hurlant.util:ArrayUtil/xorByteArray' isStatic='true' isFinal='false' isOverride='false'  param_names='b1;b1start;b2;b2start;len' param_types='flash.utils:ByteArray;int;flash.utils:ByteArray;int;int' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 This function xor to ByteArrays and the delivers the result in a new
		 ByteArray instance with the length __len__.
		 ]]></description>
</method>
<classRec name='Base64' fullname='com.hurlant.util:Base64' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/Base64.as' namespace='com.hurlant.util' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='_initDecodeChar' fullname='com.hurlant.util:Base64/private:_initDecodeChar' isStatic='true' isFinal='false' isOverride='false'  result_type='Vector$int'>
</method>
<method name='_initEncoreChar' fullname='com.hurlant.util:Base64/private:_initEncoreChar' isStatic='true' isFinal='false' isOverride='false'  result_type='Vector$int'>
</method>
<method name='decodeToByteArrayB' fullname='com.hurlant.util:Base64/decodeToByteArrayB' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='flash.utils:ByteArray'>
<metadata>
	<Deprecated owner='com.hurlant.util:Base64/decodeToByteArrayB' name='Deprecated' >
	</Deprecated>
</metadata>
</method>
<method name='decodeToByteArray' fullname='com.hurlant.util:Base64/decodeToByteArray' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='decode' fullname='com.hurlant.util:Base64/decode' isStatic='true' isFinal='false' isOverride='false'  param_names='data' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='encodeByteArray' fullname='com.hurlant.util:Base64/encodeByteArray' isStatic='true' isFinal='false' isOverride='false'  param_names='data' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='String'>
</method>
<method name='encode' fullname='com.hurlant.util:Base64/encode' isStatic='true' isFinal='false' isOverride='false'  param_names='data' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<field name='_decodeChars' fullname='com.hurlant.util:Base64/private:_decodeChars' type='Vector$int' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_encodeChars' fullname='com.hurlant.util:Base64/private:_encodeChars' type='Vector$int' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<packageRec name='com.hurlant.util.null' fullname='com.hurlant.util.null'>
<description><![CDATA[
 Hex
  Utility class to convert Hex strings to ByteArray or String types.
 Copyright (c) 2007 Henri Torgemane
 contributed: Alexander Keck
  See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='Hex' fullname='com.hurlant.util:Hex' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/Hex.as' namespace='com.hurlant.util' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='fromArray' fullname='com.hurlant.util:Hex/fromArray' isStatic='true' isFinal='false' isOverride='false'  param_names='array;colons' param_types='flash.utils:ByteArray;Boolean' param_defaults='undefined;false' result_type='String'>
<description><![CDATA[
		 Generates lowercase hexadecimal string from given byte-array
		 ]]></description>
</method>
<method name='fromRawString' fullname='com.hurlant.util:Hex/fromRawString' isStatic='true' isFinal='false' isOverride='false'  param_names='str;colons' param_types='String;Boolean' param_defaults='undefined;false' result_type='String'>
<description><![CDATA[
		 Convenience method for generating hexadecimal string using iso-8859-1
		 ]]></description>
</method>
<method name='fromString' fullname='com.hurlant.util:Hex/fromString' isStatic='true' isFinal='false' isOverride='false'  param_names='str;colons;charSet' param_types='String;Boolean;String' param_defaults='undefined;false;utf-8' result_type='String'>
<description><![CDATA[
		 Generates hexadecimal string from given string
		 		 ]]></description>
<param><![CDATA[str
		 ]]></param>
<return><![CDATA[a hex string encoded from the UTF-8 string str
		 		 ]]></return>
</method>
<method name='toArray' fullname='com.hurlant.util:Hex/toArray' isStatic='true' isFinal='false' isOverride='false'  param_names='hex' param_types='String' param_defaults='undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Generates byte-array from given hexadecimal string
		 		 Supports straight and colon-laced hex (that means 23:03:0e:f0, but OT23:3:e:f0)
		 The first nibble (hex digit) may be omitted.
		 Any whitespace characters are ignored.
		 ]]></description>
</method>
<method name='toRawString' fullname='com.hurlant.util:Hex/toRawString' isStatic='true' isFinal='false' isOverride='false'  param_names='hex' param_types='String' param_defaults='undefined' result_type='String'>
<description><![CDATA[
		 Convenience method for generating string using iso-8859-1
		 ]]></description>
</method>
<method name='toString' fullname='com.hurlant.util:Hex/toString' isStatic='true' isFinal='false' isOverride='false'  param_names='hex;charSet' param_types='String;String' param_defaults='undefined;utf-8' result_type='String'>
<description><![CDATA[
		 Generates string from given hexadecimal string
		 		 ]]></description>
<param><![CDATA[hex
		 ]]></param>
<return><![CDATA[a UTF-8 string decoded from hex
		 		 ]]></return>
</method>
<packageRec name='com.hurlant.util.null' fullname='com.hurlant.util.null'>
<description><![CDATA[
 Memory
 
 A class with a few memory-management methods, as much as 
 such a thing exists in a Flash player.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='Memory' fullname='com.hurlant.util:Memory' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/Memory.as' namespace='com.hurlant.util' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='gc' fullname='com.hurlant.util:Memory/gc' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='used' fullname='com.hurlant.util:Memory/used/get' isStatic='true' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<packageRec name='com.hurlant.crypto.hash.null' fullname='com.hurlant.crypto.hash.null'>
<description><![CDATA[
 HMAC
 
 An ActionScript 3 interface for HMAC &amp; MAC 
 implementations.
 
 Loosely copyrighted by Bobby Parker
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<interfaceRec name='IHMAC' fullname='com.hurlant.crypto.hash:IHMAC' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/hash/IHMAC.as' namespace='com.hurlant.crypto.hash' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='compute' fullname='com.hurlant.crypto.hash:IHMAC/com.hurlant.crypto.hash:IHMAC:compute' isStatic='false' isFinal='false' isOverride='false'  param_names='key;data' param_types='flash.utils:ByteArray;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Compute a HMAC using a key and some data.
		 It doesn't modify either, and returns a new ByteArray with the HMAC value.
		 ]]></description>
</method>
<method name='dispose' fullname='com.hurlant.crypto.hash:IHMAC/com.hurlant.crypto.hash:IHMAC:dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getHashSize' fullname='com.hurlant.crypto.hash:IHMAC/com.hurlant.crypto.hash:IHMAC:getHashSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='toString' fullname='com.hurlant.crypto.hash:IHMAC/com.hurlant.crypto.hash:IHMAC:toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<packageRec name='com.hurlant.crypto.hash.null' fullname='com.hurlant.crypto.hash.null'>
<description><![CDATA[
 IHash
 
 An interface for each hash function to implement
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<interfaceRec name='IHash' fullname='com.hurlant.crypto.hash:IHash' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/hash/IHash.as' namespace='com.hurlant.crypto.hash' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='getHashSize' fullname='com.hurlant.crypto.hash:IHash/com.hurlant.crypto.hash:IHash:getHashSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getInputSize' fullname='com.hurlant.crypto.hash:IHash/com.hurlant.crypto.hash:IHash:getInputSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getPadSize' fullname='com.hurlant.crypto.hash:IHash/com.hurlant.crypto.hash:IHash:getPadSize' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='hash' fullname='com.hurlant.crypto.hash:IHash/com.hurlant.crypto.hash:IHash:hash' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='toString' fullname='com.hurlant.crypto.hash:IHash/com.hurlant.crypto.hash:IHash:toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<packageRec name='com.hurlant.crypto.hash.null' fullname='com.hurlant.crypto.hash.null'>
<description><![CDATA[
 MD2
 
 An ActionScript 3 implementation of the RSA Data Security, Inc MD2 Message
 Digest Algorithm, as defined in RFC 1319
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 
 Excerpt from http://en.wikipedia.org/wiki/MD2:
 > 
 > Rogier and Chauvaud (1997) described collisions of MD2's compression function,
 > although they were unable to extend the attack to the full MD2.
 > 
 > In 2004, MD2 was shown to be vulnerable to a preimage attack with time 
 > complexity equivalent to 2104 applications of the compression function 
 > (Muller, 2004). 
 > The author concludes, "MD2 can no longer be considered a secure one-way 
 > hash function".
 
 also, this implementaton is quite slow.
 ]]></description>
</packageRec>
<classRec name='MD2' fullname='com.hurlant.crypto.hash:MD2' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/hash/MD2.as' namespace='com.hurlant.crypto.hash' access='public' baseclass='Object' interfaces='com.hurlant.crypto.hash:IHash' isFinal='false' isDynamic='false' >
</classRec>
<method name='getHashSize' fullname='com.hurlant.crypto.hash:MD2/getHashSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getInputSize' fullname='com.hurlant.crypto.hash:MD2/getInputSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getPadSize' fullname='com.hurlant.crypto.hash:MD2/getPadSize' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='hash' fullname='com.hurlant.crypto.hash:MD2/hash' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='toString' fullname='com.hurlant.crypto.hash:MD2/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='HASH_SIZE' fullname='com.hurlant.crypto.hash:MD2/HASH_SIZE' type='int' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='S' fullname='com.hurlant.crypto.hash:MD2/private:S' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='pad_size' fullname='com.hurlant.crypto.hash:MD2/pad_size' type='int' isStatic='false' isConst='false' defaultValue='48' >
</field>
<packageRec name='com.hurlant.crypto.hash.null' fullname='com.hurlant.crypto.hash.null'>
<description><![CDATA[
 HMAC
 
 An ActionScript 3 implementation of HMAC, Keyed-Hashing for Message
 Authentication, as defined by RFC-2104
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='HMAC' fullname='com.hurlant.crypto.hash:HMAC' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/hash/HMAC.as' namespace='com.hurlant.crypto.hash' access='public' baseclass='Object' interfaces='com.hurlant.crypto.hash:IHMAC' isFinal='false' isDynamic='false' >
</classRec>
<method name='HMAC' fullname='com.hurlant.crypto.hash:HMAC/HMAC' isStatic='false' isFinal='false' isOverride='false'  param_names='hash;bits' param_types='com.hurlant.crypto.hash:IHash;uint' param_defaults='undefined;0' result_type='*'>
<description><![CDATA[
		 Create a HMAC object, using a Hash function, and 
		 optionally a number of bits to return. 
		 The HMAC will be truncated to that size if needed.
		 ]]></description>
</method>
<method name='compute' fullname='com.hurlant.crypto.hash:HMAC/compute' isStatic='false' isFinal='false' isOverride='false'  param_names='key;data' param_types='flash.utils:ByteArray;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Compute a HMAC using a key and some data.
		 It doesn't modify either, and returns a new ByteArray with the HMAC value.
		 ]]></description>
</method>
<method name='dispose' fullname='com.hurlant.crypto.hash:HMAC/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getHashSize' fullname='com.hurlant.crypto.hash:HMAC/getHashSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='toString' fullname='com.hurlant.crypto.hash:HMAC/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='bits' fullname='com.hurlant.crypto.hash:HMAC/private:bits' type='uint' isStatic='false' isConst='false' >
</field>
<field name='hash' fullname='com.hurlant.crypto.hash:HMAC/private:hash' type='com.hurlant.crypto.hash:IHash' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.hash.null' fullname='com.hurlant.crypto.hash.null'>
<description><![CDATA[
 MAC
 
 An ActionScript 3 implementation of MAC, Message Authentication Code
 for use with SSL 3.0.
 Loosely copyrighted by Bobby Parker.
 As3crypto copyrighted by Henri Torgemane.
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='MAC' fullname='com.hurlant.crypto.hash:MAC' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/hash/MAC.as' namespace='com.hurlant.crypto.hash' access='public' baseclass='Object' interfaces='com.hurlant.crypto.hash:IHMAC' isFinal='false' isDynamic='false' >
</classRec>
<method name='MAC' fullname='com.hurlant.crypto.hash:MAC/MAC' isStatic='false' isFinal='false' isOverride='false'  param_names='hash;bits' param_types='com.hurlant.crypto.hash:IHash;uint' param_defaults='undefined;0' result_type='*'>
<description><![CDATA[
		 Create a MAC object (for SSL 3.0 ) and 
		 optionally a number of bits to return. 
		 The MAC will be truncated to that size if needed.
		 ]]></description>
</method>
<method name='compute' fullname='com.hurlant.crypto.hash:MAC/compute' isStatic='false' isFinal='false' isOverride='false'  param_names='key;data' param_types='flash.utils:ByteArray;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Compute a MAC using a key and some data.
		 
		 ]]></description>
</method>
<method name='dispose' fullname='com.hurlant.crypto.hash:MAC/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getHashSize' fullname='com.hurlant.crypto.hash:MAC/getHashSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='setPadSize' fullname='com.hurlant.crypto.hash:MAC/setPadSize' isStatic='false' isFinal='false' isOverride='false'  param_names='pad_size' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='toString' fullname='com.hurlant.crypto.hash:MAC/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='bits' fullname='com.hurlant.crypto.hash:MAC/private:bits' type='uint' isStatic='false' isConst='false' >
</field>
<field name='hash' fullname='com.hurlant.crypto.hash:MAC/private:hash' type='com.hurlant.crypto.hash:IHash' isStatic='false' isConst='false' >
</field>
<field name='innerHash' fullname='com.hurlant.crypto.hash:MAC/private:innerHash' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='innerKey' fullname='com.hurlant.crypto.hash:MAC/private:innerKey' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='outerHash' fullname='com.hurlant.crypto.hash:MAC/private:outerHash' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='outerKey' fullname='com.hurlant.crypto.hash:MAC/private:outerKey' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='pad_1' fullname='com.hurlant.crypto.hash:MAC/private:pad_1' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='pad_2' fullname='com.hurlant.crypto.hash:MAC/private:pad_2' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.hash.null' fullname='com.hurlant.crypto.hash.null'>
<description><![CDATA[
 SHABase
 
 An ActionScript 3 abstract class for the SHA family of hash functions
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='SHABase' fullname='com.hurlant.crypto.hash:SHABase' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/hash/SHABase.as' namespace='com.hurlant.crypto.hash' access='public' baseclass='Object' interfaces='com.hurlant.crypto.hash:IHash' isFinal='false' isDynamic='false' >
</classRec>
<method name='core' fullname='com.hurlant.crypto.hash:SHABase/protected:core' isStatic='false' isFinal='false' isOverride='false'  param_names='x;len' param_types='Array;uint' param_defaults='undefined;undefined' result_type='Array'>
</method>
<method name='getHashSize' fullname='com.hurlant.crypto.hash:SHABase/getHashSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getInputSize' fullname='com.hurlant.crypto.hash:SHABase/getInputSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getPadSize' fullname='com.hurlant.crypto.hash:SHABase/getPadSize' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='hash' fullname='com.hurlant.crypto.hash:SHABase/hash' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='toString' fullname='com.hurlant.crypto.hash:SHABase/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='pad_size' fullname='com.hurlant.crypto.hash:SHABase/pad_size' type='int' isStatic='false' isConst='false' defaultValue='40' >
</field>
<packageRec name='com.hurlant.crypto.hash.null' fullname='com.hurlant.crypto.hash.null'>
<description><![CDATA[
 MD5
 
 An ActionScript 3 implementation of the RSA Data Security, Inc. MD5 Message
 Digest Algorithm, as defined in RFC 1321.
 Copyright (c) 2007 Henri Torgemane
 
 Derived from
 		A JavaScript implementation of the same.
 	Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
 		Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 
 Note:
 This algorithm should not be your first choice for new developements, but is
 included to allow interoperability with existing codes and protocols.
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='MD5' fullname='com.hurlant.crypto.hash:MD5' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/hash/MD5.as' namespace='com.hurlant.crypto.hash' access='public' baseclass='Object' interfaces='com.hurlant.crypto.hash:IHash' isFinal='false' isDynamic='false' >
</classRec>
<method name='cmn' fullname='com.hurlant.crypto.hash:MD5/private:cmn' isStatic='false' isFinal='false' isOverride='false'  param_names='q;a;b;x;s;t' param_types='uint;uint;uint;uint;uint;uint' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='uint'>
</method>
<method name='core_md5' fullname='com.hurlant.crypto.hash:MD5/private:core_md5' isStatic='false' isFinal='false' isOverride='false'  param_names='x;len' param_types='Array;uint' param_defaults='undefined;undefined' result_type='Array'>
</method>
<method name='ff' fullname='com.hurlant.crypto.hash:MD5/private:ff' isStatic='false' isFinal='false' isOverride='false'  param_names='a;b;c;d;x;s;t' param_types='uint;uint;uint;uint;uint;uint;uint' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='uint'>
</method>
<method name='getHashSize' fullname='com.hurlant.crypto.hash:MD5/getHashSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getInputSize' fullname='com.hurlant.crypto.hash:MD5/getInputSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getPadSize' fullname='com.hurlant.crypto.hash:MD5/getPadSize' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='gg' fullname='com.hurlant.crypto.hash:MD5/private:gg' isStatic='false' isFinal='false' isOverride='false'  param_names='a;b;c;d;x;s;t' param_types='uint;uint;uint;uint;uint;uint;uint' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='uint'>
</method>
<method name='hash' fullname='com.hurlant.crypto.hash:MD5/hash' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='hh' fullname='com.hurlant.crypto.hash:MD5/private:hh' isStatic='false' isFinal='false' isOverride='false'  param_names='a;b;c;d;x;s;t' param_types='uint;uint;uint;uint;uint;uint;uint' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='uint'>
</method>
<method name='ii' fullname='com.hurlant.crypto.hash:MD5/private:ii' isStatic='false' isFinal='false' isOverride='false'  param_names='a;b;c;d;x;s;t' param_types='uint;uint;uint;uint;uint;uint;uint' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='uint'>
</method>
<method name='rol' fullname='com.hurlant.crypto.hash:MD5/private:rol' isStatic='false' isFinal='false' isOverride='false'  param_names='num;cnt' param_types='uint;uint' param_defaults='undefined;undefined' result_type='uint'>
</method>
<method name='toString' fullname='com.hurlant.crypto.hash:MD5/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='HASH_SIZE' fullname='com.hurlant.crypto.hash:MD5/HASH_SIZE' type='int' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='pad_size' fullname='com.hurlant.crypto.hash:MD5/pad_size' type='int' isStatic='false' isConst='false' defaultValue='48' >
</field>
<packageRec name='com.hurlant.crypto.hash.null' fullname='com.hurlant.crypto.hash.null'>
<description><![CDATA[
 SHA256
 
 An ActionScript 3 implementation of Secure Hash Algorithm, SHA-256, as defined
 in FIPS PUB 180-2
 Copyright (c) 2007 Henri Torgemane
 
 Derived from:
 		A JavaScript implementation of the Secure Hash Standard
 		Version 0.3 Copyright Angel Marin 2003-2004 - http://anmar.eu.org/
 Derived from:
 		A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 		in FIPS PUB 180-1
 		Version 2.1a Copyright Paul Johnston 2000 - 2002.
 		Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='SHA256' fullname='com.hurlant.crypto.hash:SHA256' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/hash/SHA256.as' namespace='com.hurlant.crypto.hash' access='public' baseclass='com.hurlant.crypto.hash:SHABase' interfaces='com.hurlant.crypto.hash:IHash' isFinal='false' isDynamic='false' >
</classRec>
<method name='SHA256' fullname='com.hurlant.crypto.hash:SHA256/SHA256' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='core' fullname='com.hurlant.crypto.hash:SHA256/protected:core' isStatic='false' isFinal='false' isOverride='true'  param_names='x;len' param_types='Array;uint' param_defaults='undefined;undefined' result_type='Array'>
</method>
<method name='getHashSize' fullname='com.hurlant.crypto.hash:SHA256/getHashSize' isStatic='false' isFinal='false' isOverride='true'  result_type='uint'>
</method>
<method name='rrol' fullname='com.hurlant.crypto.hash:SHA256/protected:rrol' isStatic='false' isFinal='false' isOverride='false'  param_names='num;cnt' param_types='uint;uint' param_defaults='undefined;undefined' result_type='uint'>
</method>
<method name='toString' fullname='com.hurlant.crypto.hash:SHA256/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='h' fullname='com.hurlant.crypto.hash:SHA256/protected:h' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='k' fullname='com.hurlant.crypto.hash:SHA256/protected:k' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<packageRec name='com.hurlant.crypto.hash.null' fullname='com.hurlant.crypto.hash.null'>
<description><![CDATA[
 SHA1
 
 An ActionScript 3 implementation of Secure Hash Algorithm, SHA-1, as defined
 in FIPS PUB 180-1
 Copyright (c) 2007 Henri Torgemane
 
 Derived from:
 		A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 		in FIPS PUB 180-1
 		Version 2.1a Copyright Paul Johnston 2000 - 2002.
 		Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='SHA1' fullname='com.hurlant.crypto.hash:SHA1' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/hash/SHA1.as' namespace='com.hurlant.crypto.hash' access='public' baseclass='com.hurlant.crypto.hash:SHABase' interfaces='com.hurlant.crypto.hash:IHash' isFinal='false' isDynamic='false' >
</classRec>
<method name='core' fullname='com.hurlant.crypto.hash:SHA1/protected:core' isStatic='false' isFinal='false' isOverride='true'  param_names='x;len' param_types='Array;uint' param_defaults='undefined;undefined' result_type='Array'>
</method>
<method name='ft' fullname='com.hurlant.crypto.hash:SHA1/private:ft' isStatic='false' isFinal='false' isOverride='false'  param_names='t;b;c;d' param_types='uint;uint;uint;uint' param_defaults='undefined;undefined;undefined;undefined' result_type='uint'>
</method>
<method name='getHashSize' fullname='com.hurlant.crypto.hash:SHA1/getHashSize' isStatic='false' isFinal='false' isOverride='true'  result_type='uint'>
</method>
<method name='kt' fullname='com.hurlant.crypto.hash:SHA1/private:kt' isStatic='false' isFinal='false' isOverride='false'  param_names='t' param_types='uint' param_defaults='undefined' result_type='uint'>
</method>
<method name='rol' fullname='com.hurlant.crypto.hash:SHA1/private:rol' isStatic='false' isFinal='false' isOverride='false'  param_names='num;cnt' param_types='uint;uint' param_defaults='undefined;undefined' result_type='uint'>
</method>
<method name='toString' fullname='com.hurlant.crypto.hash:SHA1/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='HASH_SIZE' fullname='com.hurlant.crypto.hash:SHA1/HASH_SIZE' type='int' isStatic='true' isConst='true' defaultValue='20' >
</field>
<packageRec name='com.hurlant.crypto.hash.null' fullname='com.hurlant.crypto.hash.null'>
<description><![CDATA[
 SHA224
 
 An ActionScript 3 implementation of Secure Hash Algorithm, SHA-224, as defined
 in FIPS PUB 180-2
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='SHA224' fullname='com.hurlant.crypto.hash:SHA224' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/hash/SHA224.as' namespace='com.hurlant.crypto.hash' access='public' baseclass='com.hurlant.crypto.hash:SHA256' isFinal='false' isDynamic='false' >
</classRec>
<method name='SHA224' fullname='com.hurlant.crypto.hash:SHA224/com.hurlant.crypto.hash:SHA224' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='getHashSize' fullname='com.hurlant.crypto.hash:SHA224/getHashSize' isStatic='false' isFinal='false' isOverride='true'  result_type='uint'>
</method>
<method name='toString' fullname='com.hurlant.crypto.hash:SHA224/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<packageRec name='com.hurlant.crypto.prng.null' fullname='com.hurlant.crypto.prng.null'>
<description><![CDATA[
 IPRNG
 
 An interface for classes that can be used a pseudo-random number generators
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<interfaceRec name='IPRNG' fullname='com.hurlant.crypto.prng:IPRNG' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/prng/IPRNG.as' namespace='com.hurlant.crypto.prng' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='dispose' fullname='com.hurlant.crypto.prng:IPRNG/com.hurlant.crypto.prng:IPRNG:dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getPoolSize' fullname='com.hurlant.crypto.prng:IPRNG/com.hurlant.crypto.prng:IPRNG:getPoolSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='init' fullname='com.hurlant.crypto.prng:IPRNG/com.hurlant.crypto.prng:IPRNG:init' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='next' fullname='com.hurlant.crypto.prng:IPRNG/com.hurlant.crypto.prng:IPRNG:next' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='toString' fullname='com.hurlant.crypto.prng:IPRNG/com.hurlant.crypto.prng:IPRNG:toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<packageRec name='com.hurlant.crypto.prng.null' fullname='com.hurlant.crypto.prng.null'>
<description><![CDATA[
 ARC4
 
 An ActionScript 3 implementation of RC4
 Copyright (c) 2007 Henri Torgemane
 
 Derived from:
 		The jsbn library, Copyright (c) 2003-2005 Tom Wu
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='ARC4' fullname='com.hurlant.crypto.prng:ARC4' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/prng/ARC4.as' namespace='com.hurlant.crypto.prng' access='public' baseclass='Object' interfaces='com.hurlant.crypto.prng:IPRNG;com.hurlant.crypto.symmetric:IStreamCipher' isFinal='false' isDynamic='false' >
</classRec>
<method name='ARC4' fullname='com.hurlant.crypto.prng:ARC4/ARC4' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='flash.utils:ByteArray' param_defaults='null' result_type='*'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.prng:ARC4/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='block' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='dispose' fullname='com.hurlant.crypto.prng:ARC4/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.prng:ARC4/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='block' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='getBlockSize' fullname='com.hurlant.crypto.prng:ARC4/getBlockSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getPoolSize' fullname='com.hurlant.crypto.prng:ARC4/getPoolSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='init' fullname='com.hurlant.crypto.prng:ARC4/init' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='next' fullname='com.hurlant.crypto.prng:ARC4/next' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='toString' fullname='com.hurlant.crypto.prng:ARC4/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='S' fullname='com.hurlant.crypto.prng:ARC4/private:S' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='i' fullname='com.hurlant.crypto.prng:ARC4/private:i' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='j' fullname='com.hurlant.crypto.prng:ARC4/private:j' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='psize' fullname='com.hurlant.crypto.prng:ARC4/private:psize' type='uint' isStatic='false' isConst='true' defaultValue='256' >
</field>
<packageRec name='com.hurlant.crypto.prng.null' fullname='com.hurlant.crypto.prng.null'>
<description><![CDATA[
 TLSPRF
 
 An ActionScript 3 implementation of a pseudo-random generator
 that follows the TLS specification
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='TLSPRF' fullname='com.hurlant.crypto.prng:TLSPRF' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/prng/TLSPRF.as' namespace='com.hurlant.crypto.prng' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 There's "Random", and then there's TLS Random.
	 .
	 Still Pseudo-random, though.
	 ]]></description>
</classRec>
<method name='TLSPRF' fullname='com.hurlant.crypto.prng:TLSPRF/TLSPRF' isStatic='false' isFinal='false' isOverride='false'  param_names='secret;label;seed' param_types='flash.utils:ByteArray;String;flash.utils:ByteArray' param_defaults='undefined;undefined;undefined' result_type='*'>
</method>
<method name='dba' fullname='com.hurlant.crypto.prng:TLSPRF/private:dba' isStatic='false' isFinal='false' isOverride='false'  param_names='ba' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='dispose' fullname='com.hurlant.crypto.prng:TLSPRF/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='more_md5' fullname='com.hurlant.crypto.prng:TLSPRF/private:more_md5' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='more_sha1' fullname='com.hurlant.crypto.prng:TLSPRF/private:more_sha1' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='nextByte' fullname='com.hurlant.crypto.prng:TLSPRF/nextByte' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='nextBytes' fullname='com.hurlant.crypto.prng:TLSPRF/nextBytes' isStatic='false' isFinal='false' isOverride='false'  param_names='buffer;length' param_types='flash.utils:IDataOutput;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='toString' fullname='com.hurlant.crypto.prng:TLSPRF/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='a1' fullname='com.hurlant.crypto.prng:TLSPRF/private:a1' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='a2' fullname='com.hurlant.crypto.prng:TLSPRF/private:a2' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='d1' fullname='com.hurlant.crypto.prng:TLSPRF/private:d1' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='d2' fullname='com.hurlant.crypto.prng:TLSPRF/private:d2' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='hmac_md5' fullname='com.hurlant.crypto.prng:TLSPRF/private:hmac_md5' type='com.hurlant.crypto.hash:HMAC' isStatic='false' isConst='false' >
</field>
<field name='hmac_sha1' fullname='com.hurlant.crypto.prng:TLSPRF/private:hmac_sha1' type='com.hurlant.crypto.hash:HMAC' isStatic='false' isConst='false' >
</field>
<field name='p1' fullname='com.hurlant.crypto.prng:TLSPRF/private:p1' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='p2' fullname='com.hurlant.crypto.prng:TLSPRF/private:p2' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='s1' fullname='com.hurlant.crypto.prng:TLSPRF/private:s1' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='s2' fullname='com.hurlant.crypto.prng:TLSPRF/private:s2' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='seed' fullname='com.hurlant.crypto.prng:TLSPRF/private:seed' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.prng.null' fullname='com.hurlant.crypto.prng.null'>
<description><![CDATA[
 Random
 
 An ActionScript 3 implementation of a Random Number Generator
 Copyright (c) 2007 Henri Torgemane
 
 Derived from:
 		The jsbn library, Copyright (c) 2003-2005 Tom Wu
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='Random' fullname='com.hurlant.crypto.prng:Random' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/prng/Random.as' namespace='com.hurlant.crypto.prng' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='Random' fullname='com.hurlant.crypto.prng:Random/Random' isStatic='false' isFinal='false' isOverride='false'  param_names='prng' param_types='Class' param_defaults='null' result_type='*'>
</method>
<method name='autoSeed' fullname='com.hurlant.crypto.prng:Random/autoSeed' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Gather anything we have that isn't entirely predictable:
		  - memory used
		  - system capabilities
		  - timing stuff
		  - installed fonts
		 ]]></description>
</method>
<method name='dispose' fullname='com.hurlant.crypto.prng:Random/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='nextByte' fullname='com.hurlant.crypto.prng:Random/nextByte' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
</method>
<method name='nextBytes' fullname='com.hurlant.crypto.prng:Random/nextBytes' isStatic='false' isFinal='false' isOverride='false'  param_names='buffer;length' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='seed' fullname='com.hurlant.crypto.prng:Random/seed' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='int' param_defaults='0' result_type='void'>
</method>
<method name='toString' fullname='com.hurlant.crypto.prng:Random/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='pool' fullname='com.hurlant.crypto.prng:Random/private:pool' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='pptr' fullname='com.hurlant.crypto.prng:Random/private:pptr' type='int' isStatic='false' isConst='false' >
</field>
<field name='psize' fullname='com.hurlant.crypto.prng:Random/private:psize' type='int' isStatic='false' isConst='false' >
</field>
<field name='ready' fullname='com.hurlant.crypto.prng:Random/private:ready' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='seeded' fullname='com.hurlant.crypto.prng:Random/private:seeded' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='state' fullname='com.hurlant.crypto.prng:Random/private:state' type='com.hurlant.crypto.prng:IPRNG' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 ISymmetricKey
 
 An interface for symmetric encryption keys to implement.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<interfaceRec name='ISymmetricKey' fullname='com.hurlant.crypto.symmetric:ISymmetricKey' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/ISymmetricKey.as' namespace='com.hurlant.crypto.symmetric' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:ISymmetricKey/com.hurlant.crypto.symmetric:ISymmetricKey:decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='block;index' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;0' result_type='void'>
<description><![CDATA[
		 Decrypt one block of data in "block", starting at "index", of length "getBlockSize()"
		 ]]></description>
</method>
<method name='dispose' fullname='com.hurlant.crypto.symmetric:ISymmetricKey/com.hurlant.crypto.symmetric:ISymmetricKey:dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 Attempts to destroy sensitive information from memory, such as encryption keys.
		 Note: This is not guaranteed to work given the Flash sandbox model.
		 ]]></description>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:ISymmetricKey/com.hurlant.crypto.symmetric:ISymmetricKey:encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='block;index' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;0' result_type='void'>
<description><![CDATA[
		 Encrypt one block of data in "block", starting at "index", of length "getBlockSize()"
		 ]]></description>
</method>
<method name='getBlockSize' fullname='com.hurlant.crypto.symmetric:ISymmetricKey/com.hurlant.crypto.symmetric:ISymmetricKey:getBlockSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
		 Returns the block size used by this particular encryption algorithm
		 ]]></description>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:ISymmetricKey/com.hurlant.crypto.symmetric:ISymmetricKey:toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 IPad
 
 An interface for padding mechanisms to implement.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<interfaceRec name='IPad' fullname='com.hurlant.crypto.symmetric:IPad' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/IPad.as' namespace='com.hurlant.crypto.symmetric' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Tiny interface that represents a padding mechanism.
	 ]]></description>
</interfaceRec>
<method name='pad' fullname='com.hurlant.crypto.symmetric:IPad/com.hurlant.crypto.symmetric:IPad:pad' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Add padding to the array
		 ]]></description>
</method>
<method name='setBlockSize' fullname='com.hurlant.crypto.symmetric:IPad/com.hurlant.crypto.symmetric:IPad:setBlockSize' isStatic='false' isFinal='false' isOverride='false'  param_names='bs' param_types='uint' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Set the blockSize to work on
		 ]]></description>
</method>
<method name='unpad' fullname='com.hurlant.crypto.symmetric:IPad/com.hurlant.crypto.symmetric:IPad:unpad' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Remove padding from the array.
		 ]]></description>
<throws><![CDATA[Error if the padding is invalid.
		 ]]></throws>
</method>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 ICipher
 
 A generic interface to use symmetric ciphers
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<interfaceRec name='ICipher' fullname='com.hurlant.crypto.symmetric:ICipher' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/ICipher.as' namespace='com.hurlant.crypto.symmetric' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:ICipher/com.hurlant.crypto.symmetric:ICipher:decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='dispose' fullname='com.hurlant.crypto.symmetric:ICipher/com.hurlant.crypto.symmetric:ICipher:dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:ICipher/com.hurlant.crypto.symmetric:ICipher:encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='getBlockSize' fullname='com.hurlant.crypto.symmetric:ICipher/com.hurlant.crypto.symmetric:ICipher:getBlockSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:ICipher/com.hurlant.crypto.symmetric:ICipher:toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 TLSPad
 
 A padding implementation used by TLS
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='SSLPad' fullname='com.hurlant.crypto.symmetric:SSLPad' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/SSLPad.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='Object' interfaces='com.hurlant.crypto.symmetric:IPad' isFinal='false' isDynamic='false' >
</classRec>
<method name='SSLPad' fullname='com.hurlant.crypto.symmetric:SSLPad/SSLPad' isStatic='false' isFinal='false' isOverride='false'  param_names='blockSize' param_types='uint' param_defaults='0' result_type='*'>
</method>
<method name='pad' fullname='com.hurlant.crypto.symmetric:SSLPad/pad' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='setBlockSize' fullname='com.hurlant.crypto.symmetric:SSLPad/setBlockSize' isStatic='false' isFinal='false' isOverride='false'  param_names='bs' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='unpad' fullname='com.hurlant.crypto.symmetric:SSLPad/unpad' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<field name='blockSize' fullname='com.hurlant.crypto.symmetric:SSLPad/private:blockSize' type='uint' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 IStreamCipher
 
 A "marker" interface for stream ciphers.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<interfaceRec name='IStreamCipher' fullname='com.hurlant.crypto.symmetric:IStreamCipher' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/IStreamCipher.as' namespace='com.hurlant.crypto.symmetric' access='public' baseClasses='com.hurlant.crypto.symmetric:ICipher' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 A marker to indicate how this cipher works.
	 A stream cipher:
	 - does not use initialization vector
	 - keeps some internal state between calls to encrypt() and decrypt()
	 
	 ]]></description>
</interfaceRec>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 TLSPad
 
 A padding implementation used by TLS
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='TLSPad' fullname='com.hurlant.crypto.symmetric:TLSPad' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/TLSPad.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='Object' interfaces='com.hurlant.crypto.symmetric:IPad' isFinal='false' isDynamic='false' >
</classRec>
<method name='TLSPad' fullname='com.hurlant.crypto.symmetric:TLSPad/TLSPad' isStatic='false' isFinal='false' isOverride='false'  param_names='blockSize' param_types='uint' param_defaults='0' result_type='*'>
</method>
<method name='pad' fullname='com.hurlant.crypto.symmetric:TLSPad/pad' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='setBlockSize' fullname='com.hurlant.crypto.symmetric:TLSPad/setBlockSize' isStatic='false' isFinal='false' isOverride='false'  param_names='bs' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='unpad' fullname='com.hurlant.crypto.symmetric:TLSPad/unpad' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<field name='blockSize' fullname='com.hurlant.crypto.symmetric:TLSPad/private:blockSize' type='uint' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 IMode
 
 An interface for confidentiality modes to implement
 This could become deprecated at some point.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<interfaceRec name='IMode' fullname='com.hurlant.crypto.symmetric:IMode' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/IMode.as' namespace='com.hurlant.crypto.symmetric' access='public' baseClasses='com.hurlant.crypto.symmetric:ICipher' isFinal='false' isDynamic='false' >
</interfaceRec>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 NullPad
 
 A padding class that doesn't pad.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='NullPad' fullname='com.hurlant.crypto.symmetric:NullPad' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/NullPad.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='Object' interfaces='com.hurlant.crypto.symmetric:IPad' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 A pad that does nothing.
	 Useful when you don't want padding in your Mode.
	 ]]></description>
</classRec>
<method name='pad' fullname='com.hurlant.crypto.symmetric:NullPad/pad' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='setBlockSize' fullname='com.hurlant.crypto.symmetric:NullPad/setBlockSize' isStatic='false' isFinal='false' isOverride='false'  param_names='bs' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='unpad' fullname='com.hurlant.crypto.symmetric:NullPad/unpad' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 IVMode
 
 An abstract class for confidentialy modes that rely on an initialization vector.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='IVMode' fullname='com.hurlant.crypto.symmetric:IVMode' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/IVMode.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 An "abtract" class to avoid redundant code in subclasses
	 ]]></description>
</classRec>
<method name='IVMode' fullname='com.hurlant.crypto.symmetric:IVMode/IVMode' isStatic='false' isFinal='false' isOverride='false'  param_names='key;padding' param_types='com.hurlant.crypto.symmetric:ISymmetricKey;com.hurlant.crypto.symmetric:IPad' param_defaults='undefined;null' result_type='*'>
</method>
<method name='dispose' fullname='com.hurlant.crypto.symmetric:IVMode/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getBlockSize' fullname='com.hurlant.crypto.symmetric:IVMode/getBlockSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getIV4d' fullname='com.hurlant.crypto.symmetric:IVMode/protected:getIV4d' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
</method>
<method name='getIV4e' fullname='com.hurlant.crypto.symmetric:IVMode/protected:getIV4e' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
</method>
<method name='IV' fullname='com.hurlant.crypto.symmetric:IVMode/IV/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
</method>
<method name='IV' fullname='com.hurlant.crypto.symmetric:IVMode/IV/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Optional function to force the IV value.
		 Normally, an IV gets generated randomly at every encrypt() call.
		 Also, use this to set the IV before calling decrypt()
		 (if not set before decrypt(), the IV is read from the beginning of the stream.)
		 ]]></description>
</method>
<field name='blockSize' fullname='com.hurlant.crypto.symmetric:IVMode/protected:blockSize' type='uint' isStatic='false' isConst='false' >
</field>
<field name='iv' fullname='com.hurlant.crypto.symmetric:IVMode/protected:iv' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='key' fullname='com.hurlant.crypto.symmetric:IVMode/protected:key' type='com.hurlant.crypto.symmetric:ISymmetricKey' isStatic='false' isConst='false' >
</field>
<field name='lastIV' fullname='com.hurlant.crypto.symmetric:IVMode/protected:lastIV' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='padding' fullname='com.hurlant.crypto.symmetric:IVMode/protected:padding' type='com.hurlant.crypto.symmetric:IPad' isStatic='false' isConst='false' >
</field>
<field name='prng' fullname='com.hurlant.crypto.symmetric:IVMode/protected:prng' type='com.hurlant.crypto.prng:Random' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 DESKey
 
 An Actionscript 3 implementation of the Data Encryption Standard (DES)
 Copyright (c) 2007 Henri Torgemane
 
 Derived from:
 		The Bouncy Castle Crypto package, 
 		Copyright (c) 2000-2004 The Legion Of The Bouncy Castle
 		(http://www.bouncycastle.org)
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='DESKey' fullname='com.hurlant.crypto.symmetric:DESKey' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/DESKey.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='Object' interfaces='com.hurlant.crypto.symmetric:ISymmetricKey' isFinal='false' isDynamic='false' >
</classRec>
<method name='DESKey' fullname='com.hurlant.crypto.symmetric:DESKey/DESKey' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='*'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:DESKey/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='block;index' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;0' result_type='void'>
</method>
<method name='desFunc' fullname='com.hurlant.crypto.symmetric:DESKey/protected:desFunc' isStatic='false' isFinal='false' isOverride='false'  param_names='wKey;inp;inOff;out;outOff' param_types='Array;flash.utils:ByteArray;uint;flash.utils:ByteArray;uint' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 the DES engine.
		 ]]></description>
</method>
<method name='dispose' fullname='com.hurlant.crypto.symmetric:DESKey/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:DESKey/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='block;index' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;0' result_type='void'>
</method>
<method name='generateWorkingKey' fullname='com.hurlant.crypto.symmetric:DESKey/protected:generateWorkingKey' isStatic='false' isFinal='false' isOverride='false'  param_names='encrypting;key;off' param_types='Boolean;flash.utils:ByteArray;uint' param_defaults='undefined;undefined;undefined' result_type='Array'>
<description><![CDATA[
		 generate an integer based working key based on our secret key and what we
		 processing we are planning to do.
		 
		 Acknowledgements for this routine go to James Gillogly &amp; Phil Karn.
		 ]]></description>
</method>
<method name='getBlockSize' fullname='com.hurlant.crypto.symmetric:DESKey/getBlockSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:DESKey/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='Df_Key' fullname='com.hurlant.crypto.symmetric:DESKey/private:Df_Key' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[
		 what follows is mainly taken from "Applied Cryptography", by Bruce
		 Schneier, however it also bears great resemblance to Richard
		 Outerbridge's D3DES...
		 ]]></description>
</field>
<field name='SP1' fullname='com.hurlant.crypto.symmetric:DESKey/private:SP1' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='SP2' fullname='com.hurlant.crypto.symmetric:DESKey/private:SP2' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='SP3' fullname='com.hurlant.crypto.symmetric:DESKey/private:SP3' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='SP4' fullname='com.hurlant.crypto.symmetric:DESKey/private:SP4' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='SP5' fullname='com.hurlant.crypto.symmetric:DESKey/private:SP5' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='SP6' fullname='com.hurlant.crypto.symmetric:DESKey/private:SP6' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='SP7' fullname='com.hurlant.crypto.symmetric:DESKey/private:SP7' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='SP8' fullname='com.hurlant.crypto.symmetric:DESKey/private:SP8' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='bigbyte' fullname='com.hurlant.crypto.symmetric:DESKey/private:bigbyte' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='bytebit' fullname='com.hurlant.crypto.symmetric:DESKey/private:bytebit' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='decKey' fullname='com.hurlant.crypto.symmetric:DESKey/protected:decKey' type='Array' isStatic='false' isConst='false' >
</field>
<field name='encKey' fullname='com.hurlant.crypto.symmetric:DESKey/protected:encKey' type='Array' isStatic='false' isConst='false' >
</field>
<field name='key' fullname='com.hurlant.crypto.symmetric:DESKey/protected:key' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='pc1' fullname='com.hurlant.crypto.symmetric:DESKey/private:pc1' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='pc2' fullname='com.hurlant.crypto.symmetric:DESKey/private:pc2' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='totrot' fullname='com.hurlant.crypto.symmetric:DESKey/private:totrot' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 AESKey
 
 An ActionScript 3 implementation of the Advanced Encryption Standard, as
 defined in FIPS PUB 197
 Copyright (c) 2007 Henri Torgemane
 
 Derived from:
 		A public domain implementation from Karl Malbrain, malbrain&#64;yahoo.com
 		(http://www.geocities.com/malbrain/aestable_c.html)
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='AESKey' fullname='com.hurlant.crypto.symmetric:AESKey' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/AESKey.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='Object' interfaces='com.hurlant.crypto.symmetric:ISymmetricKey' isFinal='false' isDynamic='false' >
</classRec>
<method name='AESKey' fullname='com.hurlant.crypto.symmetric:AESKey/AESKey' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='*'>
</method>
<method name='addRoundKey' fullname='com.hurlant.crypto.symmetric:AESKey/protected:addRoundKey' isStatic='false' isFinal='false' isOverride='false'  param_names='key;offset' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:AESKey/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='block;index' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;0' result_type='void'>
</method>
<method name='dispose' fullname='com.hurlant.crypto.symmetric:AESKey/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:AESKey/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='block;index' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;0' result_type='void'>
</method>
<method name='expandKey' fullname='com.hurlant.crypto.symmetric:AESKey/private:expandKey' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='getBlockSize' fullname='com.hurlant.crypto.symmetric:AESKey/getBlockSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='invMixSubColumns' fullname='com.hurlant.crypto.symmetric:AESKey/protected:invMixSubColumns' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='invShiftRows' fullname='com.hurlant.crypto.symmetric:AESKey/protected:invShiftRows' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='mixSubColumns' fullname='com.hurlant.crypto.symmetric:AESKey/protected:mixSubColumns' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='shiftRows' fullname='com.hurlant.crypto.symmetric:AESKey/protected:shiftRows' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:AESKey/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='InvSbox' fullname='com.hurlant.crypto.symmetric:AESKey/private:InvSbox' type='flash.utils:ByteArray' isStatic='true' isConst='false' >
</field>
<field name='Nb' fullname='com.hurlant.crypto.symmetric:AESKey/private:Nb' type='uint' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='Nr' fullname='com.hurlant.crypto.symmetric:AESKey/private:Nr' type='uint' isStatic='false' isConst='false' >
</field>
<field name='Rcon' fullname='com.hurlant.crypto.symmetric:AESKey/private:Rcon' type='flash.utils:ByteArray' isStatic='true' isConst='false' >
</field>
<field name='Sbox' fullname='com.hurlant.crypto.symmetric:AESKey/private:Sbox' type='flash.utils:ByteArray' isStatic='true' isConst='false' >
</field>
<field name='Xtime2Sbox' fullname='com.hurlant.crypto.symmetric:AESKey/private:Xtime2Sbox' type='flash.utils:ByteArray' isStatic='true' isConst='false' >
</field>
<field name='Xtime2' fullname='com.hurlant.crypto.symmetric:AESKey/private:Xtime2' type='flash.utils:ByteArray' isStatic='true' isConst='false' >
</field>
<field name='Xtime3Sbox' fullname='com.hurlant.crypto.symmetric:AESKey/private:Xtime3Sbox' type='flash.utils:ByteArray' isStatic='true' isConst='false' >
</field>
<field name='Xtime9' fullname='com.hurlant.crypto.symmetric:AESKey/private:Xtime9' type='flash.utils:ByteArray' isStatic='true' isConst='false' >
</field>
<field name='XtimeB' fullname='com.hurlant.crypto.symmetric:AESKey/private:XtimeB' type='flash.utils:ByteArray' isStatic='true' isConst='false' >
</field>
<field name='XtimeD' fullname='com.hurlant.crypto.symmetric:AESKey/private:XtimeD' type='flash.utils:ByteArray' isStatic='true' isConst='false' >
</field>
<field name='XtimeE' fullname='com.hurlant.crypto.symmetric:AESKey/private:XtimeE' type='flash.utils:ByteArray' isStatic='true' isConst='false' >
</field>
<field name='_InvSbox' fullname='com.hurlant.crypto.symmetric:AESKey/private:_InvSbox' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_Rcon' fullname='com.hurlant.crypto.symmetric:AESKey/private:_Rcon' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_Sbox' fullname='com.hurlant.crypto.symmetric:AESKey/private:_Sbox' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_Xtime2Sbox' fullname='com.hurlant.crypto.symmetric:AESKey/private:_Xtime2Sbox' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_Xtime2' fullname='com.hurlant.crypto.symmetric:AESKey/private:_Xtime2' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_Xtime3Sbox' fullname='com.hurlant.crypto.symmetric:AESKey/private:_Xtime3Sbox' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_Xtime9' fullname='com.hurlant.crypto.symmetric:AESKey/private:_Xtime9' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_XtimeB' fullname='com.hurlant.crypto.symmetric:AESKey/private:_XtimeB' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_XtimeD' fullname='com.hurlant.crypto.symmetric:AESKey/private:_XtimeD' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_XtimeE' fullname='com.hurlant.crypto.symmetric:AESKey/private:_XtimeE' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='keyLength' fullname='com.hurlant.crypto.symmetric:AESKey/private:keyLength' type='uint' isStatic='false' isConst='false' >
</field>
<field name='key' fullname='com.hurlant.crypto.symmetric:AESKey/private:key' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='state' fullname='com.hurlant.crypto.symmetric:AESKey/private:state' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<field name='tmp' fullname='com.hurlant.crypto.symmetric:AESKey/private:tmp' type='flash.utils:ByteArray' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 ECBMode
 
 An ActionScript 3 implementation of the ECB confidentiality mode
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='ECBMode' fullname='com.hurlant.crypto.symmetric:ECBMode' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/ECBMode.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='Object' interfaces='com.hurlant.crypto.symmetric:IMode;com.hurlant.crypto.symmetric:ICipher' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 ECB mode.
	 This uses a padding and a symmetric key.
	 If no padding is given, PKCS#5 is used.
	 ]]></description>
</classRec>
<method name='ECBMode' fullname='com.hurlant.crypto.symmetric:ECBMode/ECBMode' isStatic='false' isFinal='false' isOverride='false'  param_names='key;padding' param_types='com.hurlant.crypto.symmetric:ISymmetricKey;com.hurlant.crypto.symmetric:IPad' param_defaults='undefined;null' result_type='*'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:ECBMode/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='dispose' fullname='com.hurlant.crypto.symmetric:ECBMode/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:ECBMode/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='getBlockSize' fullname='com.hurlant.crypto.symmetric:ECBMode/getBlockSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:ECBMode/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='key' fullname='com.hurlant.crypto.symmetric:ECBMode/private:key' type='com.hurlant.crypto.symmetric:ISymmetricKey' isStatic='false' isConst='false' >
</field>
<field name='padding' fullname='com.hurlant.crypto.symmetric:ECBMode/private:padding' type='com.hurlant.crypto.symmetric:IPad' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 XTeaKey
 
 An ActionScript 3 implementation of the XTea algorithm
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='XTeaKey' fullname='com.hurlant.crypto.symmetric:XTeaKey' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/XTeaKey.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='Object' interfaces='com.hurlant.crypto.symmetric:ISymmetricKey' isFinal='false' isDynamic='false' >
</classRec>
<method name='XTeaKey' fullname='com.hurlant.crypto.symmetric:XTeaKey/XTeaKey' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='*'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:XTeaKey/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='block;index' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;0' result_type='void'>
</method>
<method name='dispose' fullname='com.hurlant.crypto.symmetric:XTeaKey/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:XTeaKey/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='block;index' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;0' result_type='void'>
</method>
<method name='getBlockSize' fullname='com.hurlant.crypto.symmetric:XTeaKey/getBlockSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='parseKey' fullname='com.hurlant.crypto.symmetric:XTeaKey/parseKey' isStatic='true' isFinal='false' isOverride='false'  param_names='K' param_types='String' param_defaults='undefined' result_type='com.hurlant.crypto.symmetric:XTeaKey'>
<description><![CDATA[
		 K is an hex string with 32 digits.
		 ]]></description>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:XTeaKey/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='NUM_ROUNDS' fullname='com.hurlant.crypto.symmetric:XTeaKey/NUM_ROUNDS' type='uint' isStatic='false' isConst='true' defaultValue='64' >
</field>
<field name='k' fullname='com.hurlant.crypto.symmetric:XTeaKey/private:k' type='Array' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 PKCS5
  A padding implementation of PKCS5.
 Copyright (c) 2007 Henri Torgemane
 contributed: Alexander Keck
  See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='PKCS5' fullname='com.hurlant.crypto.symmetric:PKCS5' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/PKCS5.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='Object' interfaces='com.hurlant.crypto.symmetric:IPad' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 TODO: rename / refactor class name and methods since the used general definition
	 of the padding algorithm is defined in PKCS#7 (rfc5652 section 6.3)
	 ]]></description>
</classRec>
<method name='PKCS5' fullname='com.hurlant.crypto.symmetric:PKCS5/PKCS5' isStatic='false' isFinal='false' isOverride='false'  param_names='blockSize' param_types='uint' param_defaults='0' result_type='*'>
</method>
<method name='pad' fullname='com.hurlant.crypto.symmetric:PKCS5/pad' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='pbkdf2' fullname='com.hurlant.crypto.symmetric:PKCS5/pbkdf2' isStatic='true' isFinal='false' isOverride='false'  param_names='p;s;c;dkLen' param_types='flash.utils:ByteArray;flash.utils:ByteArray;int;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Implementation of the PDKDF2 (public based key derivation
		 function 2) from PKCS#5 (rfc2898) chapter 5.2.
		 In this implementation the HMAC-SHA1 will be used as the
		 PRF (pseudorandom function) with a hLen of 20 Bytes.
		 		 ]]></description>
<param><![CDATA[p password
		 ]]></param>
<param><![CDATA[s salt
		 ]]></param>
<param><![CDATA[c iteration count
		 ]]></param>
</method>
<method name='setBlockSize' fullname='com.hurlant.crypto.symmetric:PKCS5/setBlockSize' isStatic='false' isFinal='false' isOverride='false'  param_names='bs' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='unpad' fullname='com.hurlant.crypto.symmetric:PKCS5/unpad' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<field name='blockSize' fullname='com.hurlant.crypto.symmetric:PKCS5/private:blockSize' type='uint' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 SimpleIVMode
 
 A convenience class that automatically places the IV
 at the beginning of the encrypted stream, so it doesn't have to
 be handled explicitely.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='SimpleIVMode' fullname='com.hurlant.crypto.symmetric:SimpleIVMode' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/SimpleIVMode.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='Object' interfaces='com.hurlant.crypto.symmetric:IMode;com.hurlant.crypto.symmetric:ICipher' isFinal='false' isDynamic='false' >
</classRec>
<method name='SimpleIVMode' fullname='com.hurlant.crypto.symmetric:SimpleIVMode/SimpleIVMode' isStatic='false' isFinal='false' isOverride='false'  param_names='mode' param_types='com.hurlant.crypto.symmetric:IVMode' param_defaults='undefined' result_type='*'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:SimpleIVMode/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='dispose' fullname='com.hurlant.crypto.symmetric:SimpleIVMode/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:SimpleIVMode/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='getBlockSize' fullname='com.hurlant.crypto.symmetric:SimpleIVMode/getBlockSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:SimpleIVMode/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='cipher' fullname='com.hurlant.crypto.symmetric:SimpleIVMode/protected:cipher' type='com.hurlant.crypto.symmetric:ICipher' isStatic='false' isConst='false' >
</field>
<field name='mode' fullname='com.hurlant.crypto.symmetric:SimpleIVMode/protected:mode' type='com.hurlant.crypto.symmetric:IVMode' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 BlowFishKey
 
 An Actionscript 3 implementation of the BlowFish encryption algorithm,
 as documented at http://www.schneier.com/blowfish.html
 Copyright (c) 2007 Henri Torgemane
 
 Derived from:
 		The Bouncy Castle Crypto package, 
 		Copyright (c) 2000-2004 The Legion Of The Bouncy Castle
 		(http://www.bouncycastle.org)
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='BlowFishKey' fullname='com.hurlant.crypto.symmetric:BlowFishKey' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/BlowFishKey.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='Object' interfaces='com.hurlant.crypto.symmetric:ISymmetricKey' isFinal='false' isDynamic='false' >
</classRec>
<method name='Bits32ToBytes' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:Bits32ToBytes' isStatic='false' isFinal='false' isOverride='false'  param_names='i;b;offset' param_types='uint;flash.utils:ByteArray;uint' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='BlowFishKey' fullname='com.hurlant.crypto.symmetric:BlowFishKey/BlowFishKey' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='*'>
</method>
<method name='BytesTo32bits' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:BytesTo32bits' isStatic='false' isFinal='false' isOverride='false'  param_names='b;i' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;undefined' result_type='uint'>
</method>
<method name='F' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:F' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='uint' param_defaults='undefined' result_type='uint'>
</method>
<method name='decryptBlock' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:decryptBlock' isStatic='false' isFinal='false' isOverride='false'  param_names='src;srcIndex;dst;dstIndex' param_types='flash.utils:ByteArray;uint;flash.utils:ByteArray;uint' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Decrypt the given input starting at the given offset and place the result
		 in the provided buffer starting at the given offset. The input will be an
		 exact multiple of our blocksize.
		 ]]></description>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:BlowFishKey/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='block;index' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;0' result_type='void'>
</method>
<method name='dispose' fullname='com.hurlant.crypto.symmetric:BlowFishKey/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='encryptBlock' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:encryptBlock' isStatic='false' isFinal='false' isOverride='false'  param_names='src;srcIndex;dst;dstIndex' param_types='flash.utils:ByteArray;uint;flash.utils:ByteArray;uint' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Encrypt the given input starting at the given offset and place the result
		 in the provided buffer starting at the given offset. The input will be an
		 exact multiple of our blocksize.
		 ]]></description>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:BlowFishKey/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='block;index' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;0' result_type='void'>
</method>
<method name='getBlockSize' fullname='com.hurlant.crypto.symmetric:BlowFishKey/getBlockSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='processTable' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:processTable' isStatic='false' isFinal='false' isOverride='false'  param_names='xl;xr;table' param_types='uint;uint;Array' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 apply the encryption cycle to each value pair in the table.
		 ]]></description>
</method>
<method name='setKey' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:setKey' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:BlowFishKey/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='BLOCK_SIZE' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:BLOCK_SIZE' type='uint' isStatic='true' isConst='true' defaultValue='8' >
</field>
<field name='KP' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:KP' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='KS0' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:KS0' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='KS1' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:KS1' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='KS2' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:KS2' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='KS3' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:KS3' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='P_SZ' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:P_SZ' type='uint' isStatic='true' isConst='true' defaultValue='18.0' >
</field>
<field name='P' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:P' type='Array' isStatic='false' isConst='false' >
</field>
<field name='ROUNDS' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:ROUNDS' type='uint' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='S0' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:S0' type='Array' isStatic='false' isConst='false' >
</field>
<field name='S1' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:S1' type='Array' isStatic='false' isConst='false' >
</field>
<field name='S2' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:S2' type='Array' isStatic='false' isConst='false' >
</field>
<field name='S3' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:S3' type='Array' isStatic='false' isConst='false' >
</field>
<field name='SBOX_SK' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:SBOX_SK' type='uint' isStatic='true' isConst='true' defaultValue='256' >
</field>
<field name='key' fullname='com.hurlant.crypto.symmetric:BlowFishKey/private:key' type='flash.utils:ByteArray' isStatic='false' isConst='false' defaultValue='null' >
</field>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 TripleDESKey
 
 An Actionscript 3 implementation of Triple DES
 Copyright (c) 2007 Henri Torgemane
 
 Derived from:
 		The Bouncy Castle Crypto package, 
 		Copyright (c) 2000-2004 The Legion Of The Bouncy Castle
 		(http://www.bouncycastle.org)
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='TripleDESKey' fullname='com.hurlant.crypto.symmetric:TripleDESKey' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/TripleDESKey.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='com.hurlant.crypto.symmetric:DESKey' isFinal='false' isDynamic='false' >
</classRec>
<method name='TripleDESKey' fullname='com.hurlant.crypto.symmetric:TripleDESKey/TripleDESKey' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='*'>
<description><![CDATA[
		 This supports 2TDES and 3TDES.
		 If the key passed is 128 bits, 2TDES is used.
		 If the key has 192 bits, 3TDES is used.
		 Other key lengths give "undefined" results.
		 ]]></description>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:TripleDESKey/decrypt' isStatic='false' isFinal='false' isOverride='true'  param_names='block;index' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;0' result_type='void'>
</method>
<method name='dispose' fullname='com.hurlant.crypto.symmetric:TripleDESKey/dispose' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:TripleDESKey/encrypt' isStatic='false' isFinal='false' isOverride='true'  param_names='block;index' param_types='flash.utils:ByteArray;uint' param_defaults='undefined;0' result_type='void'>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:TripleDESKey/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='decKey2' fullname='com.hurlant.crypto.symmetric:TripleDESKey/protected:decKey2' type='Array' isStatic='false' isConst='false' >
</field>
<field name='decKey3' fullname='com.hurlant.crypto.symmetric:TripleDESKey/protected:decKey3' type='Array' isStatic='false' isConst='false' >
</field>
<field name='encKey2' fullname='com.hurlant.crypto.symmetric:TripleDESKey/protected:encKey2' type='Array' isStatic='false' isConst='false' >
</field>
<field name='encKey3' fullname='com.hurlant.crypto.symmetric:TripleDESKey/protected:encKey3' type='Array' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 CTRMode
 
 An ActionScript 3 implementation of the counter confidentiality mode
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='CTRMode' fullname='com.hurlant.crypto.symmetric:CTRMode' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/CTRMode.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='com.hurlant.crypto.symmetric:IVMode' interfaces='com.hurlant.crypto.symmetric:IMode' isFinal='false' isDynamic='false' >
</classRec>
<method name='CTRMode' fullname='com.hurlant.crypto.symmetric:CTRMode/CTRMode' isStatic='false' isFinal='false' isOverride='false'  param_names='key;padding' param_types='com.hurlant.crypto.symmetric:ISymmetricKey;com.hurlant.crypto.symmetric:IPad' param_defaults='undefined;null' result_type='*'>
</method>
<method name='core' fullname='com.hurlant.crypto.symmetric:CTRMode/private:core' isStatic='false' isFinal='false' isOverride='false'  param_names='src;iv' param_types='flash.utils:ByteArray;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:CTRMode/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:CTRMode/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:CTRMode/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 OFBMode
 
 An ActionScript 3 implementation of the OFB confidentiality mode
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='OFBMode' fullname='com.hurlant.crypto.symmetric:OFBMode' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/OFBMode.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='com.hurlant.crypto.symmetric:IVMode' interfaces='com.hurlant.crypto.symmetric:IMode' isFinal='false' isDynamic='false' >
</classRec>
<method name='OFBMode' fullname='com.hurlant.crypto.symmetric:OFBMode/OFBMode' isStatic='false' isFinal='false' isOverride='false'  param_names='key;padding' param_types='com.hurlant.crypto.symmetric:ISymmetricKey;com.hurlant.crypto.symmetric:IPad' param_defaults='undefined;null' result_type='*'>
</method>
<method name='core' fullname='com.hurlant.crypto.symmetric:OFBMode/private:core' isStatic='false' isFinal='false' isOverride='false'  param_names='src;iv' param_types='flash.utils:ByteArray;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:OFBMode/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:OFBMode/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:OFBMode/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 CFB8Mode
 
 An ActionScript 3 implementation of the CFB-8 confidentiality mode
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='CFB8Mode' fullname='com.hurlant.crypto.symmetric:CFB8Mode' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/CFB8Mode.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='com.hurlant.crypto.symmetric:IVMode' interfaces='com.hurlant.crypto.symmetric:IMode' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 
	 Note: The constructor accepts an optional padding argument, but ignores it otherwise.
	 ]]></description>
</classRec>
<method name='CFB8Mode' fullname='com.hurlant.crypto.symmetric:CFB8Mode/CFB8Mode' isStatic='false' isFinal='false' isOverride='false'  param_names='key;padding' param_types='com.hurlant.crypto.symmetric:ISymmetricKey;com.hurlant.crypto.symmetric:IPad' param_defaults='undefined;null' result_type='*'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:CFB8Mode/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:CFB8Mode/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:CFB8Mode/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 CBCMode
 
 An ActionScript 3 implementation of the CBC confidentiality mode
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='CBCMode' fullname='com.hurlant.crypto.symmetric:CBCMode' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/CBCMode.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='com.hurlant.crypto.symmetric:IVMode' interfaces='com.hurlant.crypto.symmetric:IMode' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 CBC confidentiality mode. why not.
	 ]]></description>
</classRec>
<method name='CBCMode' fullname='com.hurlant.crypto.symmetric:CBCMode/CBCMode' isStatic='false' isFinal='false' isOverride='false'  param_names='key;padding' param_types='com.hurlant.crypto.symmetric:ISymmetricKey;com.hurlant.crypto.symmetric:IPad' param_defaults='undefined;null' result_type='*'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:CBCMode/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:CBCMode/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:CBCMode/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<packageRec name='com.hurlant.crypto.symmetric.null' fullname='com.hurlant.crypto.symmetric.null'>
<description><![CDATA[
 CFBMode
 
 An ActionScript 3 implementation of the CFB confidentiality mode
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='CFBMode' fullname='com.hurlant.crypto.symmetric:CFBMode' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/symmetric/CFBMode.as' namespace='com.hurlant.crypto.symmetric' access='public' baseclass='com.hurlant.crypto.symmetric:IVMode' interfaces='com.hurlant.crypto.symmetric:IMode' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This is the "full" CFB.
	 CFB1 and CFB8 are hiding somewhere else.
	 
	 Note: The constructor accepts an optional padding argument, but ignores it otherwise.
	 ]]></description>
</classRec>
<method name='CFBMode' fullname='com.hurlant.crypto.symmetric:CFBMode/CFBMode' isStatic='false' isFinal='false' isOverride='false'  param_names='key;padding' param_types='com.hurlant.crypto.symmetric:ISymmetricKey;com.hurlant.crypto.symmetric:IPad' param_defaults='undefined;null' result_type='*'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.symmetric:CFBMode/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.symmetric:CFBMode/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='toString' fullname='com.hurlant.crypto.symmetric:CFBMode/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<packageRec name='com.hurlant.math.null' fullname='com.hurlant.math.null'>
<description><![CDATA[
 bi_internal
 
 A namespace. w00t.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<interfaceRec name='IReduction' fullname='com.hurlant.math:IReduction' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/math/IReduction.as' namespace='com.hurlant.math' access='internal' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='convert' fullname='com.hurlant.math:IReduction/com.hurlant.math:IReduction:convert' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='mulTo' fullname='com.hurlant.math:IReduction/com.hurlant.math:IReduction:mulTo' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='reduce' fullname='com.hurlant.math:IReduction/com.hurlant.math:IReduction:reduce' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='void'>
</method>
<method name='revert' fullname='com.hurlant.math:IReduction/com.hurlant.math:IReduction:revert' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='sqrTo' fullname='com.hurlant.math:IReduction/com.hurlant.math:IReduction:sqrTo' isStatic='false' isFinal='false' isOverride='false'  param_names='x;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='void'>
</method>
<packageRec name='com.hurlant.math.null' fullname='com.hurlant.math.null'>
<description><![CDATA[
 BigInteger
 
 An ActionScript 3 implementation of BigInteger (light version)
 Copyright (c) 2007 Henri Torgemane
 
 Derived from:
 		The jsbn library, Copyright (c) 2003-2005 Tom Wu
 
 See LICENSE.txt for full license information.
 
 Changes 2010-02-10 Jason von Nieda (jason&#64;vonnieda.org)
 ]]></description>
</packageRec>
<classRec name='BigInteger' fullname='com.hurlant.math:BigInteger' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/math/BigInteger.as' namespace='com.hurlant.math' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='BigInteger' fullname='com.hurlant.math:BigInteger/BigInteger' isStatic='false' isFinal='false' isOverride='false'  param_names='value;radix;unsigned' param_types='*;int;Boolean' param_defaults='null;0;false' result_type='*'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[value
		 ]]></param>
<param><![CDATA[radix  WARNING: If value is ByteArray, this holds the number of bytes to use.
		 ]]></param>
<param><![CDATA[unsigned
		 
		 ]]></param>
</method>
<method name='abs' fullname='com.hurlant.math:BigInteger/abs' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 |this|
		 ]]></description>
</method>
<method name='addTo' fullname='com.hurlant.math:BigInteger/protected:addTo' isStatic='false' isFinal='false' isOverride='false'  param_names='a;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[a
		 ]]></param>
<param><![CDATA[r = this + a
		 
		 ]]></param>
</method>
<method name='add' fullname='com.hurlant.math:BigInteger/add' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[a
		 ]]></param>
<return><![CDATA[this + a
		 
		 ]]></return>
</method>
<method name='am' fullname='com.hurlant.math:BigInteger/bi_internal:am' isStatic='false' isFinal='false' isOverride='false'  param_names='i;x;w;j;c;n' param_types='int;int;com.hurlant.math:BigInteger;int;int;int' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='int'>
<description><![CDATA[
		 am: Compute w_j += (x&#42;this_i), propagates carries,
		 c is initial carry, returns final carry.
		 c &lt; 3&#42;dvalue, x &lt; 2&#42;dvalue, this_i &lt; dvalue
		 ]]></description>
</method>
<method name='andNot' fullname='com.hurlant.math:BigInteger/andNot' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='and' fullname='com.hurlant.math:BigInteger/and' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='bitCount' fullname='com.hurlant.math:BigInteger/bitCount' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 
		 ]]></description>
<return><![CDATA[number of set bits
		 
		 ]]></return>
</method>
<method name='bitLength' fullname='com.hurlant.math:BigInteger/bitLength' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 returns the number of bits in this
		 ]]></description>
</method>
<method name='bitwiseTo' fullname='com.hurlant.math:BigInteger/protected:bitwiseTo' isStatic='false' isFinal='false' isOverride='false'  param_names='a;op;r' param_types='com.hurlant.math:BigInteger;Function;com.hurlant.math:BigInteger' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[a	a BigInteger to perform the operation with
		 ]]></param>
<param><![CDATA[op a Function implementing the operation
		 ]]></param>
<param><![CDATA[r a BigInteger to store the result of the operation
		 
		 ]]></param>
</method>
<method name='byteValue' fullname='com.hurlant.math:BigInteger/byteValue' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 
		 ]]></description>
<return><![CDATA[value as byte
		 
		 ]]></return>
</method>
<method name='cbit' fullname='com.hurlant.math:BigInteger/private:cbit' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[x
		 ]]></param>
<return><![CDATA[number of 1 bits in x
		 
		 ]]></return>
</method>
<method name='changeBit' fullname='com.hurlant.math:BigInteger/protected:changeBit' isStatic='false' isFinal='false' isOverride='false'  param_names='n;op' param_types='int;Function' param_defaults='undefined;undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[n
		 ]]></param>
<param><![CDATA[op
		 ]]></param>
<return><![CDATA[this op (1&lt;&lt;n)
		 
		 ]]></return>
</method>
<method name='chunkSize' fullname='com.hurlant.math:BigInteger/protected:chunkSize' isStatic='false' isFinal='false' isOverride='false'  param_names='r' param_types='Number' param_defaults='undefined' result_type='int'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[r
		 ]]></param>
<return><![CDATA[x s.t. r^x &lt; DV
		 
		 ]]></return>
</method>
<method name='clamp' fullname='com.hurlant.math:BigInteger/bi_internal:clamp' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
		 clamp off excess high words
		 ]]></description>
</method>
<method name='clearBit' fullname='com.hurlant.math:BigInteger/clearBit' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[n
		 ]]></param>
<return><![CDATA[this &amp; ~(1&lt;&lt;n)
		 
		 ]]></return>
</method>
<method name='clone' fullname='com.hurlant.math:BigInteger/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.math:BigInteger'>
</method>
<method name='compareTo' fullname='com.hurlant.math:BigInteger/compareTo' isStatic='false' isFinal='false' isOverride='false'  param_names='v' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='int'>
<description><![CDATA[
		 return + if this &gt; v, - if this &lt; v, 0 if equal
		 ]]></description>
</method>
<method name='copyTo' fullname='com.hurlant.math:BigInteger/bi_internal:copyTo' isStatic='false' isFinal='false' isOverride='false'  param_names='r' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 copy this to r
		 ]]></description>
</method>
<method name='dAddOffset' fullname='com.hurlant.math:BigInteger/bi_internal:dAddOffset' isStatic='false' isFinal='false' isOverride='false'  param_names='n;w' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 
		 this += n &lt;&lt; w words, this &gt;= 0
		 
		 ]]></description>
<param><![CDATA[n
		 ]]></param>
<param><![CDATA[w
		 
		 ]]></param>
</method>
<method name='dMultiply' fullname='com.hurlant.math:BigInteger/bi_internal:dMultiply' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 
		 this &#42;= n, this &gt;=0, 1 &lt; n &lt; DV
		 
		 ]]></description>
<param><![CDATA[n
		 
		 ]]></param>
</method>
<method name='dispose' fullname='com.hurlant.math:BigInteger/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='divRemTo' fullname='com.hurlant.math:BigInteger/bi_internal:divRemTo' isStatic='false' isFinal='false' isOverride='false'  param_names='m;q;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;null;null' result_type='void'>
<description><![CDATA[
		 divide this by m, quotient and remainder to q, r (HAC 14.20)
		 r != q, this != m. q or r may be null.
		 ]]></description>
</method>
<method name='divideAndRemainder' fullname='com.hurlant.math:BigInteger/divideAndRemainder' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='Array'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[a
		 ]]></param>
<return><![CDATA[[this/a, this%a]
		 
		 ]]></return>
</method>
<method name='divide' fullname='com.hurlant.math:BigInteger/divide' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[a
		 ]]></param>
<return><![CDATA[this / a
		 
		 ]]></return>
</method>
<method name='dlShiftTo' fullname='com.hurlant.math:BigInteger/bi_internal:dlShiftTo' isStatic='false' isFinal='false' isOverride='false'  param_names='n;r' param_types='int;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 r = this &lt;&lt; n&#42;DB
		 ]]></description>
</method>
<method name='drShiftTo' fullname='com.hurlant.math:BigInteger/bi_internal:drShiftTo' isStatic='false' isFinal='false' isOverride='false'  param_names='n;r' param_types='int;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 r = this &gt;&gt; n&#42;DB
		 ]]></description>
</method>
<method name='equals' fullname='com.hurlant.math:BigInteger/equals' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='exp' fullname='com.hurlant.math:BigInteger/bi_internal:exp' isStatic='false' isFinal='false' isOverride='false'  param_names='e;z' param_types='int;com.hurlant.math:IReduction' param_defaults='undefined;undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 this^e, e &lt; 2^32, doing sqr and mul with "r" (HAC 14.79)
		 ]]></description>
</method>
<method name='flipBit' fullname='com.hurlant.math:BigInteger/flipBit' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[n
		 ]]></param>
<return><![CDATA[this ^ (1&lt;&lt;n)
		 
		 ]]></return>
</method>
<method name='fromArray' fullname='com.hurlant.math:BigInteger/bi_internal:fromArray' isStatic='false' isFinal='false' isOverride='false'  param_names='value;length;unsigned' param_types='flash.utils:ByteArray;int;Boolean' param_defaults='undefined;undefined;false' result_type='void'>
<description><![CDATA[
		 set from ByteArray and length,
		 starting a current position
		 If length goes beyond the array, pad with zeroes.
		 ]]></description>
</method>
<method name='fromInt' fullname='com.hurlant.math:BigInteger/bi_internal:fromInt' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 set from integer value "value", -DV &lt;= value &lt; DV
		 ]]></description>
</method>
<method name='fromRadix' fullname='com.hurlant.math:BigInteger/protected:fromRadix' isStatic='false' isFinal='false' isOverride='false'  param_names='s;b' param_types='String;int' param_defaults='undefined;10' result_type='void'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[s a string to convert from using radix.
		 ]]></param>
<param><![CDATA[b a radix
		 
		 ]]></param>
</method>
<method name='gcd' fullname='com.hurlant.math:BigInteger/gcd' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[a
		 ]]></param>
<return><![CDATA[gcd(this, a) (HAC 14.54)
		 
		 ]]></return>
</method>
<method name='getLowestSetBit' fullname='com.hurlant.math:BigInteger/getLowestSetBit' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 
		 ]]></description>
<return><![CDATA[index of lowest 1-bit (or -1 if none)
		 
		 ]]></return>
</method>
<method name='intAt' fullname='com.hurlant.math:BigInteger/bi_internal:intAt' isStatic='false' isFinal='false' isOverride='false'  param_names='str;index' param_types='String;int' param_defaults='undefined;undefined' result_type='int'>
</method>
<method name='intValue' fullname='com.hurlant.math:BigInteger/intValue' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 
		 ]]></description>
<return><![CDATA[value as integer
		 
		 ]]></return>
</method>
<method name='invDigit' fullname='com.hurlant.math:BigInteger/bi_internal:invDigit' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 return "-1/this % 2^DB"; useful for Mont. reduction
		 justification:
		         xy == 1 (mod n)
		         xy =  1+km
		 	 xy(2-xy) = (1+km)(1-km)
		 x[y(2-xy)] =  1-k^2.m^2
		 x[y(2-xy)] == 1 (mod m^2)
		 if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
		 should reduce x and y(2-xy) by m^2 at each step to keep size bounded
		 [XXX unit test the living shit out of this.]
		 ]]></description>
</method>
<method name='isEven' fullname='com.hurlant.math:BigInteger/bi_internal:isEven' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
		 true iff this is even
		 ]]></description>
</method>
<method name='isProbablePrime' fullname='com.hurlant.math:BigInteger/isProbablePrime' isStatic='false' isFinal='false' isOverride='false'  param_names='t' param_types='int' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[t
		 ]]></param>
<return><![CDATA[primality with certainty &gt;= 1-.5^t
		 
		 ]]></return>
</method>
<method name='lShiftTo' fullname='com.hurlant.math:BigInteger/bi_internal:lShiftTo' isStatic='false' isFinal='false' isOverride='false'  param_names='n;r' param_types='int;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 r = this &lt;&lt; n
		 ]]></description>
</method>
<method name='lbit' fullname='com.hurlant.math:BigInteger/private:lbit' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[x
		 ]]></param>
<return><![CDATA[index of lowet 1-bit in x, x &lt; 2^31
		 
		 ]]></return>
</method>
<method name='max' fullname='com.hurlant.math:BigInteger/max' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='millerRabin' fullname='com.hurlant.math:BigInteger/protected:millerRabin' isStatic='false' isFinal='false' isOverride='false'  param_names='t' param_types='int' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[t
		 ]]></param>
<return><![CDATA[true if probably prime (HAC 4.24, Miller-Rabin)
		 
		 ]]></return>
</method>
<method name='min' fullname='com.hurlant.math:BigInteger/min' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='modInt' fullname='com.hurlant.math:BigInteger/protected:modInt' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[n
		 ]]></param>
<return><![CDATA[this % n, n &lt; 2^DB
		 
		 ]]></return>
</method>
<method name='modInverse' fullname='com.hurlant.math:BigInteger/modInverse' isStatic='false' isFinal='false' isOverride='false'  param_names='m' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[m
		 ]]></param>
<return><![CDATA[1/this %m (HAC 14.61)
		 
		 ]]></return>
</method>
<method name='modPowInt' fullname='com.hurlant.math:BigInteger/modPowInt' isStatic='false' isFinal='false' isOverride='false'  param_names='e;m' param_types='int;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 this^e % m, 0 &lt;= e &lt; 2^32
		 ]]></description>
</method>
<method name='modPow' fullname='com.hurlant.math:BigInteger/modPow' isStatic='false' isFinal='false' isOverride='false'  param_names='e;m' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[e
		 ]]></param>
<param><![CDATA[m
		 ]]></param>
<return><![CDATA[this^e % m (HAC 14.85)
		 
		 ]]></return>
</method>
<method name='mod' fullname='com.hurlant.math:BigInteger/mod' isStatic='false' isFinal='false' isOverride='false'  param_names='v' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[v
		 ]]></param>
<return><![CDATA[this % v
		 
		 ]]></return>
</method>
<method name='multiplyLowerTo' fullname='com.hurlant.math:BigInteger/bi_internal:multiplyLowerTo' isStatic='false' isFinal='false' isOverride='false'  param_names='a;n;r' param_types='com.hurlant.math:BigInteger;int;com.hurlant.math:BigInteger' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[a
		 ]]></param>
<param><![CDATA[n
		 ]]></param>
<param><![CDATA[r = lower n words of "this &#42; a", a.t &lt;= n
		 
		 ]]></param>
</method>
<method name='multiplyTo' fullname='com.hurlant.math:BigInteger/bi_internal:multiplyTo' isStatic='false' isFinal='false' isOverride='false'  param_names='v;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 r = this &#42; v, r != this,a (HAC 14.12)
		 "this" should be the larger one if appropriate
		 ]]></description>
</method>
<method name='multiplyUpperTo' fullname='com.hurlant.math:BigInteger/bi_internal:multiplyUpperTo' isStatic='false' isFinal='false' isOverride='false'  param_names='a;n;r' param_types='com.hurlant.math:BigInteger;int;com.hurlant.math:BigInteger' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[a
		 ]]></param>
<param><![CDATA[n
		 ]]></param>
<param><![CDATA[r = "this &#42; a" without lower n words, n &gt; 0
		 
		 ]]></param>
</method>
<method name='multiply' fullname='com.hurlant.math:BigInteger/multiply' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[a
		 ]]></param>
<return><![CDATA[this &#42; a
		 
		 ]]></return>
</method>
<method name='nbi' fullname='com.hurlant.math:BigInteger/protected:nbi' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='nbits' fullname='com.hurlant.math:BigInteger/bi_internal:nbits' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[
		 returns bit length of the integer x
		 ]]></description>
</method>
<method name='nbv' fullname='com.hurlant.math:BigInteger/nbv' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='int' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 return bigint initialized to value
		 ]]></description>
</method>
<method name='negate' fullname='com.hurlant.math:BigInteger/negate' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 -this
		 ]]></description>
</method>
<method name='not' fullname='com.hurlant.math:BigInteger/not' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.math:BigInteger'>
</method>
<method name='op_and' fullname='com.hurlant.math:BigInteger/private:op_and' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='int;int' param_defaults='undefined;undefined' result_type='int'>
</method>
<method name='op_andnot' fullname='com.hurlant.math:BigInteger/private:op_andnot' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='int;int' param_defaults='undefined;undefined' result_type='int'>
</method>
<method name='op_or' fullname='com.hurlant.math:BigInteger/private:op_or' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='int;int' param_defaults='undefined;undefined' result_type='int'>
</method>
<method name='op_xor' fullname='com.hurlant.math:BigInteger/private:op_xor' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='int;int' param_defaults='undefined;undefined' result_type='int'>
</method>
<method name='or' fullname='com.hurlant.math:BigInteger/or' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='pow' fullname='com.hurlant.math:BigInteger/pow' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='int' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[e
		 ]]></param>
<return><![CDATA[this^e
		 
		 ]]></return>
</method>
<method name='primify' fullname='com.hurlant.math:BigInteger/primify' isStatic='false' isFinal='false' isOverride='false'  param_names='bits;t' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 Tweak our BigInteger until it looks prime enough
		 
		 ]]></description>
<param><![CDATA[bits
		 ]]></param>
<param><![CDATA[t
		 
		 ]]></param>
</method>
<method name='rShiftTo' fullname='com.hurlant.math:BigInteger/bi_internal:rShiftTo' isStatic='false' isFinal='false' isOverride='false'  param_names='n;r' param_types='int;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 r = this &gt;&gt; n
		 ]]></description>
</method>
<method name='remainder' fullname='com.hurlant.math:BigInteger/remainder' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='setBit' fullname='com.hurlant.math:BigInteger/setBit' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[n
		 ]]></param>
<return><![CDATA[this | (1&lt;&lt;n)
		 
		 ]]></return>
</method>
<method name='shiftLeft' fullname='com.hurlant.math:BigInteger/shiftLeft' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='shiftRight' fullname='com.hurlant.math:BigInteger/shiftRight' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='shortValue' fullname='com.hurlant.math:BigInteger/shortValue' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 
		 ]]></description>
<return><![CDATA[value as short (assumes DB&gt;=16)
		 
		 ]]></return>
</method>
<method name='sigNum' fullname='com.hurlant.math:BigInteger/sigNum' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[
		 
		 ]]></description>
<return><![CDATA[0 if this ==0, 1 if this &gt;0
		 
		 ]]></return>
</method>
<method name='squareTo' fullname='com.hurlant.math:BigInteger/bi_internal:squareTo' isStatic='false' isFinal='false' isOverride='false'  param_names='r' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 r = this^2, r != this (HAC 14.16)
		 ]]></description>
</method>
<method name='subTo' fullname='com.hurlant.math:BigInteger/bi_internal:subTo' isStatic='false' isFinal='false' isOverride='false'  param_names='v;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 r = this - v
		 ]]></description>
</method>
<method name='subtract' fullname='com.hurlant.math:BigInteger/subtract' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[a
		 ]]></param>
<return><![CDATA[this - a
		 
		 ]]></return>
</method>
<method name='testBit' fullname='com.hurlant.math:BigInteger/testBit' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='int' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[n
		 ]]></param>
<return><![CDATA[true iff nth bit is set
		 
		 ]]></return>
</method>
<method name='toArray' fullname='com.hurlant.math:BigInteger/toArray' isStatic='false' isFinal='false' isOverride='false'  param_names='array' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='uint'>
</method>
<method name='toByteArray' fullname='com.hurlant.math:BigInteger/toByteArray' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 
		 ]]></description>
<return><![CDATA[a byte array.
		 
		 ]]></return>
</method>
<method name='toRadix' fullname='com.hurlant.math:BigInteger/protected:toRadix' isStatic='false' isFinal='false' isOverride='false'  param_names='b' param_types='uint' param_defaults='10' result_type='String'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[b: radix to use
		 ]]></param>
<return><![CDATA[a string representing the integer converted to the radix.
		 
		 ]]></return>
</method>
<method name='toString' fullname='com.hurlant.math:BigInteger/toString' isStatic='false' isFinal='false' isOverride='false'  param_names='radix' param_types='Number' param_defaults='16' result_type='String'>
</method>
<method name='valueOf' fullname='com.hurlant.math:BigInteger/valueOf' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
		 best-effort attempt to fit into a Number.
		 precision can be lost if it just can't fit.
		 ]]></description>
</method>
<method name='xor' fullname='com.hurlant.math:BigInteger/xor' isStatic='false' isFinal='false' isOverride='false'  param_names='a' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<field name='BI_FP' fullname='com.hurlant.math:BigInteger/BI_FP' type='int' isStatic='true' isConst='true' defaultValue='52' >
</field>
<field name='DB' fullname='com.hurlant.math:BigInteger/DB' type='int' isStatic='true' isConst='true' defaultValue='30' >
</field>
<field name='DM' fullname='com.hurlant.math:BigInteger/DM' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='DV' fullname='com.hurlant.math:BigInteger/DV' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='F1' fullname='com.hurlant.math:BigInteger/F1' type='int' isStatic='true' isConst='true' defaultValue='22.0' >
</field>
<field name='F2' fullname='com.hurlant.math:BigInteger/F2' type='int' isStatic='true' isConst='true' defaultValue='8.0' >
</field>
<field name='FV' fullname='com.hurlant.math:BigInteger/FV' type='Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='ONE' fullname='com.hurlant.math:BigInteger/ONE' type='com.hurlant.math:BigInteger' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='ZERO' fullname='com.hurlant.math:BigInteger/ZERO' type='com.hurlant.math:BigInteger' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='a' fullname='com.hurlant.math:BigInteger/bi_internal:a' type='Array' isStatic='false' isConst='false' >
</field>
<field name='lowprimes' fullname='com.hurlant.math:BigInteger/lowprimes' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='lplim' fullname='com.hurlant.math:BigInteger/lplim' type='int' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='s' fullname='com.hurlant.math:BigInteger/bi_internal:s' type='int' isStatic='false' isConst='false' >
</field>
<field name='t' fullname='com.hurlant.math:BigInteger/t' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='BarrettReduction' fullname='com.hurlant.math:BarrettReduction' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/math/BarrettReduction.as' namespace='com.hurlant.math' access='internal' baseclass='Object' interfaces='com.hurlant.math:IReduction' isFinal='false' isDynamic='false' >
</classRec>
<method name='BarrettReduction' fullname='com.hurlant.math:BarrettReduction/BarrettReduction' isStatic='false' isFinal='false' isOverride='false'  param_names='m' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='*'>
</method>
<method name='convert' fullname='com.hurlant.math:BarrettReduction/convert' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='mulTo' fullname='com.hurlant.math:BarrettReduction/mulTo' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[x
		 ]]></param>
<param><![CDATA[y
		 ]]></param>
<param><![CDATA[r = x mod m; x != r
		 
		 ]]></param>
</method>
<method name='reduce' fullname='com.hurlant.math:BarrettReduction/reduce' isStatic='false' isFinal='false' isOverride='false'  param_names='lx' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[x = x mod m (HAC 14.42)
		 
		 ]]></param>
</method>
<method name='revert' fullname='com.hurlant.math:BarrettReduction/revert' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='sqrTo' fullname='com.hurlant.math:BarrettReduction/sqrTo' isStatic='false' isFinal='false' isOverride='false'  param_names='x;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[x
		 ]]></param>
<param><![CDATA[r = x^2 mod m; x != r
		 
		 ]]></param>
</method>
<field name='m' fullname='com.hurlant.math:BarrettReduction/private:m' type='com.hurlant.math:BigInteger' isStatic='false' isConst='false' >
</field>
<field name='mu' fullname='com.hurlant.math:BarrettReduction/private:mu' type='com.hurlant.math:BigInteger' isStatic='false' isConst='false' >
</field>
<field name='q3' fullname='com.hurlant.math:BarrettReduction/private:q3' type='com.hurlant.math:BigInteger' isStatic='false' isConst='false' >
</field>
<field name='r2' fullname='com.hurlant.math:BarrettReduction/private:r2' type='com.hurlant.math:BigInteger' isStatic='false' isConst='false' >
</field>
<classRec name='NullReduction' fullname='com.hurlant.math:NullReduction' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/math/NullReduction.as' namespace='com.hurlant.math' access='public' baseclass='Object' interfaces='com.hurlant.math:IReduction' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 A "null" reducer
	 ]]></description>
</classRec>
<method name='convert' fullname='com.hurlant.math:NullReduction/convert' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='mulTo' fullname='com.hurlant.math:NullReduction/mulTo' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='reduce' fullname='com.hurlant.math:NullReduction/reduce' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='void'>
</method>
<method name='revert' fullname='com.hurlant.math:NullReduction/revert' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='sqrTo' fullname='com.hurlant.math:NullReduction/sqrTo' isStatic='false' isFinal='false' isOverride='false'  param_names='x;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='void'>
</method>
<classRec name='ClassicReduction' fullname='com.hurlant.math:ClassicReduction' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/math/ClassicReduction.as' namespace='com.hurlant.math' access='internal' baseclass='Object' interfaces='com.hurlant.math:IReduction' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Modular reduction using "classic" algorithm
	 ]]></description>
</classRec>
<method name='ClassicReduction' fullname='com.hurlant.math:ClassicReduction/ClassicReduction' isStatic='false' isFinal='false' isOverride='false'  param_names='m' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='*'>
</method>
<method name='convert' fullname='com.hurlant.math:ClassicReduction/convert' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='mulTo' fullname='com.hurlant.math:ClassicReduction/mulTo' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='reduce' fullname='com.hurlant.math:ClassicReduction/reduce' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='void'>
</method>
<method name='revert' fullname='com.hurlant.math:ClassicReduction/revert' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='sqrTo' fullname='com.hurlant.math:ClassicReduction/sqrTo' isStatic='false' isFinal='false' isOverride='false'  param_names='x;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='void'>
</method>
<field name='m' fullname='com.hurlant.math:ClassicReduction/private:m' type='com.hurlant.math:BigInteger' isStatic='false' isConst='false' >
</field>
<classRec name='MontgomeryReduction' fullname='com.hurlant.math:MontgomeryReduction' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/math/MontgomeryReduction.as' namespace='com.hurlant.math' access='internal' baseclass='Object' interfaces='com.hurlant.math:IReduction' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Montgomery reduction
	 ]]></description>
</classRec>
<method name='MontgomeryReduction' fullname='com.hurlant.math:MontgomeryReduction/MontgomeryReduction' isStatic='false' isFinal='false' isOverride='false'  param_names='m' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='*'>
</method>
<method name='convert' fullname='com.hurlant.math:MontgomeryReduction/convert' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 xR mod m
		 ]]></description>
</method>
<method name='mulTo' fullname='com.hurlant.math:MontgomeryReduction/mulTo' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 r = "xy/R mod m"; x,y != r
		 ]]></description>
</method>
<method name='reduce' fullname='com.hurlant.math:MontgomeryReduction/reduce' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 x = x/R mod m (HAC 14.32)
		 ]]></description>
</method>
<method name='revert' fullname='com.hurlant.math:MontgomeryReduction/revert' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
<description><![CDATA[
		 x/R mod m
		 ]]></description>
</method>
<method name='sqrTo' fullname='com.hurlant.math:MontgomeryReduction/sqrTo' isStatic='false' isFinal='false' isOverride='false'  param_names='x;r' param_types='com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
		 r = "x^2/R mod m"; x != r
		 ]]></description>
</method>
<field name='m' fullname='com.hurlant.math:MontgomeryReduction/private:m' type='com.hurlant.math:BigInteger' isStatic='false' isConst='false' >
</field>
<field name='mp' fullname='com.hurlant.math:MontgomeryReduction/private:mp' type='int' isStatic='false' isConst='false' >
</field>
<field name='mph' fullname='com.hurlant.math:MontgomeryReduction/private:mph' type='int' isStatic='false' isConst='false' >
</field>
<field name='mpl' fullname='com.hurlant.math:MontgomeryReduction/private:mpl' type='int' isStatic='false' isConst='false' >
</field>
<field name='mt2' fullname='com.hurlant.math:MontgomeryReduction/private:mt2' type='int' isStatic='false' isConst='false' >
</field>
<field name='um' fullname='com.hurlant.math:MontgomeryReduction/private:um' type='int' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.util.der.null' fullname='com.hurlant.util.der.null'>
<description><![CDATA[
 OID
 
 A list of various ObjectIdentifiers.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='OID' fullname='com.hurlant.util.der:OID' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/der/OID.as' namespace='com.hurlant.util.der' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<field name='COMMON_NAME' fullname='com.hurlant.util.der:OID/COMMON_NAME' type='String' isStatic='true' isConst='true' defaultValue='2.5.4.3' >
</field>
<field name='COUNTRY_NAME' fullname='com.hurlant.util.der:OID/COUNTRY_NAME' type='String' isStatic='true' isConst='true' defaultValue='2.5.4.6' >
</field>
<field name='DH_PUBLIC_NUMBER' fullname='com.hurlant.util.der:OID/DH_PUBLIC_NUMBER' type='String' isStatic='true' isConst='true' defaultValue='1.2.840.10046.2.1' >
</field>
<field name='DSA_WITH_SHA1' fullname='com.hurlant.util.der:OID/DSA_WITH_SHA1' type='String' isStatic='true' isConst='true' defaultValue='1.2.840.10040.4.3' >
</field>
<field name='DSA' fullname='com.hurlant.util.der:OID/DSA' type='String' isStatic='true' isConst='true' defaultValue='1.2.840.10040.4.1' >
</field>
<field name='LOCALITY_NAME' fullname='com.hurlant.util.der:OID/LOCALITY_NAME' type='String' isStatic='true' isConst='true' defaultValue='2.5.4.7' >
</field>
<field name='MD2_ALGORITHM' fullname='com.hurlant.util.der:OID/MD2_ALGORITHM' type='String' isStatic='true' isConst='true' defaultValue='1.2.840.113549.2.2' >
</field>
<field name='MD2_WITH_RSA_ENCRYPTION' fullname='com.hurlant.util.der:OID/MD2_WITH_RSA_ENCRYPTION' type='String' isStatic='true' isConst='true' defaultValue='1.2.840.113549.1.1.2' >
</field>
<field name='MD5_ALGORITHM' fullname='com.hurlant.util.der:OID/MD5_ALGORITHM' type='String' isStatic='true' isConst='true' defaultValue='1.2.840.113549.2.5' >
</field>
<field name='MD5_WITH_RSA_ENCRYPTION' fullname='com.hurlant.util.der:OID/MD5_WITH_RSA_ENCRYPTION' type='String' isStatic='true' isConst='true' defaultValue='1.2.840.113549.1.1.4' >
</field>
<field name='ORGANIZATION_NAME' fullname='com.hurlant.util.der:OID/ORGANIZATION_NAME' type='String' isStatic='true' isConst='true' defaultValue='2.5.4.10' >
</field>
<field name='ORG_UNIT_NAME' fullname='com.hurlant.util.der:OID/ORG_UNIT_NAME' type='String' isStatic='true' isConst='true' defaultValue='2.5.4.11' >
</field>
<field name='PKCS9_UNSTRUCTURED_NAME' fullname='com.hurlant.util.der:OID/PKCS9_UNSTRUCTURED_NAME' type='String' isStatic='true' isConst='true' defaultValue='1.2.840.113549.1.9.2' >
</field>
<field name='RSA_ENCRYPTION' fullname='com.hurlant.util.der:OID/RSA_ENCRYPTION' type='String' isStatic='true' isConst='true' defaultValue='1.2.840.113549.1.1.1' >
</field>
<field name='SHA1_ALGORITHM' fullname='com.hurlant.util.der:OID/SHA1_ALGORITHM' type='String' isStatic='true' isConst='true' defaultValue='1.3.14.3.2.26' >
</field>
<field name='SHA1_WITH_RSA_ENCRYPTION' fullname='com.hurlant.util.der:OID/SHA1_WITH_RSA_ENCRYPTION' type='String' isStatic='true' isConst='true' defaultValue='1.2.840.113549.1.1.5' >
</field>
<field name='SHA2_ALGORITHM' fullname='com.hurlant.util.der:OID/SHA2_ALGORITHM' type='String' isStatic='true' isConst='true' defaultValue='2.16.840.1.101.3.4.2.1' >
</field>
<field name='SHA2_WITH_RSA_ENCRYPTION' fullname='com.hurlant.util.der:OID/SHA2_WITH_RSA_ENCRYPTION' type='String' isStatic='true' isConst='true' defaultValue='1.2.840.113549.1.1.11' >
</field>
<field name='STATE_NAME' fullname='com.hurlant.util.der:OID/STATE_NAME' type='String' isStatic='true' isConst='true' defaultValue='2.5.4.8' >
</field>
<field name='SURNAME' fullname='com.hurlant.util.der:OID/SURNAME' type='String' isStatic='true' isConst='true' defaultValue='2.5.4.4' >
</field>
<field name='TITLE' fullname='com.hurlant.util.der:OID/TITLE' type='String' isStatic='true' isConst='true' defaultValue='2.5.4.12' >
</field>
<packageRec name='com.hurlant.util.der.null' fullname='com.hurlant.util.der.null'>
<description><![CDATA[
 IAsn1Type
 
 An interface for Asn-1 types.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<interfaceRec name='IAsn1Type' fullname='com.hurlant.util.der:IAsn1Type' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/der/IAsn1Type.as' namespace='com.hurlant.util.der' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
</interfaceRec>
<method name='getLength' fullname='com.hurlant.util.der:IAsn1Type/com.hurlant.util.der:IAsn1Type:getLength' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getType' fullname='com.hurlant.util.der:IAsn1Type/com.hurlant.util.der:IAsn1Type:getType' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='toDER' fullname='com.hurlant.util.der:IAsn1Type/com.hurlant.util.der:IAsn1Type:toDER' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
</method>
<packageRec name='com.hurlant.util.der.null' fullname='com.hurlant.util.der.null'>
<description><![CDATA[
 PEM
 
 A class to parse some PEM stuff.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='PEM' fullname='com.hurlant.util.der:PEM' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/der/PEM.as' namespace='com.hurlant.util.der' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='extractBinary' fullname='com.hurlant.util.der:PEM/private:extractBinary' isStatic='true' isFinal='false' isOverride='false'  param_names='header;footer;str' param_types='String;String;String' param_defaults='undefined;undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='readCertIntoArray' fullname='com.hurlant.util.der:PEM/readCertIntoArray' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='flash.utils:ByteArray'>
</method>
<method name='readRSAPrivateKey' fullname='com.hurlant.util.der:PEM/readRSAPrivateKey' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='com.hurlant.crypto.rsa:RSAKey'>
<description><![CDATA[
		 
		 Read a structure encoded according to
		 ftp://ftp.rsasecurity.com/pub/pkcs/ascii/pkcs-1v2.asc
		 section 11.1.2
		 
		 ]]></description>
<param><![CDATA[str
		 ]]></param>
<return><![CDATA[
		 
		 ]]></return>
</method>
<method name='readRSAPublicKey' fullname='com.hurlant.util.der:PEM/readRSAPublicKey' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='com.hurlant.crypto.rsa:RSAKey'>
<description><![CDATA[
		 Read a structure encoded according to some spec somewhere
		 Also, follows some chunk from
		 ftp://ftp.rsasecurity.com/pub/pkcs/ascii/pkcs-1v2.asc
		 section 11.1
		 
		 ]]></description>
<param><![CDATA[str
		 ]]></param>
<return><![CDATA[
		 
		 ]]></return>
</method>
<field name='CERTIFICATE_FOOTER' fullname='com.hurlant.util.der:PEM/private:CERTIFICATE_FOOTER' type='String' isStatic='true' isConst='true' defaultValue='-----END CERTIFICATE-----' >
</field>
<field name='CERTIFICATE_HEADER' fullname='com.hurlant.util.der:PEM/private:CERTIFICATE_HEADER' type='String' isStatic='true' isConst='true' defaultValue='-----BEGIN CERTIFICATE-----' >
</field>
<field name='RSA_PRIVATE_KEY_FOOTER' fullname='com.hurlant.util.der:PEM/private:RSA_PRIVATE_KEY_FOOTER' type='String' isStatic='true' isConst='true' defaultValue='-----END RSA PRIVATE KEY-----' >
</field>
<field name='RSA_PRIVATE_KEY_HEADER' fullname='com.hurlant.util.der:PEM/private:RSA_PRIVATE_KEY_HEADER' type='String' isStatic='true' isConst='true' defaultValue='-----BEGIN RSA PRIVATE KEY-----' >
</field>
<field name='RSA_PUBLIC_KEY_FOOTER' fullname='com.hurlant.util.der:PEM/private:RSA_PUBLIC_KEY_FOOTER' type='String' isStatic='true' isConst='true' defaultValue='-----END PUBLIC KEY-----' >
</field>
<field name='RSA_PUBLIC_KEY_HEADER' fullname='com.hurlant.util.der:PEM/private:RSA_PUBLIC_KEY_HEADER' type='String' isStatic='true' isConst='true' defaultValue='-----BEGIN PUBLIC KEY-----' >
</field>
<packageRec name='com.hurlant.util.der.null' fullname='com.hurlant.util.der.null'>
<description><![CDATA[
 UTCTime
 
 An ASN1 type for UTCTime, represented as a Date
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='UTCTime' fullname='com.hurlant.util.der:UTCTime' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/der/UTCTime.as' namespace='com.hurlant.util.der' access='public' baseclass='Object' interfaces='com.hurlant.util.der:IAsn1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='UTCTime' fullname='com.hurlant.util.der:UTCTime/UTCTime' isStatic='false' isFinal='false' isOverride='false'  param_names='type;len' param_types='uint;uint' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='getLength' fullname='com.hurlant.util.der:UTCTime/getLength' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getType' fullname='com.hurlant.util.der:UTCTime/getType' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='setUTCTime' fullname='com.hurlant.util.der:UTCTime/setUTCTime' isStatic='false' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='toDER' fullname='com.hurlant.util.der:UTCTime/toDER' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
</method>
<method name='toString' fullname='com.hurlant.util.der:UTCTime/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='date' fullname='com.hurlant.util.der:UTCTime/date' type='Date' isStatic='false' isConst='false' >
</field>
<field name='len' fullname='com.hurlant.util.der:UTCTime/protected:len' type='uint' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='com.hurlant.util.der:UTCTime/protected:type' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='Type2' fullname='com.hurlant.util.der:Type2' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/der/Type2.as' namespace='com.hurlant.util.der' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<field name='AlgorithmIdentifier' fullname='com.hurlant.util.der:Type2/AlgorithmIdentifier' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='AttributeTypeAndValue' fullname='com.hurlant.util.der:Type2/AttributeTypeAndValue' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='Attribute' fullname='com.hurlant.util.der:Type2/Attribute' type='Function' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='CertificateSerialNumber' fullname='com.hurlant.util.der:Type2/CertificateSerialNumber' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='Certificate' fullname='com.hurlant.util.der:Type2/Certificate' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='DomainParameters' fullname='com.hurlant.util.der:Type2/DomainParameters' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='Dss_Parms' fullname='com.hurlant.util.der:Type2/Dss_Parms' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='Dss_Sig_Value' fullname='com.hurlant.util.der:Type2/Dss_Sig_Value' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='Extensions' fullname='com.hurlant.util.der:Type2/Extensions' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='Extension' fullname='com.hurlant.util.der:Type2/Extension' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='MAX' fullname='com.hurlant.util.der:Type2/MAX' type='int' isStatic='true' isConst='true' defaultValue='2.147483647E9' >
</field>
<field name='Name' fullname='com.hurlant.util.der:Type2/Name' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='RDNSequence' fullname='com.hurlant.util.der:Type2/RDNSequence' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='RelativeDistinguishedName' fullname='com.hurlant.util.der:Type2/RelativeDistinguishedName' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='SubjectPublicKeyInfo' fullname='com.hurlant.util.der:Type2/SubjectPublicKeyInfo' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='Time' fullname='com.hurlant.util.der:Type2/Time' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='UniqueIdentifier' fullname='com.hurlant.util.der:Type2/UniqueIdentifier' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='ValidationParms' fullname='com.hurlant.util.der:Type2/ValidationParms' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='Validity' fullname='com.hurlant.util.der:Type2/Validity' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='Version' fullname='com.hurlant.util.der:Type2/Version' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='ansi_x942' fullname='com.hurlant.util.der:Type2/ansi_x942' type='String' isStatic='true' isConst='true' defaultValue='10046' >
</field>
<field name='dhpublicnumber' fullname='com.hurlant.util.der:Type2/dhpublicnumber' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='directoryString' fullname='com.hurlant.util.der:Type2/directoryString' type='Function' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='dod' fullname='com.hurlant.util.der:Type2/dod' type='String' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='ds' fullname='com.hurlant.util.der:Type2/ds' type='String' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='emailAddress' fullname='com.hurlant.util.der:Type2/emailAddress' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_ad' fullname='com.hurlant.util.der:Type2/id_ad' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_commonName' fullname='com.hurlant.util.der:Type2/id_at_commonName' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_countryName' fullname='com.hurlant.util.der:Type2/id_at_countryName' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_dnQualifier' fullname='com.hurlant.util.der:Type2/id_at_dnQualifier' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_generationQualifier' fullname='com.hurlant.util.der:Type2/id_at_generationQualifier' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_givenName' fullname='com.hurlant.util.der:Type2/id_at_givenName' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_initials' fullname='com.hurlant.util.der:Type2/id_at_initials' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_localityName' fullname='com.hurlant.util.der:Type2/id_at_localityName' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_name' fullname='com.hurlant.util.der:Type2/id_at_name' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_organizationName' fullname='com.hurlant.util.der:Type2/id_at_organizationName' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_organizationalUnitName' fullname='com.hurlant.util.der:Type2/id_at_organizationalUnitName' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_serialNumber' fullname='com.hurlant.util.der:Type2/id_at_serialNumber' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_stateOrProvinceName' fullname='com.hurlant.util.der:Type2/id_at_stateOrProvinceName' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_surname' fullname='com.hurlant.util.der:Type2/id_at_surname' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at_title' fullname='com.hurlant.util.der:Type2/id_at_title' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_at' fullname='com.hurlant.util.der:Type2/id_at' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_dsa_with_sha1' fullname='com.hurlant.util.der:Type2/id_dsa_with_sha1' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_dsa' fullname='com.hurlant.util.der:Type2/id_dsa' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_kp' fullname='com.hurlant.util.der:Type2/id_kp' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_pe' fullname='com.hurlant.util.der:Type2/id_pe' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_pkix' fullname='com.hurlant.util.der:Type2/id_pkix' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_qt_cps' fullname='com.hurlant.util.der:Type2/id_qt_cps' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_qt_unotice' fullname='com.hurlant.util.der:Type2/id_qt_unotice' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='id_qt' fullname='com.hurlant.util.der:Type2/id_qt' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='identified_organization' fullname='com.hurlant.util.der:Type2/identified_organization' type='String' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='internet' fullname='com.hurlant.util.der:Type2/internet' type='String' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='iso' fullname='com.hurlant.util.der:Type2/iso' type='String' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='joint_iso_ccitt' fullname='com.hurlant.util.der:Type2/joint_iso_ccitt' type='String' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='md2WithRSAEncryption' fullname='com.hurlant.util.der:Type2/md2WithRSAEncryption' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='md5WithRSAEncryption' fullname='com.hurlant.util.der:Type2/md5WithRSAEncryption' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='mechanisms' fullname='com.hurlant.util.der:Type2/mechanisms' type='String' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='member_body' fullname='com.hurlant.util.der:Type2/member_body' type='String' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='number_type' fullname='com.hurlant.util.der:Type2/number_type' type='String' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='pkcs9_unstructuredName' fullname='com.hurlant.util.der:Type2/pkcs9_unstructuredName' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='pkcs9string' fullname='com.hurlant.util.der:Type2/pkcs9string' type='Function' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='pkcs_1' fullname='com.hurlant.util.der:Type2/pkcs_1' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='pkcs_9' fullname='com.hurlant.util.der:Type2/pkcs_9' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='pkcs' fullname='com.hurlant.util.der:Type2/pkcs' type='String' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='pkix' fullname='com.hurlant.util.der:Type2/pkix' type='String' isStatic='true' isConst='true' defaultValue='7' >
</field>
<field name='rsaEncryption' fullname='com.hurlant.util.der:Type2/rsaEncryption' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='rsadsi' fullname='com.hurlant.util.der:Type2/rsadsi' type='String' isStatic='true' isConst='true' defaultValue='113549' >
</field>
<field name='security' fullname='com.hurlant.util.der:Type2/security' type='String' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='sha1WithRSAEncryption' fullname='com.hurlant.util.der:Type2/sha1WithRSAEncryption' type='com.hurlant.util.asn1.type:OIDType' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='signed' fullname='com.hurlant.util.der:Type2/signed' type='Function' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='ub_common_name_length' fullname='com.hurlant.util.der:Type2/ub_common_name_length' type='int' isStatic='true' isConst='true' defaultValue='64' >
</field>
<field name='ub_common_name' fullname='com.hurlant.util.der:Type2/ub_common_name' type='int' isStatic='true' isConst='true' defaultValue='64' >
</field>
<field name='ub_country_name_alpha_length' fullname='com.hurlant.util.der:Type2/ub_country_name_alpha_length' type='int' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='ub_country_name_numeric_length' fullname='com.hurlant.util.der:Type2/ub_country_name_numeric_length' type='int' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='ub_domain_defined_attribute_type_length' fullname='com.hurlant.util.der:Type2/ub_domain_defined_attribute_type_length' type='int' isStatic='true' isConst='true' defaultValue='8' >
</field>
<field name='ub_domain_defined_attribute_value_length' fullname='com.hurlant.util.der:Type2/ub_domain_defined_attribute_value_length' type='int' isStatic='true' isConst='true' defaultValue='128' >
</field>
<field name='ub_domain_defined_attributes' fullname='com.hurlant.util.der:Type2/ub_domain_defined_attributes' type='int' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='ub_domain_name_length' fullname='com.hurlant.util.der:Type2/ub_domain_name_length' type='int' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='ub_e163_4_number_length' fullname='com.hurlant.util.der:Type2/ub_e163_4_number_length' type='int' isStatic='true' isConst='true' defaultValue='15' >
</field>
<field name='ub_e163_4_sub_address_length' fullname='com.hurlant.util.der:Type2/ub_e163_4_sub_address_length' type='int' isStatic='true' isConst='true' defaultValue='40' >
</field>
<field name='ub_emailaddress_length' fullname='com.hurlant.util.der:Type2/ub_emailaddress_length' type='int' isStatic='true' isConst='true' defaultValue='128' >
</field>
<field name='ub_extension_attributes' fullname='com.hurlant.util.der:Type2/ub_extension_attributes' type='int' isStatic='true' isConst='true' defaultValue='256' >
</field>
<field name='ub_generation_qualifier_length' fullname='com.hurlant.util.der:Type2/ub_generation_qualifier_length' type='int' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='ub_given_name_length' fullname='com.hurlant.util.der:Type2/ub_given_name_length' type='int' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='ub_initials_length' fullname='com.hurlant.util.der:Type2/ub_initials_length' type='int' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='ub_integer_options' fullname='com.hurlant.util.der:Type2/ub_integer_options' type='int' isStatic='true' isConst='true' defaultValue='256' >
</field>
<field name='ub_locality_name' fullname='com.hurlant.util.der:Type2/ub_locality_name' type='int' isStatic='true' isConst='true' defaultValue='128' >
</field>
<field name='ub_match' fullname='com.hurlant.util.der:Type2/ub_match' type='int' isStatic='true' isConst='true' defaultValue='128' >
</field>
<field name='ub_name' fullname='com.hurlant.util.der:Type2/ub_name' type='int' isStatic='true' isConst='true' defaultValue='32768' >
</field>
<field name='ub_numeric_user_id_length' fullname='com.hurlant.util.der:Type2/ub_numeric_user_id_length' type='int' isStatic='true' isConst='true' defaultValue='32' >
</field>
<field name='ub_organization_name_length' fullname='com.hurlant.util.der:Type2/ub_organization_name_length' type='int' isStatic='true' isConst='true' defaultValue='64' >
</field>
<field name='ub_organization_name' fullname='com.hurlant.util.der:Type2/ub_organization_name' type='int' isStatic='true' isConst='true' defaultValue='64' >
</field>
<field name='ub_organizational_unit_name_length' fullname='com.hurlant.util.der:Type2/ub_organizational_unit_name_length' type='int' isStatic='true' isConst='true' defaultValue='32' >
</field>
<field name='ub_organizational_unit_name' fullname='com.hurlant.util.der:Type2/ub_organizational_unit_name' type='int' isStatic='true' isConst='true' defaultValue='64' >
</field>
<field name='ub_organizational_units' fullname='com.hurlant.util.der:Type2/ub_organizational_units' type='int' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='ub_pds_name_length' fullname='com.hurlant.util.der:Type2/ub_pds_name_length' type='int' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='ub_pds_parameter_length' fullname='com.hurlant.util.der:Type2/ub_pds_parameter_length' type='int' isStatic='true' isConst='true' defaultValue='30' >
</field>
<field name='ub_pds_physical_address_lines' fullname='com.hurlant.util.der:Type2/ub_pds_physical_address_lines' type='int' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='ub_pkcs9_string' fullname='com.hurlant.util.der:Type2/ub_pkcs9_string' type='int' isStatic='true' isConst='true' defaultValue='255' >
</field>
<field name='ub_postal_code_length' fullname='com.hurlant.util.der:Type2/ub_postal_code_length' type='int' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='ub_state_name' fullname='com.hurlant.util.der:Type2/ub_state_name' type='int' isStatic='true' isConst='true' defaultValue='128' >
</field>
<field name='ub_surname_length' fullname='com.hurlant.util.der:Type2/ub_surname_length' type='int' isStatic='true' isConst='true' defaultValue='40' >
</field>
<field name='ub_terminal_id_length' fullname='com.hurlant.util.der:Type2/ub_terminal_id_length' type='int' isStatic='true' isConst='true' defaultValue='24' >
</field>
<field name='ub_title' fullname='com.hurlant.util.der:Type2/ub_title' type='int' isStatic='true' isConst='true' defaultValue='64' >
</field>
<field name='ub_unformatted_address_length' fullname='com.hurlant.util.der:Type2/ub_unformatted_address_length' type='int' isStatic='true' isConst='true' defaultValue='180' >
</field>
<field name='ub_x121_address_length' fullname='com.hurlant.util.der:Type2/ub_x121_address_length' type='int' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='us' fullname='com.hurlant.util.der:Type2/us' type='String' isStatic='true' isConst='true' defaultValue='840' >
</field>
<field name='x9_57' fullname='com.hurlant.util.der:Type2/x9_57' type='String' isStatic='true' isConst='true' defaultValue='10040' >
</field>
<field name='x9algorithm' fullname='com.hurlant.util.der:Type2/x9algorithm' type='String' isStatic='true' isConst='true' defaultValue='4' >
</field>
<packageRec name='com.hurlant.util.der.null' fullname='com.hurlant.util.der.null'>
<description><![CDATA[
 Sequence
 
 An ASN1 type for a Sequence, implemented as an Array
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='Sequence' fullname='com.hurlant.util.der:Sequence' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/der/Sequence.as' namespace='com.hurlant.util.der' access='public' baseclass='Object' interfaces='com.hurlant.util.der:IAsn1Type' isFinal='false' isDynamic='true' >
</classRec>
<method name='Sequence' fullname='com.hurlant.util.der:Sequence/Sequence' isStatic='false' isFinal='false' isOverride='false'  param_names='type;length' param_types='uint;uint' param_defaults='0x30;0x00' result_type='*'>
</method>
<method name='findAttributeValue' fullname='com.hurlant.util.der:Sequence/findAttributeValue' isStatic='false' isFinal='false' isOverride='false'  param_names='oid' param_types='String' param_defaults='undefined' result_type='com.hurlant.util.der:IAsn1Type'>
</method>
<method name='getLength' fullname='com.hurlant.util.der:Sequence/getLength' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getType' fullname='com.hurlant.util.der:Sequence/getType' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='toDER' fullname='com.hurlant.util.der:Sequence/toDER' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
</method>
<method name='toString' fullname='com.hurlant.util.der:Sequence/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='len' fullname='com.hurlant.util.der:Sequence/protected:len' type='uint' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='com.hurlant.util.der:Sequence/protected:type' type='uint' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.util.der.null' fullname='com.hurlant.util.der.null'>
<description><![CDATA[
 PrintableString
 
 An ASN1 type for a PrintableString, held within a String
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='PrintableString' fullname='com.hurlant.util.der:PrintableString' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/der/PrintableString.as' namespace='com.hurlant.util.der' access='public' baseclass='Object' interfaces='com.hurlant.util.der:IAsn1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='PrintableString' fullname='com.hurlant.util.der:PrintableString/PrintableString' isStatic='false' isFinal='false' isOverride='false'  param_names='type;length' param_types='uint;uint' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='getLength' fullname='com.hurlant.util.der:PrintableString/getLength' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getString' fullname='com.hurlant.util.der:PrintableString/getString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getType' fullname='com.hurlant.util.der:PrintableString/getType' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='setString' fullname='com.hurlant.util.der:PrintableString/setString' isStatic='false' isFinal='false' isOverride='false'  param_names='s' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='toDER' fullname='com.hurlant.util.der:PrintableString/toDER' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
</method>
<method name='toString' fullname='com.hurlant.util.der:PrintableString/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='len' fullname='com.hurlant.util.der:PrintableString/protected:len' type='uint' isStatic='false' isConst='false' >
</field>
<field name='str' fullname='com.hurlant.util.der:PrintableString/protected:str' type='String' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='com.hurlant.util.der:PrintableString/protected:type' type='uint' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.util.der.null' fullname='com.hurlant.util.der.null'>
<description><![CDATA[
 ByteString
 
 An ASN1 type for a ByteString, represented with a ByteArray
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='ByteString' fullname='com.hurlant.util.der:ByteString' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/der/ByteString.as' namespace='com.hurlant.util.der' access='public' baseclass='flash.utils:ByteArray' interfaces='com.hurlant.util.der:IAsn1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='ByteString' fullname='com.hurlant.util.der:ByteString/ByteString' isStatic='false' isFinal='false' isOverride='false'  param_names='type;length' param_types='uint;uint' param_defaults='0x04;0x00' result_type='*'>
</method>
<method name='getLength' fullname='com.hurlant.util.der:ByteString/getLength' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getType' fullname='com.hurlant.util.der:ByteString/getType' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='toDER' fullname='com.hurlant.util.der:ByteString/toDER' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
</method>
<method name='toString' fullname='com.hurlant.util.der:ByteString/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<field name='len' fullname='com.hurlant.util.der:ByteString/private:len' type='uint' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='com.hurlant.util.der:ByteString/private:type' type='uint' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.util.der.null' fullname='com.hurlant.util.der.null'>
<description><![CDATA[
 Type
 
 A few Asn-1 structures
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='Type' fullname='com.hurlant.util.der:Type' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/der/Type.as' namespace='com.hurlant.util.der' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<field name='CERTIFICATE' fullname='com.hurlant.util.der:Type/CERTIFICATE' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='RSA_PUBLIC_KEY' fullname='com.hurlant.util.der:Type/RSA_PUBLIC_KEY' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='RSA_SIGNATURE' fullname='com.hurlant.util.der:Type/RSA_SIGNATURE' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='TLS_CERT' fullname='com.hurlant.util.der:Type/TLS_CERT' type='Array' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='test' fullname='com.hurlant.util.der:Type/private:test' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<packageRec name='com.hurlant.util.der.null' fullname='com.hurlant.util.der.null'>
<description><![CDATA[
 Set
 
 An ASN1 type for an Set, that extends a Sequence
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='Set' fullname='com.hurlant.util.der:Set' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/der/Set.as' namespace='com.hurlant.util.der' access='public' baseclass='com.hurlant.util.der:Sequence' interfaces='com.hurlant.util.der:IAsn1Type' isFinal='false' isDynamic='true' >
</classRec>
<method name='Set' fullname='com.hurlant.util.der:Set/Set' isStatic='false' isFinal='false' isOverride='false'  param_names='type;length' param_types='uint;uint' param_defaults='0x31;0x00' result_type='*'>
</method>
<method name='toString' fullname='com.hurlant.util.der:Set/toString' isStatic='false' isFinal='false' isOverride='true'  result_type='String'>
</method>
<packageRec name='com.hurlant.util.der.null' fullname='com.hurlant.util.der.null'>
<description><![CDATA[
 DER
 
 A basic class to parse DER structures.
 It is very incomplete, but sufficient to extract whatever data we need so far.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='DER' fullname='com.hurlant.util.der:DER' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/der/DER.as' namespace='com.hurlant.util.der' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 DER for dummies:
	 http://luca.ntop.org/Teaching/Appunti/asn1.html
	 
	 This class does the bare minimum to get by. if that.
	 ]]></description>
</classRec>
<method name='getLengthOfNextElement' fullname='com.hurlant.util.der:DER/private:getLengthOfNextElement' isStatic='true' isFinal='false' isOverride='false'  param_names='b' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='int'>
</method>
<method name='isConstructedType' fullname='com.hurlant.util.der:DER/private:isConstructedType' isStatic='true' isFinal='false' isOverride='false'  param_names='b' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='parse' fullname='com.hurlant.util.der:DER/parse' isStatic='true' isFinal='false' isOverride='false'  param_names='der;structure' param_types='flash.utils:ByteArray;*' param_defaults='undefined;null' result_type='com.hurlant.util.der:IAsn1Type'>
</method>
<method name='wrapDER' fullname='com.hurlant.util.der:DER/wrapDER' isStatic='true' isFinal='false' isOverride='false'  param_names='type;data' param_types='int;flash.utils:ByteArray' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
</method>
<field name='indent' fullname='com.hurlant.util.der:DER/indent' type='String' isStatic='true' isConst='false' defaultValue='' >
</field>
<packageRec name='com.hurlant.util.der.null' fullname='com.hurlant.util.der.null'>
<description><![CDATA[
 Integer
 
 An ASN1 type for an Integer, represented with a BigInteger
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='Integer' fullname='com.hurlant.util.der:Integer' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/der/Integer.as' namespace='com.hurlant.util.der' access='public' baseclass='com.hurlant.math:BigInteger' interfaces='com.hurlant.util.der:IAsn1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='Integer' fullname='com.hurlant.util.der:Integer/Integer' isStatic='false' isFinal='false' isOverride='false'  param_names='type;length;b' param_types='uint;uint;flash.utils:ByteArray' param_defaults='undefined;undefined;undefined' result_type='*'>
</method>
<method name='getLength' fullname='com.hurlant.util.der:Integer/getLength' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getType' fullname='com.hurlant.util.der:Integer/getType' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='toDER' fullname='com.hurlant.util.der:Integer/toDER' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
</method>
<method name='toString' fullname='com.hurlant.util.der:Integer/toString' isStatic='false' isFinal='false' isOverride='true'  param_names='radix' param_types='Number' param_defaults='0' result_type='String'>
</method>
<field name='len' fullname='com.hurlant.util.der:Integer/private:len' type='uint' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='com.hurlant.util.der:Integer/private:type' type='uint' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.util.der.null' fullname='com.hurlant.util.der.null'>
<description><![CDATA[
 ObjectIdentifier
 
 An ASN1 type for an ObjectIdentifier
 We store the oid in an Array.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='ObjectIdentifier' fullname='com.hurlant.util.der:ObjectIdentifier' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/der/ObjectIdentifier.as' namespace='com.hurlant.util.der' access='public' baseclass='Object' interfaces='com.hurlant.util.der:IAsn1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='ObjectIdentifier' fullname='com.hurlant.util.der:ObjectIdentifier/ObjectIdentifier' isStatic='false' isFinal='false' isOverride='false'  param_names='type;length;b' param_types='uint;uint;*' param_defaults='0;0;null' result_type='*'>
</method>
<method name='dump' fullname='com.hurlant.util.der:ObjectIdentifier/dump' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='generate' fullname='com.hurlant.util.der:ObjectIdentifier/private:generate' isStatic='false' isFinal='false' isOverride='false'  param_names='s' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='getLength' fullname='com.hurlant.util.der:ObjectIdentifier/getLength' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='getType' fullname='com.hurlant.util.der:ObjectIdentifier/getType' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='parse' fullname='com.hurlant.util.der:ObjectIdentifier/private:parse' isStatic='false' isFinal='false' isOverride='false'  param_names='b' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='void'>
</method>
<method name='toDER' fullname='com.hurlant.util.der:ObjectIdentifier/toDER' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.utils:ByteArray'>
</method>
<method name='toString' fullname='com.hurlant.util.der:ObjectIdentifier/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='len' fullname='com.hurlant.util.der:ObjectIdentifier/private:len' type='uint' isStatic='false' isConst='false' >
</field>
<field name='oid' fullname='com.hurlant.util.der:ObjectIdentifier/private:oid' type='Array' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='com.hurlant.util.der:ObjectIdentifier/private:type' type='uint' isStatic='false' isConst='false' >
</field>
<method name='any' fullname='com.hurlant.util.asn1.parser:any' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='bitString' fullname='com.hurlant.util.asn1.parser:bitString' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='bmpString' fullname='com.hurlant.util.asn1.parser:bmpString' isStatic='false' isFinal='false' isOverride='false'  param_names='size;size2' param_types='int;int' param_defaults='unknown;0' result_type='com.hurlant.util.asn1.type:BMPStringType'>
</method>
<method name='boolean' fullname='com.hurlant.util.asn1.parser:boolean' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='choice' fullname='com.hurlant.util.asn1.parser:choice' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='restParam' param_defaults='undefined' result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='defaultValue' fullname='com.hurlant.util.asn1.parser:defaultValue' isStatic='false' isFinal='false' isOverride='false'  param_names='value;o' param_types='*;com.hurlant.util.asn1.type:ASN1Type' param_defaults='undefined;undefined' result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='explicitTag' fullname='com.hurlant.util.asn1.parser:explicitTag' isStatic='false' isFinal='false' isOverride='false'  param_names='v;c;o' param_types='int;int;com.hurlant.util.asn1.type:ASN1Type' param_defaults='undefined;undefined;undefined' result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='extract' fullname='com.hurlant.util.asn1.parser:extract' isStatic='false' isFinal='false' isOverride='false'  param_names='o' param_types='com.hurlant.util.asn1.type:ASN1Type' param_defaults='undefined' result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='generalizedTime' fullname='com.hurlant.util.asn1.parser:generalizedTime' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.util.asn1.type:GeneralizedTimeType'>
</method>
<method name='ia5String' fullname='com.hurlant.util.asn1.parser:ia5String' isStatic='false' isFinal='false' isOverride='false'  param_names='size;size2' param_types='int;int' param_defaults='unknown;0' result_type='com.hurlant.util.asn1.type:IA5StringType'>
</method>
<method name='implicitTag' fullname='com.hurlant.util.asn1.parser:implicitTag' isStatic='false' isFinal='false' isOverride='false'  param_names='v;c;o' param_types='int;int;com.hurlant.util.asn1.type:ASN1Type' param_defaults='undefined;undefined;undefined' result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='integer' fullname='com.hurlant.util.asn1.parser:integer' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='nulll' fullname='com.hurlant.util.asn1.parser:nulll' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.util.asn1.type:NullType'>
</method>
<method name='octetString' fullname='com.hurlant.util.asn1.parser:octetString' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='oid' fullname='com.hurlant.util.asn1.parser:oid' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='restParam' param_defaults='undefined' result_type='com.hurlant.util.asn1.type:OIDType'>
</method>
<method name='optional' fullname='com.hurlant.util.asn1.parser:optional' isStatic='false' isFinal='false' isOverride='false'  param_names='o' param_types='com.hurlant.util.asn1.type:ASN1Type' param_defaults='undefined' result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='printableString' fullname='com.hurlant.util.asn1.parser:printableString' isStatic='false' isFinal='false' isOverride='false'  param_names='size;size2' param_types='int;int' param_defaults='unknown;0' result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='sequenceOf' fullname='com.hurlant.util.asn1.parser:sequenceOf' isStatic='false' isFinal='false' isOverride='false'  param_names='t;min;max' param_types='com.hurlant.util.asn1.type:ASN1Type;uint;uint' param_defaults='undefined;unknown;unknown' result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='sequence' fullname='com.hurlant.util.asn1.parser:sequence' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='restParam' param_defaults='undefined' result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='setOf' fullname='com.hurlant.util.asn1.parser:setOf' isStatic='false' isFinal='false' isOverride='false'  param_names='type;min;max' param_types='com.hurlant.util.asn1.type:ASN1Type;uint;uint' param_defaults='undefined;unknown;unknown' result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='teletexString' fullname='com.hurlant.util.asn1.parser:teletexString' isStatic='false' isFinal='false' isOverride='false'  param_names='size;size2' param_types='int;int' param_defaults='unknown;0' result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='universalString' fullname='com.hurlant.util.asn1.parser:universalString' isStatic='false' isFinal='false' isOverride='false'  param_names='size;size2' param_types='int;int' param_defaults='unknown;0' result_type='com.hurlant.util.asn1.type:UniversalStringType'>
</method>
<method name='utcTime' fullname='com.hurlant.util.asn1.parser:utcTime' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.util.asn1.type:UTCTimeType'>
</method>
<method name='utf8String' fullname='com.hurlant.util.asn1.parser:utf8String' isStatic='false' isFinal='false' isOverride='false'  param_names='size;size2' param_types='int;int' param_defaults='unknown;0' result_type='com.hurlant.util.asn1.type:UTF8StringType'>
</method>
<packageRec name='com.hurlant.crypto.cert.null' fullname='com.hurlant.crypto.cert.null'>
<description><![CDATA[
 X509CertificateCollection
 
 A class to store and index X509 Certificates by Subject.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='X509CertificateCollection' fullname='com.hurlant.crypto.cert:X509CertificateCollection' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/cert/X509CertificateCollection.as' namespace='com.hurlant.crypto.cert' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='X509CertificateCollection' fullname='com.hurlant.crypto.cert:X509CertificateCollection/X509CertificateCollection' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='addCertificate' fullname='com.hurlant.crypto.cert:X509CertificateCollection/addCertificate' isStatic='false' isFinal='false' isOverride='false'  param_names='cert' param_types='com.hurlant.crypto.cert:X509Certificate' param_defaults='undefined' result_type='void'>
<description><![CDATA[
		 Adds a X509 certificate to the collection.
		 This call will force the certificate to be parsed.
		 
		 ]]></description>
<param><![CDATA[cert		A X509 certificate
		 
		 ]]></param>
</method>
<method name='addPEMCertificate' fullname='com.hurlant.crypto.cert:X509CertificateCollection/addPEMCertificate' isStatic='false' isFinal='false' isOverride='false'  param_names='name;subject;pem' param_types='String;String;String' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
		 Mostly meant for built-in CA loading.
		 This entry-point allows to index CAs without parsing them.
		 
		 ]]></description>
<param><![CDATA[name		A friendly name. not currently used
		 ]]></param>
<param><![CDATA[subject	base64 DER encoded Subject principal for the Cert
		 ]]></param>
<param><![CDATA[pem		PEM encoded certificate data
		 
		 ]]></param>
</method>
<method name='getCertificate' fullname='com.hurlant.crypto.cert:X509CertificateCollection/getCertificate' isStatic='false' isFinal='false' isOverride='false'  param_names='subject' param_types='String' param_defaults='undefined' result_type='com.hurlant.crypto.cert:X509Certificate'>
<description><![CDATA[
		 Returns a X509 Certificate present in the collection, given
		 a base64 DER encoded X500 Subject principal
		 
		 ]]></description>
<param><![CDATA[subject	A Base64 DER-encoded Subject principal
		 ]]></param>
<return><![CDATA[A matching certificate, or null.
		 
		 ]]></return>
</method>
<field name='_map' fullname='com.hurlant.crypto.cert:X509CertificateCollection/private:_map' type='Object' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.cert.null' fullname='com.hurlant.crypto.cert.null'>
<description><![CDATA[
 MozillaRootCertificates
  A list of built-in Certificate Authorities,
 pilfered from Mozilla. 
  See certs/tool/grabRootCAs.pl for details.
 
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='MozillaRootCertificates' fullname='com.hurlant.crypto.cert:MozillaRootCertificates' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/cert/MozillaRootCertificates.as' namespace='com.hurlant.crypto.cert' access='public' baseclass='com.hurlant.crypto.cert:X509CertificateCollection' isFinal='false' isDynamic='false' >
</classRec>
<method name='MozillaRootCertificates' fullname='com.hurlant.crypto.cert:MozillaRootCertificates/MozillaRootCertificates' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='addCertificate' fullname='com.hurlant.crypto.cert:MozillaRootCertificates/addCertificate' isStatic='false' isFinal='false' isOverride='true'  param_names='cert' param_types='com.hurlant.crypto.cert:X509Certificate' param_defaults='undefined' result_type='void'>
</method>
<method name='addPEMCertificate' fullname='com.hurlant.crypto.cert:MozillaRootCertificates/addPEMCertificate' isStatic='false' isFinal='false' isOverride='true'  param_names='name;subject;pem' param_types='String;String;String' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<packageRec name='com.hurlant.crypto.cert.null' fullname='com.hurlant.crypto.cert.null'>
<description><![CDATA[
 X509Certificate
 
 A representation for a X509 Certificate, with
 methods to parse, verify and sign it.
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='X509Certificate' fullname='com.hurlant.crypto.cert:X509Certificate' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/cert/X509Certificate.as' namespace='com.hurlant.crypto.cert' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='X509Certificate' fullname='com.hurlant.crypto.cert:X509Certificate/X509Certificate' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='*' param_defaults='undefined' result_type='*'>
</method>
<method name='getAlgorithmIdentifier' fullname='com.hurlant.crypto.cert:X509Certificate/getAlgorithmIdentifier' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getCommonName' fullname='com.hurlant.crypto.cert:X509Certificate/getCommonName' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='getIssuerPrincipal' fullname='com.hurlant.crypto.cert:X509Certificate/getIssuerPrincipal' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Returns an issuer principal, as an opaque base64 string.
		 This is only used to quickly find matching parent certificates.
		 
		 Note that this assumes X509 DER-encoded certificates are uniquely encoded,
		 as we look for exact matches between Issuer and Subject fields.
		 
		 ]]></description>
</method>
<method name='getNotAfter' fullname='com.hurlant.crypto.cert:X509Certificate/getNotAfter' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
</method>
<method name='getNotBefore' fullname='com.hurlant.crypto.cert:X509Certificate/getNotBefore' isStatic='false' isFinal='false' isOverride='false'  result_type='Date'>
</method>
<method name='getPublicKey' fullname='com.hurlant.crypto.cert:X509Certificate/getPublicKey' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.crypto.rsa:RSAKey'>
</method>
<method name='getSubjectPrincipal' fullname='com.hurlant.crypto.cert:X509Certificate/getSubjectPrincipal' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[
		 Returns a subject principal, as an opaque base64 string.
		 This is only used as a hash key for known certificates.
		 
		 Note that this assumes X509 DER-encoded certificates are uniquely encoded,
		 as we look for exact matches between Issuer and Subject fields.
		 
		 ]]></description>
</method>
<method name='isSelfSigned' fullname='com.hurlant.crypto.cert:X509Certificate/isSelfSigned' isStatic='false' isFinal='false' isOverride='false'  param_names='time' param_types='Date' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='isSigned' fullname='com.hurlant.crypto.cert:X509Certificate/isSigned' isStatic='false' isFinal='false' isOverride='false'  param_names='store;CAs;time' param_types='com.hurlant.crypto.cert:X509CertificateCollection;com.hurlant.crypto.cert:X509CertificateCollection;Date' param_defaults='undefined;undefined;null' result_type='Boolean'>
</method>
<method name='load' fullname='com.hurlant.crypto.cert:X509Certificate/private:load' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='signCertificate' fullname='com.hurlant.crypto.cert:X509Certificate/private:signCertificate' isStatic='false' isFinal='false' isOverride='false'  param_names='key;algo' param_types='com.hurlant.crypto.rsa:RSAKey;String' param_defaults='undefined;undefined' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 This isn't used anywhere so far.
		 It would become useful if we started to offer facilities
		 to generate and sign X509 certificates.
		 
		 ]]></description>
<param><![CDATA[key
		 ]]></param>
<param><![CDATA[algo
		 ]]></param>
<return><![CDATA[
		 
		 ]]></return>
</method>
<method name='verifyCertificate' fullname='com.hurlant.crypto.cert:X509Certificate/private:verifyCertificate' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='com.hurlant.crypto.rsa:RSAKey' param_defaults='undefined' result_type='Boolean'>
</method>
<field name='_loaded' fullname='com.hurlant.crypto.cert:X509Certificate/private:_loaded' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_obj2' fullname='com.hurlant.crypto.cert:X509Certificate/private:_obj2' type='Object' isStatic='false' isConst='false' >
</field>
<field name='_param' fullname='com.hurlant.crypto.cert:X509Certificate/private:_param' type='' isStatic='false' isConst='false' >
</field>
<packageRec name='com.hurlant.crypto.rsa.null' fullname='com.hurlant.crypto.rsa.null'>
<description><![CDATA[
 RSAKey
 
 An ActionScript 3 implementation of RSA + PKCS#1 (light version)
 Copyright (c) 2007 Henri Torgemane
 
 Derived from:
 		The jsbn library, Copyright (c) 2003-2005 Tom Wu
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='RSAKey' fullname='com.hurlant.crypto.rsa:RSAKey' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/rsa/RSAKey.as' namespace='com.hurlant.crypto.rsa' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 Current limitations:
	 exponent must be smaller than 2^31.
	 ]]></description>
</classRec>
<method name='RSAKey' fullname='com.hurlant.crypto.rsa:RSAKey/RSAKey' isStatic='false' isFinal='false' isOverride='false'  param_names='N;E;D;P;Q;DP;DQ;C' param_types='com.hurlant.math:BigInteger;int;com.hurlant.math:BigInteger;com.hurlant.math:BigInteger;com.hurlant.math:BigInteger;com.hurlant.math:BigInteger;com.hurlant.math:BigInteger;com.hurlant.math:BigInteger' param_defaults='undefined;undefined;null;null;null;null;null;null' result_type='*'>
</method>
<method name='_decrypt' fullname='com.hurlant.crypto.rsa:RSAKey/private:_decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='op;src;dst;length;pad;padType' param_types='Function;flash.utils:ByteArray;flash.utils:ByteArray;uint;Function;int' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
</method>
<method name='_encrypt' fullname='com.hurlant.crypto.rsa:RSAKey/private:_encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='op;src;dst;length;pad;padType' param_types='Function;flash.utils:ByteArray;flash.utils:ByteArray;uint;Function;int' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
</method>
<method name='bigRandom' fullname='com.hurlant.crypto.rsa:RSAKey/protected:bigRandom' isStatic='true' isFinal='false' isOverride='false'  param_names='bits;rnd' param_types='int;com.hurlant.crypto.prng:Random' param_defaults='undefined;undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='decrypt' fullname='com.hurlant.crypto.rsa:RSAKey/decrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src;dst;length;pad' param_types='flash.utils:ByteArray;flash.utils:ByteArray;uint;Function' param_defaults='undefined;undefined;undefined;null' result_type='void'>
</method>
<method name='dispose' fullname='com.hurlant.crypto.rsa:RSAKey/dispose' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='doPrivate2' fullname='com.hurlant.crypto.rsa:RSAKey/protected:doPrivate2' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='doPrivate' fullname='com.hurlant.crypto.rsa:RSAKey/protected:doPrivate' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='doPublic' fullname='com.hurlant.crypto.rsa:RSAKey/protected:doPublic' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='com.hurlant.math:BigInteger' param_defaults='undefined' result_type='com.hurlant.math:BigInteger'>
</method>
<method name='dump' fullname='com.hurlant.crypto.rsa:RSAKey/dump' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='encrypt' fullname='com.hurlant.crypto.rsa:RSAKey/encrypt' isStatic='false' isFinal='false' isOverride='false'  param_names='src;dst;length;pad' param_types='flash.utils:ByteArray;flash.utils:ByteArray;uint;Function' param_defaults='undefined;undefined;undefined;null' result_type='void'>
</method>
<method name='generate' fullname='com.hurlant.crypto.rsa:RSAKey/generate' isStatic='true' isFinal='false' isOverride='false'  param_names='B;E' param_types='uint;String' param_defaults='undefined;undefined' result_type='com.hurlant.crypto.rsa:RSAKey'>
<description><![CDATA[
		 
		 note: We should have a "nice" variant of this function that takes a callback,
		 		and perform the computation is small fragments, to keep the web browser
		 		usable.
		 
		 ]]></description>
<param><![CDATA[B
		 ]]></param>
<param><![CDATA[E
		 ]]></param>
<return><![CDATA[a new random private key B bits long, using public expt E
		 
		 ]]></return>
</method>
<method name='getBlockSize' fullname='com.hurlant.crypto.rsa:RSAKey/getBlockSize' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
</method>
<method name='parsePrivateKey' fullname='com.hurlant.crypto.rsa:RSAKey/parsePrivateKey' isStatic='true' isFinal='false' isOverride='false'  param_names='N;E;D;P;Q;DMP1;DMQ1;IQMP' param_types='String;String;String;String;String;String;String;String' param_defaults='undefined;undefined;undefined;null;null;null;null;null' result_type='com.hurlant.crypto.rsa:RSAKey'>
</method>
<method name='parsePublicKey' fullname='com.hurlant.crypto.rsa:RSAKey/parsePublicKey' isStatic='true' isFinal='false' isOverride='false'  param_names='N;E' param_types='String;String' param_defaults='undefined;undefined' result_type='com.hurlant.crypto.rsa:RSAKey'>
</method>
<method name='pkcs1pad' fullname='com.hurlant.crypto.rsa:RSAKey/private:pkcs1pad' isStatic='false' isFinal='false' isOverride='false'  param_names='src;end;n;type' param_types='flash.utils:ByteArray;int;uint;uint' param_defaults='undefined;undefined;undefined;0x02' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 PKCS#1 pad. type 1 (0xff) or 2, random.
		 puts as much data from src into it, leaves what doesn't fit alone.
		 ]]></description>
</method>
<method name='pkcs1unpad' fullname='com.hurlant.crypto.rsa:RSAKey/private:pkcs1unpad' isStatic='false' isFinal='false' isOverride='false'  param_names='src;n;type' param_types='com.hurlant.math:BigInteger;uint;uint' param_defaults='undefined;undefined;0x02' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[src
		 ]]></param>
<param><![CDATA[n
		 ]]></param>
<param><![CDATA[type Not used.
		 ]]></param>
<return><![CDATA[
		 
		 ]]></return>
</method>
<method name='rawpad' fullname='com.hurlant.crypto.rsa:RSAKey/rawpad' isStatic='false' isFinal='false' isOverride='false'  param_names='src;end;n;type' param_types='flash.utils:ByteArray;int;uint;uint' param_defaults='undefined;undefined;undefined;0' result_type='flash.utils:ByteArray'>
<description><![CDATA[
		 Raw pad.
		 ]]></description>
</method>
<method name='rawunpad' fullname='com.hurlant.crypto.rsa:RSAKey/rawunpad' isStatic='false' isFinal='false' isOverride='false'  param_names='src;n;type' param_types='com.hurlant.math:BigInteger;uint;uint' param_defaults='undefined;undefined;0' result_type='flash.utils:ByteArray'>
</method>
<method name='sign' fullname='com.hurlant.crypto.rsa:RSAKey/sign' isStatic='false' isFinal='false' isOverride='false'  param_names='src;dst;length;pad' param_types='flash.utils:ByteArray;flash.utils:ByteArray;uint;Function' param_defaults='undefined;undefined;undefined;null' result_type='void'>
</method>
<method name='toString' fullname='com.hurlant.crypto.rsa:RSAKey/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='verify' fullname='com.hurlant.crypto.rsa:RSAKey/verify' isStatic='false' isFinal='false' isOverride='false'  param_names='src;dst;length;pad' param_types='flash.utils:ByteArray;flash.utils:ByteArray;uint;Function' param_defaults='undefined;undefined;undefined;null' result_type='void'>
</method>
<field name='canDecrypt' fullname='com.hurlant.crypto.rsa:RSAKey/protected:canDecrypt' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='canEncrypt' fullname='com.hurlant.crypto.rsa:RSAKey/protected:canEncrypt' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='coeff' fullname='com.hurlant.crypto.rsa:RSAKey/coeff' type='com.hurlant.math:BigInteger' isStatic='false' isConst='false' >
</field>
<field name='d' fullname='com.hurlant.crypto.rsa:RSAKey/d' type='com.hurlant.math:BigInteger' isStatic='false' isConst='false' >
</field>
<field name='dmp1' fullname='com.hurlant.crypto.rsa:RSAKey/dmp1' type='com.hurlant.math:BigInteger' isStatic='false' isConst='false' >
</field>
<field name='dmq1' fullname='com.hurlant.crypto.rsa:RSAKey/dmq1' type='com.hurlant.math:BigInteger' isStatic='false' isConst='false' >
</field>
<field name='e' fullname='com.hurlant.crypto.rsa:RSAKey/e' type='int' isStatic='false' isConst='false' >
</field>
<field name='n' fullname='com.hurlant.crypto.rsa:RSAKey/n' type='com.hurlant.math:BigInteger' isStatic='false' isConst='false' >
</field>
<field name='p' fullname='com.hurlant.crypto.rsa:RSAKey/p' type='com.hurlant.math:BigInteger' isStatic='false' isConst='false' >
</field>
<field name='q' fullname='com.hurlant.crypto.rsa:RSAKey/q' type='com.hurlant.math:BigInteger' isStatic='false' isConst='false' >
</field>
<classRec name='ASN1Type' fullname='com.hurlant.util.asn1.type:ASN1Type' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/ASN1Type.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 This class represents a chunk of ASN1 definition.
	 
	 This is used by parser to know what to look for.
	 
	 ]]></description>
<author><![CDATA[henri
	 
	 ]]></author>
</classRec>
<method name='ASN1Type' fullname='com.hurlant.util.asn1.type:ASN1Type/ASN1Type' isStatic='false' isFinal='false' isOverride='false'  param_names='tag' param_types='int' param_defaults='undefined' result_type='*'>
</method>
<method name='clone' fullname='com.hurlant.util.asn1.type:ASN1Type/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='com.hurlant.util.asn1.type:ASN1Type'>
</method>
<method name='fromDERContent' fullname='com.hurlant.util.asn1.type:ASN1Type/protected:fromDERContent' isStatic='false' isFinal='false' isOverride='false'  param_names='s;length' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='fromDER' fullname='com.hurlant.util.asn1.type:ASN1Type/fromDER' isStatic='false' isFinal='false' isOverride='false'  param_names='s;size' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[
		 Read an ASN-1 value from a ByteArray and return it
		 If we can't read a value that matches our type, we return null;
		 
		 ]]></description>
<param><![CDATA[s  a ByteArray containing some DER-encoded ASN-1 values.
		 ]]></param>
<return><![CDATA[an ASN1Value object representing the value read. or null.
		 
		 ]]></return>
</method>
<method name='fromDefaultValue' fullname='com.hurlant.util.asn1.type:ASN1Type/protected:fromDefaultValue' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='matches' fullname='com.hurlant.util.asn1.type:ASN1Type/matches' isStatic='false' isFinal='false' isOverride='false'  param_names='type;classValue;length' param_types='int;int;int' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
</method>
<method name='readDERLength' fullname='com.hurlant.util.asn1.type:ASN1Type/protected:readDERLength' isStatic='false' isFinal='false' isOverride='false'  param_names='s' param_types='flash.utils:ByteArray' param_defaults='undefined' result_type='int'>
</method>
<method name='readDERTag' fullname='com.hurlant.util.asn1.type:ASN1Type/protected:readDERTag' isStatic='false' isFinal='false' isOverride='false'  param_names='s;classValue;constructed;any' param_types='flash.utils:ByteArray;int;Boolean;Boolean' param_defaults='undefined;unknown;false;false' result_type='int'>
</method>
<field name='ANY' fullname='com.hurlant.util.asn1.type:ASN1Type/ANY' type='int' isStatic='true' isConst='true' defaultValue='-1' >
</field>
<field name='APPLICATION' fullname='com.hurlant.util.asn1.type:ASN1Type/APPLICATION' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='BIT_STRING' fullname='com.hurlant.util.asn1.type:ASN1Type/BIT_STRING' type='int' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='BMP_STRING' fullname='com.hurlant.util.asn1.type:ASN1Type/BMP_STRING' type='int' isStatic='true' isConst='true' defaultValue='30' >
</field>
<field name='BOOLEAN' fullname='com.hurlant.util.asn1.type:ASN1Type/BOOLEAN' type='int' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='CHOICE' fullname='com.hurlant.util.asn1.type:ASN1Type/CHOICE' type='int' isStatic='true' isConst='true' defaultValue='-2' >
</field>
<field name='CONTEXT' fullname='com.hurlant.util.asn1.type:ASN1Type/CONTEXT' type='int' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='EMBEDDED' fullname='com.hurlant.util.asn1.type:ASN1Type/EMBEDDED' type='int' isStatic='true' isConst='true' defaultValue='11' >
</field>
<field name='ENUMERATED' fullname='com.hurlant.util.asn1.type:ASN1Type/ENUMERATED' type='int' isStatic='true' isConst='true' defaultValue='10' >
</field>
<field name='EXTERNAL' fullname='com.hurlant.util.asn1.type:ASN1Type/EXTERNAL' type='int' isStatic='true' isConst='true' defaultValue='8' >
</field>
<field name='GENERALIZED_TIME' fullname='com.hurlant.util.asn1.type:ASN1Type/GENERALIZED_TIME' type='int' isStatic='true' isConst='true' defaultValue='24' >
</field>
<field name='GENERAL_STRING' fullname='com.hurlant.util.asn1.type:ASN1Type/GENERAL_STRING' type='int' isStatic='true' isConst='true' defaultValue='27' >
</field>
<field name='GRAPHIC_STRING' fullname='com.hurlant.util.asn1.type:ASN1Type/GRAPHIC_STRING' type='int' isStatic='true' isConst='true' defaultValue='25' >
</field>
<field name='IA5_STRING' fullname='com.hurlant.util.asn1.type:ASN1Type/IA5_STRING' type='int' isStatic='true' isConst='true' defaultValue='22' >
</field>
<field name='INTEGER' fullname='com.hurlant.util.asn1.type:ASN1Type/INTEGER' type='int' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='NULL' fullname='com.hurlant.util.asn1.type:ASN1Type/NULL' type='int' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='NUMERIC_STRING' fullname='com.hurlant.util.asn1.type:ASN1Type/NUMERIC_STRING' type='int' isStatic='true' isConst='true' defaultValue='18' >
</field>
<field name='OCTET_STRING' fullname='com.hurlant.util.asn1.type:ASN1Type/OCTET_STRING' type='int' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='ODT' fullname='com.hurlant.util.asn1.type:ASN1Type/ODT' type='int' isStatic='true' isConst='true' defaultValue='7' >
</field>
<field name='OID' fullname='com.hurlant.util.asn1.type:ASN1Type/OID' type='int' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='PRINTABLE_STRING' fullname='com.hurlant.util.asn1.type:ASN1Type/PRINTABLE_STRING' type='int' isStatic='true' isConst='true' defaultValue='19' >
</field>
<field name='PRIVATE' fullname='com.hurlant.util.asn1.type:ASN1Type/PRIVATE' type='int' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='REAL' fullname='com.hurlant.util.asn1.type:ASN1Type/REAL' type='int' isStatic='true' isConst='true' defaultValue='9' >
</field>
<field name='RESERVED' fullname='com.hurlant.util.asn1.type:ASN1Type/RESERVED' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='ROID' fullname='com.hurlant.util.asn1.type:ASN1Type/ROID' type='int' isStatic='true' isConst='true' defaultValue='13' >
</field>
<field name='SEQUENCE' fullname='com.hurlant.util.asn1.type:ASN1Type/SEQUENCE' type='int' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='SET' fullname='com.hurlant.util.asn1.type:ASN1Type/SET' type='int' isStatic='true' isConst='true' defaultValue='17' >
</field>
<field name='TELETEX_STRING' fullname='com.hurlant.util.asn1.type:ASN1Type/TELETEX_STRING' type='int' isStatic='true' isConst='true' defaultValue='20' >
</field>
<field name='UNIVERSAL_STRING' fullname='com.hurlant.util.asn1.type:ASN1Type/UNIVERSAL_STRING' type='int' isStatic='true' isConst='true' defaultValue='28' >
</field>
<field name='UNIVERSAL' fullname='com.hurlant.util.asn1.type:ASN1Type/UNIVERSAL' type='int' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='UNSTRUCTURED_NAME' fullname='com.hurlant.util.asn1.type:ASN1Type/UNSTRUCTURED_NAME' type='int' isStatic='true' isConst='true' defaultValue='31' >
</field>
<field name='UTC_TIME' fullname='com.hurlant.util.asn1.type:ASN1Type/UTC_TIME' type='int' isStatic='true' isConst='true' defaultValue='23' >
</field>
<field name='UTF8STRING' fullname='com.hurlant.util.asn1.type:ASN1Type/UTF8STRING' type='int' isStatic='true' isConst='true' defaultValue='12' >
</field>
<field name='VIDEOTEX_STRING' fullname='com.hurlant.util.asn1.type:ASN1Type/VIDEOTEX_STRING' type='int' isStatic='true' isConst='true' defaultValue='21' >
</field>
<field name='VISIBLE_STRING' fullname='com.hurlant.util.asn1.type:ASN1Type/VISIBLE_STRING' type='int' isStatic='true' isConst='true' defaultValue='26' >
</field>
<field name='defaultTag' fullname='com.hurlant.util.asn1.type:ASN1Type/defaultTag' type='Number' isStatic='false' isConst='false' >
</field>
<field name='defaultValue' fullname='com.hurlant.util.asn1.type:ASN1Type/defaultValue' type='' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='explicitClass' fullname='com.hurlant.util.asn1.type:ASN1Type/explicitClass' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='explicitTag' fullname='com.hurlant.util.asn1.type:ASN1Type/explicitTag' type='Number' isStatic='false' isConst='false' defaultValue='NaN' >
</field>
<field name='extract' fullname='com.hurlant.util.asn1.type:ASN1Type/extract' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='implicitClass' fullname='com.hurlant.util.asn1.type:ASN1Type/implicitClass' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='implicitTag' fullname='com.hurlant.util.asn1.type:ASN1Type/implicitTag' type='Number' isStatic='false' isConst='false' defaultValue='NaN' >
</field>
<field name='optional' fullname='com.hurlant.util.asn1.type:ASN1Type/optional' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='parsedTag' fullname='com.hurlant.util.asn1.type:ASN1Type/parsedTag' type='Number' isStatic='false' isConst='false' >
</field>
<classRec name='BitStringType' fullname='com.hurlant.util.asn1.type:BitStringType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/BitStringType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:ASN1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='BitStringType' fullname='com.hurlant.util.asn1.type:BitStringType/BitStringType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='fromDERContent' fullname='com.hurlant.util.asn1.type:BitStringType/protected:fromDERContent' isStatic='false' isFinal='false' isOverride='true'  param_names='s;length' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
</method>
<classRec name='OctetStringType' fullname='com.hurlant.util.asn1.type:OctetStringType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/OctetStringType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:ASN1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='OctetStringType' fullname='com.hurlant.util.asn1.type:OctetStringType/OctetStringType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='fromDERContent' fullname='com.hurlant.util.asn1.type:OctetStringType/protected:fromDERContent' isStatic='false' isFinal='false' isOverride='true'  param_names='s;length' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
</method>
<classRec name='AnyType' fullname='com.hurlant.util.asn1.type:AnyType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/AnyType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:ASN1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='AnyType' fullname='com.hurlant.util.asn1.type:AnyType/AnyType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='fromDERContent' fullname='com.hurlant.util.asn1.type:AnyType/protected:fromDERContent' isStatic='false' isFinal='false' isOverride='true'  param_names='s;length' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[
		 hmm. this is similar to what we used to do.
		 Typeless parsing. fun.
		 And yet, this is now somewhat harder to do. :(
		  
		 ]]></description>
<param><![CDATA[s
		 ]]></param>
<param><![CDATA[length
		 ]]></param>
<return><![CDATA[
		 
		 ]]></return>
</method>
<classRec name='OIDType' fullname='com.hurlant.util.asn1.type:OIDType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/OIDType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:ASN1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='OIDType' fullname='com.hurlant.util.asn1.type:OIDType/OIDType' isStatic='false' isFinal='false' isOverride='false'  param_names='s' param_types='String' param_defaults='null' result_type='*'>
</method>
<method name='fromDERContent' fullname='com.hurlant.util.asn1.type:OIDType/protected:fromDERContent' isStatic='false' isFinal='false' isOverride='true'  param_names='s;length' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[
		 I'm tempted to return fully defined OIDType objects
		 Altough that's a little bit weird.
		  
		 ]]></description>
<param><![CDATA[s
		 ]]></param>
<param><![CDATA[length
		 ]]></param>
<return><![CDATA[
		 
		 ]]></return>
</method>
<method name='toString' fullname='com.hurlant.util.asn1.type:OIDType/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='oid' fullname='com.hurlant.util.asn1.type:OIDType/oid' type='String' isStatic='false' isConst='false' defaultValue='null' >
</field>
<classRec name='SequenceType' fullname='com.hurlant.util.asn1.type:SequenceType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/SequenceType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:ASN1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='SequenceType' fullname='com.hurlant.util.asn1.type:SequenceType/SequenceType' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='*' param_defaults='null' result_type='*'>
</method>
<method name='fromDERContent' fullname='com.hurlant.util.asn1.type:SequenceType/protected:fromDERContent' isStatic='false' isFinal='false' isOverride='true'  param_names='s;length' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
</method>
<field name='childType' fullname='com.hurlant.util.asn1.type:SequenceType/childType' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='false' isConst='false' >
</field>
<field name='children' fullname='com.hurlant.util.asn1.type:SequenceType/children' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='GeneralizedTimeType' fullname='com.hurlant.util.asn1.type:GeneralizedTimeType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/GeneralizedTimeType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:ASN1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='GeneralizedTimeType' fullname='com.hurlant.util.asn1.type:GeneralizedTimeType/GeneralizedTimeType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<classRec name='ChoiceType' fullname='com.hurlant.util.asn1.type:ChoiceType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/ChoiceType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:ASN1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='ChoiceType' fullname='com.hurlant.util.asn1.type:ChoiceType/ChoiceType' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='Array' param_defaults='null' result_type='*'>
</method>
<method name='fromDER' fullname='com.hurlant.util.asn1.type:ChoiceType/fromDER' isStatic='false' isFinal='false' isOverride='true'  param_names='s;size' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
</method>
<field name='choices' fullname='com.hurlant.util.asn1.type:ChoiceType/choices' type='Array' isStatic='false' isConst='false' >
</field>
<classRec name='BooleanType' fullname='com.hurlant.util.asn1.type:BooleanType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/BooleanType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:ASN1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='BooleanType' fullname='com.hurlant.util.asn1.type:BooleanType/BooleanType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='fromDERContent' fullname='com.hurlant.util.asn1.type:BooleanType/protected:fromDERContent' isStatic='false' isFinal='false' isOverride='true'  param_names='s;length' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[s
		 ]]></param>
<param><![CDATA[length
		 ]]></param>
<return><![CDATA[a Boolean 
		 
		 ]]></return>
</method>
<classRec name='NullType' fullname='com.hurlant.util.asn1.type:NullType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/NullType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:ASN1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='NullType' fullname='com.hurlant.util.asn1.type:NullType/NullType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='fromDERContent' fullname='com.hurlant.util.asn1.type:NullType/protected:fromDERContent' isStatic='false' isFinal='false' isOverride='true'  param_names='s;length' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
</method>
<classRec name='UTCTimeType' fullname='com.hurlant.util.asn1.type:UTCTimeType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/UTCTimeType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:ASN1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='UTCTimeType' fullname='com.hurlant.util.asn1.type:UTCTimeType/UTCTimeType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='fromDERContent' fullname='com.hurlant.util.asn1.type:UTCTimeType/protected:fromDERContent' isStatic='false' isFinal='false' isOverride='true'  param_names='s;length' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
</method>
<classRec name='StringType' fullname='com.hurlant.util.asn1.type:StringType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/StringType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:ASN1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='StringType' fullname='com.hurlant.util.asn1.type:StringType/StringType' isStatic='false' isFinal='false' isOverride='false'  param_names='tag;size1;size2' param_types='int;int;int' param_defaults='undefined;unknown;0' result_type='*'>
</method>
<method name='fromDERContent' fullname='com.hurlant.util.asn1.type:StringType/protected:fromDERContent' isStatic='false' isFinal='false' isOverride='true'  param_names='s;length' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
</method>
<field name='size1' fullname='com.hurlant.util.asn1.type:StringType/size1' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='IntegerType' fullname='com.hurlant.util.asn1.type:IntegerType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/IntegerType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:ASN1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='IntegerType' fullname='com.hurlant.util.asn1.type:IntegerType/IntegerType' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='fromDERContent' fullname='com.hurlant.util.asn1.type:IntegerType/protected:fromDERContent' isStatic='false' isFinal='false' isOverride='true'  param_names='s;length' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
<description><![CDATA[
		 
		 ]]></description>
<param><![CDATA[s
		 ]]></param>
<param><![CDATA[length
		 ]]></param>
<return><![CDATA[a BigInteger or a int, if it fits within one. 
		 
		 ]]></return>
</method>
<classRec name='SetType' fullname='com.hurlant.util.asn1.type:SetType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/SetType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:ASN1Type' isFinal='false' isDynamic='false' >
</classRec>
<method name='SetType' fullname='com.hurlant.util.asn1.type:SetType/SetType' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='com.hurlant.util.asn1.type:ASN1Type' param_defaults='null' result_type='*'>
</method>
<method name='fromDERContent' fullname='com.hurlant.util.asn1.type:SetType/protected:fromDERContent' isStatic='false' isFinal='false' isOverride='true'  param_names='s;length' param_types='flash.utils:ByteArray;int' param_defaults='undefined;undefined' result_type='*'>
</method>
<field name='childType' fullname='com.hurlant.util.asn1.type:SetType/childType' type='com.hurlant.util.asn1.type:ASN1Type' isStatic='false' isConst='false' >
</field>
<classRec name='TeletexStringType' fullname='com.hurlant.util.asn1.type:TeletexStringType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/TeletexStringType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:StringType' isFinal='false' isDynamic='false' >
</classRec>
<method name='TeletexStringType' fullname='com.hurlant.util.asn1.type:TeletexStringType/TeletexStringType' isStatic='false' isFinal='false' isOverride='false'  param_names='size1;size2' param_types='int;int' param_defaults='unknown;0' result_type='*'>
</method>
<classRec name='BMPStringType' fullname='com.hurlant.util.asn1.type:BMPStringType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/BMPStringType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:StringType' isFinal='false' isDynamic='false' >
</classRec>
<method name='BMPStringType' fullname='com.hurlant.util.asn1.type:BMPStringType/BMPStringType' isStatic='false' isFinal='false' isOverride='false'  param_names='size1;size2' param_types='int;int' param_defaults='unknown;0' result_type='*'>
</method>
<classRec name='UTF8StringType' fullname='com.hurlant.util.asn1.type:UTF8StringType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/UTF8StringType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:StringType' isFinal='false' isDynamic='false' >
</classRec>
<method name='UTF8StringType' fullname='com.hurlant.util.asn1.type:UTF8StringType/UTF8StringType' isStatic='false' isFinal='false' isOverride='false'  param_names='size1;size2' param_types='int;int' param_defaults='unknown;0' result_type='*'>
</method>
<classRec name='PrintableStringType' fullname='com.hurlant.util.asn1.type:PrintableStringType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/PrintableStringType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:StringType' isFinal='false' isDynamic='false' >
</classRec>
<method name='PrintableStringType' fullname='com.hurlant.util.asn1.type:PrintableStringType/PrintableStringType' isStatic='false' isFinal='false' isOverride='false'  param_names='size1;size2' param_types='int;int' param_defaults='unknown;0' result_type='*'>
</method>
<classRec name='IA5StringType' fullname='com.hurlant.util.asn1.type:IA5StringType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/IA5StringType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:StringType' isFinal='false' isDynamic='false' >
</classRec>
<method name='IA5StringType' fullname='com.hurlant.util.asn1.type:IA5StringType/IA5StringType' isStatic='false' isFinal='false' isOverride='false'  param_names='size1;size2' param_types='int;int' param_defaults='unknown;0' result_type='*'>
</method>
<classRec name='UniversalStringType' fullname='com.hurlant.util.asn1.type:UniversalStringType' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/util/asn1/type/UniversalStringType.as' namespace='com.hurlant.util.asn1.type' access='public' baseclass='com.hurlant.util.asn1.type:StringType' isFinal='false' isDynamic='false' >
</classRec>
<method name='UniversalStringType' fullname='com.hurlant.util.asn1.type:UniversalStringType/UniversalStringType' isStatic='false' isFinal='false' isOverride='false'  param_names='size1;size2' param_types='int;int' param_defaults='unknown;0' result_type='*'>
</method>
<packageRec name='com.hurlant.crypto.null' fullname='com.hurlant.crypto.null'>
<description><![CDATA[
 Crypto
 
 An abstraction layer to instanciate our crypto algorithms
 Copyright (c) 2007 Henri Torgemane
 
 See LICENSE.txt for full license information.
 ]]></description>
</packageRec>
<classRec name='Crypto' fullname='com.hurlant.crypto:Crypto' sourcefile='/Users/byrne/project/aslib/as3crypto/src/com/hurlant/crypto/Crypto.as' namespace='com.hurlant.crypto' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
	 A class to make it easy to use the rest of the framework.
	 As a side-effect, using this class will cause most of the framework
	 to be linked into your application, which is not always what you want.
	 
	 If you want to optimize your download size, don't use this class.
	 (But feel free to read it to get ideas on how to get the algorithm you want.)
	 ]]></description>
</classRec>
<method name='Crypto' fullname='com.hurlant.crypto:Crypto/Crypto' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='getCipher' fullname='com.hurlant.crypto:Crypto/getCipher' isStatic='true' isFinal='false' isOverride='false'  param_names='name;key;pad' param_types='String;flash.utils:ByteArray;com.hurlant.crypto.symmetric:IPad' param_defaults='undefined;undefined;null' result_type='com.hurlant.crypto.symmetric:ICipher'>
<description><![CDATA[
		 Things that should work, among others:
		  "aes"
		  "aes-128-ecb"
		  "aes-128-cbc"
		  "aes-128-cfb"
		  "aes-128-cfb8"
		  "aes-128-ofb"
		  "aes-192-cfb"
		  "aes-256-ofb"
		  "blowfish-cbc"
		  "des-ecb"
		  "xtea"
		  "xtea-ecb"
		  "xtea-cbc"
		  "xtea-cfb"
		  "xtea-cfb8"
		  "xtea-ofb"
		  "rc4"
		  "simple-aes-cbc"
		 ]]></description>
</method>
<method name='getHMAC' fullname='com.hurlant.crypto:Crypto/getHMAC' isStatic='true' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='com.hurlant.crypto.hash:HMAC'>
<description><![CDATA[
		 Things that should work:
		 "sha1"
		 "md5-64"
		 "hmac-md5-96"
		 "hmac-sha1-128"
		 "hmac-sha256-192"
		 etc.
		 ]]></description>
</method>
<method name='getHash' fullname='com.hurlant.crypto:Crypto/getHash' isStatic='true' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='com.hurlant.crypto.hash:IHash'>
<description><![CDATA[
		 Things that should work:
		 "md5"
		 "sha"
		 "sha1"
		 "sha224"
		 "sha256"
		 ]]></description>
</method>
<method name='getKeySize' fullname='com.hurlant.crypto:Crypto/getKeySize' isStatic='true' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='uint'>
<description><![CDATA[
		 Returns the size of a key for a given cipher identifier.
		 ]]></description>
</method>
<method name='getMAC' fullname='com.hurlant.crypto:Crypto/getMAC' isStatic='true' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='com.hurlant.crypto.hash:MAC'>
</method>
<method name='getMode' fullname='com.hurlant.crypto:Crypto/private:getMode' isStatic='true' isFinal='false' isOverride='false'  param_names='name;alg;padding' param_types='String;com.hurlant.crypto.symmetric:ISymmetricKey;com.hurlant.crypto.symmetric:IPad' param_defaults='undefined;undefined;null' result_type='com.hurlant.crypto.symmetric:IMode'>
</method>
<method name='getPad' fullname='com.hurlant.crypto:Crypto/getPad' isStatic='true' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='com.hurlant.crypto.symmetric:IPad'>
</method>
<method name='getRSA' fullname='com.hurlant.crypto:Crypto/getRSA' isStatic='true' isFinal='false' isOverride='false'  param_names='E;M' param_types='String;String' param_defaults='undefined;undefined' result_type='com.hurlant.crypto.rsa:RSAKey'>
<description><![CDATA[ mostly useless.
		 ]]></description>
</method>
<field name='b64' fullname='com.hurlant.crypto:Crypto/private:b64' type='com.hurlant.util:Base64' isStatic='false' isConst='false' >
</field>
</asdoc>
